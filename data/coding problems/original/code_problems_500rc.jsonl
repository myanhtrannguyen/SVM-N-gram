{"id": "p03551", "problem": "Score : 300 points\n\n\nProblem StatementTakahashi is now competing in a programming contest, but he received TLE in a problem where the answer is YES or NO.\nWhen he checked the detailed status of the submission, there were N test cases in the problem, and the code received TLE in M of those cases.\nThen, he rewrote the code to correctly solve each of those M cases with 1/2 probability in 1900 milliseconds, and correctly solve each of the other N-M cases without fail in 100 milliseconds.\nNow, he goes through the following process:\n\nSubmit the code.\nWait until the code finishes execution on all the cases.\nIf the code fails to correctly solve some of the M cases, submit it again.\nRepeat until the code correctly solve all the cases in one submission.\n\nLet the expected value of the total execution time of the code be X milliseconds. Print X (as an integer).\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 100\n1 \\leq M \\leq {\\rm min}(N, 5)\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint X, the expected value of the total execution time of the code, as an integer. It can be proved that, under the constraints in this problem, X is an integer not exceeding 10^9.\n\n\n\n\n\n\nSample Input 11 1\n\n\n\n\n\nSample Output 13800\n\nIn this input, there is only one case. Takahashi will repeatedly submit the code that correctly solves this case with 1/2 probability in 1900 milliseconds.\nThe code will succeed in one attempt with 1/2 probability, in two attempts with 1/4 probability, and in three attempts with 1/8 probability, and so on.\nThus, the answer is 1900 \\times 1/2 + (2 \\times 1900) \\times 1/4 + (3 \\times 1900) \\times 1/8 + ... = 3800.\n\n\n\n\n\nSample Input 210 2\n\n\n\n\n\nSample Output 218400\n\nThe code will take 1900 milliseconds in each of the 2 cases, and 100 milliseconds in each of the 10-2=8 cases. The probability of the code correctly solving all the cases is 1/2 \\times 1/2 = 1/4.\n\n\n\n\n\nSample Input 3100 5\n\n\n\n\n\nSample Output 3608000"}
{"id": "p03552", "problem": "Score : 500 points\n\n\nProblem StatementWe have a deck consisting of N cards. Each card has an integer written on it. The integer on the i-th card from the top is a_i.\nTwo people X and Y will play a game using this deck. Initially, X has a card with Z written on it in his hand, and Y has a card with W written on it in his hand. Then, starting from X, they will alternately perform the following action:\n\nDraw some number of cards from the top of the deck. Then, discard the card in his hand and keep the last drawn card instead. Here, at least one card must be drawn.\n\nThe game ends when there is no more card in the deck. The score of the game is the absolute difference of the integers written on the cards in the two players' hand.\nX will play the game so that the score will be maximized, and Y will play the game so that the score will be minimized. What will be the score of the game?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 2000\n1 \\leq Z, W, a_i \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN Z W\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the score.\n\n\n\n\n\n\nSample Input 13 100 100\n10 1000 100\n\n\n\n\n\nSample Output 1900\n\nIf X draws two cards first, Y will draw the last card, and the score will be |1000 - 100| = 900.\n\n\n\n\n\nSample Input 23 100 1000\n10 100 100\n\n\n\n\n\nSample Output 2900\n\nIf X draws all the cards first, the score will be |1000 - 100| = 900.\n\n\n\n\n\nSample Input 35 1 1\n1 1 1 1 1\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 41 1 1\n1000000000\n\n\n\n\n\nSample Output 4999999999"}
{"id": "p03553", "problem": "Score : 700 points\n\n\nProblem StatementWe have N gemstones labeled 1 through N.\nYou can perform the following operation any number of times (possibly zero).\n\nSelect a positive integer x, and smash all the gems labeled with multiples of x.\n\nThen, for each i, if the gem labeled i remains without getting smashed, you will receive a_i yen (the currency of Japan).\nHowever, a_i may be negative, in which case you will be charged money.\nBy optimally performing the operation, how much yen can you earn?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 100\n|a_i| \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the maximum amount of money that can be earned.\n\n\n\n\n\n\nSample Input 16\n1 2 -6 4 5 3\n\n\n\n\n\nSample Output 112\n\nIt is optimal to smash Gem 3 and 6.\n\n\n\n\n\nSample Input 26\n100 -100 -100 -100 100 -100\n\n\n\n\n\nSample Output 2200\n\n\n\n\n\n\nSample Input 35\n-1 -2 -3 -4 -5\n\n\n\n\n\nSample Output 30\n\nIt is optimal to smash all the gems.\n\n\n\n\n\nSample Input 42\n-1000 100000\n\n\n\n\n\nSample Output 499000"}
{"id": "p03554", "problem": "Score : 1000 points\n\n\nProblem StatementYou are given a sequence a = \\{a_1, ..., a_N\\} with all zeros, and a sequence b = \\{b_1, ..., b_N\\} consisting of 0 and 1. The length of both is N.\nYou can perform Q kinds of operations. The i-th operation is as follows:\n\nReplace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1.\n\nMinimize the hamming distance between a and b, that is, the number of i such that a_i \\neq b_i, by performing some of the Q operations.\n\n\n\n\nConstraints\n1 \\leq N \\leq 200,000\nb consists of 0 and 1.\n1 \\leq Q \\leq 200,000\n1 \\leq l_i \\leq r_i \\leq N\nIf i \\neq j, either l_i \\neq l_j or r_i \\neq r_j.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nb_1 b_2 ... b_N\nQ\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n\n\n\n\nOutputPrint the minimum possible hamming distance.\n\n\n\n\n\n\nSample Input 13\n1 0 1\n1\n1 3\n\n\n\n\n\nSample Output 11\n\nIf you choose to perform the operation, a will become \\{1, 1, 1\\}, for a hamming distance of 1.\n\n\n\n\n\nSample Input 23\n1 0 1\n2\n1 1\n3 3\n\n\n\n\n\nSample Output 20\n\nIf both operations are performed, a will become \\{1, 0, 1\\}, for a hamming distance of 0.\n\n\n\n\n\nSample Input 33\n1 0 1\n2\n1 1\n2 3\n\n\n\n\n\nSample Output 31\n\n\n\n\n\n\nSample Input 45\n0 1 0 1 0\n1\n1 5\n\n\n\n\n\nSample Output 42\n\nIt may be optimal to perform no operation.\n\n\n\n\n\nSample Input 59\n0 1 0 1 1 1 0 1 0\n3\n1 4\n5 8\n6 7\n\n\n\n\n\nSample Output 53\n\n\n\n\n\n\nSample Input 615\n1 1 0 0 0 0 0 0 1 0 1 1 1 0 0\n9\n4 10\n13 14\n1 7\n4 14\n9 11\n2 6\n7 8\n3 12\n7 13\n\n\n\n\n\nSample Output 65\n\n\n\n\n\n\nSample Input 710\n0 0 0 1 0 0 1 1 1 0\n7\n1 4\n2 5\n1 3\n6 7\n9 9\n1 5\n7 9\n\n\n\n\n\nSample Output 71"}
{"id": "p03555", "problem": "Score : 100 points\n\n\nProblem StatementYou are given a grid with 2 rows and 3 columns of squares.\nThe color of the square at the i-th row and j-th column is represented by the character C_{ij}.\nWrite a program that prints YES if this grid remains the same when rotated 180 degrees, and prints NO otherwise.\n\n\n\n\nConstraints\nC_{i,j}(1 \\leq i \\leq 2, 1 \\leq j \\leq 3) is a lowercase English letter.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nC_{11}C_{12}C_{13}\nC_{21}C_{22}C_{23}\n\n\n\n\n\nOutputPrint YES if this grid remains the same when rotated 180 degrees; print NO otherwise.\n\n\n\n\n\n\nSample Input 1pot\ntop\n\n\n\n\n\nSample Output 1YES\n\nThis grid remains the same when rotated 180 degrees.\n\n\n\n\n\nSample Input 2tab\nbet\n\n\n\n\n\nSample Output 2NO\n\nThis grid does not remain the same when rotated 180 degrees.\n\n\n\n\n\nSample Input 3eye\neel\n\n\n\n\n\nSample Output 3NO"}
{"id": "p03556", "problem": "Score : 200 points\n\n\nProblem StatementFind the largest square number not exceeding N. Here, a square number is an integer that can be represented as the square of an integer.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^9\nN is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the largest square number not exceeding N.\n\n\n\n\n\n\nSample Input 110\n\n\n\n\n\nSample Output 19\n\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\n\n\n\n\n\nSample Input 281\n\n\n\n\n\nSample Output 281\n\n\n\n\n\n\nSample Input 3271828182\n\n\n\n\n\nSample Output 3271821169"}
{"id": "p03557", "problem": "Score : 300 points\n\n\nProblem StatementThe season for Snuke Festival has come again this year. First of all, Ringo will perform a ritual to summon Snuke. For the ritual, he needs an altar, which consists of three parts, one in each of the three categories: upper, middle and lower.\nHe has N parts for each of the three categories. The size of the i-th upper part is A_i, the size of the i-th middle part is B_i, and the size of the i-th lower part is C_i.\nTo build an altar, the size of the middle part must be strictly greater than that of the upper part, and the size of the lower part must be strictly greater than that of the middle part. On the other hand, any three parts that satisfy these conditions can be combined to form an altar.\nHow many different altars can Ringo build? Here, two altars are considered different when at least one of the three parts used is different.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\n1 \\leq C_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 ... A_N\nB_1 ... B_N\nC_1 ... C_N\n\n\n\n\n\nOutputPrint the number of different altars that Ringo can build.\n\n\n\n\n\n\nSample Input 12\n1 5\n2 4\n3 6\n\n\n\n\n\nSample Output 13\n\nThe following three altars can be built:\n\nUpper: 1-st part, Middle: 1-st part, Lower: 1-st part\nUpper: 1-st part, Middle: 1-st part, Lower: 2-nd part\nUpper: 1-st part, Middle: 2-nd part, Lower: 2-nd part\n\n\n\n\n\n\nSample Input 23\n1 1 1\n2 2 2\n3 3 3\n\n\n\n\n\nSample Output 227\n\n\n\n\n\n\nSample Input 36\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288\n\n\n\n\n\nSample Output 387"}
{"id": "p03558", "problem": "Score : 700 points\n\n\nProblem StatementFind the smallest possible sum of the digits in the decimal notation of a positive multiple of K.\n\n\n\n\nConstraints\n2 \\leq K \\leq 10^5\nK is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint the smallest possible sum of the digits in the decimal notation of a positive multiple of K.\n\n\n\n\n\n\nSample Input 16\n\n\n\n\n\nSample Output 13\n\n12=6\u00d72 yields the smallest sum.\n\n\n\n\n\nSample Input 241\n\n\n\n\n\nSample Output 25\n\n11111=41\u00d7271 yields the smallest sum.\n\n\n\n\n\nSample Input 379992\n\n\n\n\n\nSample Output 336"}
{"id": "p03559", "problem": "Score : 300 points\n\n\nProblem StatementThe season for Snuke Festival has come again this year. First of all, Ringo will perform a ritual to summon Snuke. For the ritual, he needs an altar, which consists of three parts, one in each of the three categories: upper, middle and lower.\nHe has N parts for each of the three categories. The size of the i-th upper part is A_i, the size of the i-th middle part is B_i, and the size of the i-th lower part is C_i.\nTo build an altar, the size of the middle part must be strictly greater than that of the upper part, and the size of the lower part must be strictly greater than that of the middle part. On the other hand, any three parts that satisfy these conditions can be combined to form an altar.\nHow many different altars can Ringo build? Here, two altars are considered different when at least one of the three parts used is different.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\n1 \\leq C_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 ... A_N\nB_1 ... B_N\nC_1 ... C_N\n\n\n\n\n\nOutputPrint the number of different altars that Ringo can build.\n\n\n\n\n\n\nSample Input 12\n1 5\n2 4\n3 6\n\n\n\n\n\nSample Output 13\n\nThe following three altars can be built:\n\nUpper: 1-st part, Middle: 1-st part, Lower: 1-st part\nUpper: 1-st part, Middle: 1-st part, Lower: 2-nd part\nUpper: 1-st part, Middle: 2-nd part, Lower: 2-nd part\n\n\n\n\n\n\nSample Input 23\n1 1 1\n2 2 2\n3 3 3\n\n\n\n\n\nSample Output 227\n\n\n\n\n\n\nSample Input 36\n3 14 159 2 6 53\n58 9 79 323 84 6\n2643 383 2 79 50 288\n\n\n\n\n\nSample Output 387"}
{"id": "p03560", "problem": "Score : 700 points\n\n\nProblem StatementFind the smallest possible sum of the digits in the decimal notation of a positive multiple of K.\n\n\n\n\nConstraints\n2 \\leq K \\leq 10^5\nK is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint the smallest possible sum of the digits in the decimal notation of a positive multiple of K.\n\n\n\n\n\n\nSample Input 16\n\n\n\n\n\nSample Output 13\n\n12=6\u00d72 yields the smallest sum.\n\n\n\n\n\nSample Input 241\n\n\n\n\n\nSample Output 25\n\n11111=41\u00d7271 yields the smallest sum.\n\n\n\n\n\nSample Input 379992\n\n\n\n\n\nSample Output 336"}
{"id": "p03561", "problem": "Score : 800 points\n\n\nProblem StatementIn Finite Encyclopedia of Integer Sequences (FEIS), all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed.\nLet the total number of sequences listed in FEIS be X. Among those sequences, find the (X/2)-th (rounded up to the nearest integer) lexicographically smallest one.\n\n\n\n\nConstraints\n1 \\leq N,K \\leq 3 \u00d7 10^5\nN and K are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nK N\n\n\n\n\n\nOutputPrint the (X/2)-th (rounded up to the nearest integer) lexicographically smallest sequence listed in FEIS, with spaces in between, where X is the total number of sequences listed in FEIS.\n\n\n\n\n\n\nSample Input 13 2\n\n\n\n\n\nSample Output 12 1 \n\nThere are 12 sequences listed in FEIS: (1),(1,1),(1,2),(1,3),(2),(2,1),(2,2),(2,3),(3),(3,1),(3,2),(3,3).\nThe (12/2 = 6)-th lexicographically smallest one among them is (2,1).\n\n\n\n\n\nSample Input 22 4\n\n\n\n\n\nSample Output 21 2 2 2\n\n\n\n\n\n\nSample Input 35 14\n\n\n\n\n\nSample Output 33 3 3 3 3 3 3 3 3 3 3 3 2 2"}
{"id": "p03562", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N non-negative integers written on a blackboard. The i-th integer is A_i.\nTakahashi can perform the following two kinds of operations any number of times in any order:\n\nSelect one integer written on the board (let this integer be X). Write 2X on the board, without erasing the selected integer.\nSelect two integers, possibly the same, written on the board (let these integers be X and Y). Write X XOR Y (XOR stands for bitwise xor) on the blackboard, without erasing the selected integers.\n\nHow many different integers not exceeding X can be written on the blackboard? We will also count the integers that are initially written on the board.\nSince the answer can be extremely large, find the count modulo 998244353.\n\n\n\n\nConstraints\n1 \\leq N \\leq 6\n1 \\leq X < 2^{4000}\n1 \\leq A_i < 2^{4000}(1\\leq i\\leq N)\nAll input values are integers.\nX and A_i(1\\leq i\\leq N) are given in binary notation, with the most significant digit in each of them being 1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN X\nA_1\n:\nA_N\n\n\n\n\n\nOutputPrint the number of different integers not exceeding X that can be written on the blackboard.\n\n\n\n\n\n\nSample Input 13 111\n1111\n10111\n10010\n\n\n\n\n\nSample Output 14\n\nInitially, 15, 23 and 18 are written on the blackboard. Among the integers not exceeding 7, four integers, 0, 3, 5 and 6, can be written.\nFor example, 6 can be written as follows:\n\nDouble 15 to write 30.\nTake XOR of 30 and 18 to write 12.\nDouble 12 to write 24.\nTake XOR of 30 and 24 to write 6.\n\n\n\n\n\n\nSample Input 24 100100\n1011\n1110\n110101\n1010110\n\n\n\n\n\nSample Output 237\n\n\n\n\n\n\nSample Input 34 111001100101001\n10111110\n1001000110\n100000101\n11110000011\n\n\n\n\n\nSample Output 31843\n\n\n\n\n\n\nSample Input 41 111111111111111111111111111111111111111111111111111111111111111\n1\n\n\n\n\n\nSample Output 4466025955\n\nBe sure to find the count modulo 998244353."}
{"id": "p03563", "problem": "Score : 100 points\n\n\nProblem StatementTakahashi is a user of a site that hosts programming contests.\nWhen a user competes in a contest, the rating of the user (not necessarily an integer) changes according to the performance of the user, as follows:  \n\nLet the current rating of the user be a.\nSuppose that the performance of the user in the contest is b.\nThen, the new rating of the user will be the avarage of a and b.\n\nFor example, if a user with rating 1 competes in a contest and gives performance 1000, his/her new rating will be 500.5, the average of 1 and 1000.\nTakahashi's current rating is R, and he wants his rating to be exactly G after the next contest.\nFind the performance required to achieve it.  \n\n\n\n\nConstraints\n0 \\leq R, G \\leq 4500\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nR\nG\n\n\n\n\n\nOutputPrint the performance required to achieve the objective.\n\n\n\n\n\n\nSample Input 12002\n2017\n\n\n\n\n\nSample Output 12032\n\nTakahashi's current rating is 2002.\nIf his performance in the contest is 2032, his rating will be the average of 2002 and 2032, which is equal to the desired rating, 2017.\n\n\n\n\n\nSample Input 24500\n0\n\n\n\n\n\nSample Output 2-4500\n\nAlthough the current and desired ratings are between 0 and 4500, the performance of a user can be below 0."}
{"id": "p03564", "problem": "Score : 200 points\n\n\nProblem StatementSquare1001 has seen an electric bulletin board displaying the integer 1.\nHe can perform the following operations A and B to change this value:\n\nOperation A: The displayed value is doubled.\nOperation B: The displayed value increases by K.\n\nSquare1001 needs to perform these operations N times in total.\nFind the minimum possible value displayed in the board after N operations.\n\n\n\n\nConstraints\n1 \\leq N, K \\leq 10\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nK\n\n\n\n\n\nOutputPrint the minimum possible value displayed in the board after N operations.\n\n\n\n\n\n\nSample Input 14\n3\n\n\n\n\n\nSample Output 110\n\nThe value will be minimized when the operations are performed in the following order: A, A, B, B.\nIn this case, the value will change as follows: 1 \u2192 2 \u2192 4 \u2192 7 \u2192 10.  \n\n\n\n\n\nSample Input 210\n10\n\n\n\n\n\nSample Output 276\n\nThe value will be minimized when the operations are performed in the following order: A, A, A, A, B, B, B, B, B, B.\nIn this case, the value will change as follows: 1 \u2192 2 \u2192 4 \u2192 8 \u2192 16 \u2192 26 \u2192 36 \u2192 46 \u2192 56 \u2192 66 \u2192 76.  \nBy the way, this contest is AtCoder Beginner Contest 076."}
{"id": "p03565", "problem": "Score : 300 points\n\n\nProblem StatementE869120 found a chest which is likely to contain treasure.\nHowever, the chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters.\nHe also found a string S', which turns out to be the string S with some of its letters (possibly all or none) replaced with ?.  \nOne more thing he found is a sheet of paper with the following facts written on it:  \n\nCondition 1: The string S contains a string T as a contiguous substring.\nCondition 2: S is the lexicographically smallest string among the ones that satisfy Condition 1.\n\nPrint the string S.\nIf such a string does not exist, print UNRESTORABLE.  \n\n\n\n\nConstraints\n1 \\leq |S'|, |T| \\leq 50\nS' consists of lowercase English letters and ?.\nT consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\nT'\n\n\n\n\n\nOutputPrint the string S.\nIf such a string does not exist, print UNRESTORABLE instead.  \n\n\n\n\n\n\nSample Input 1?tc????\ncoder\n\n\n\n\n\nSample Output 1atcoder\n\nThere are 26 strings that satisfy Condition 1: atcoder, btcoder, ctcoder,..., ztcoder.\nAmong them, the lexicographically smallest is atcoder, so we can say S = atcoder.\n\n\n\n\n\nSample Input 2??p??d??\nabc\n\n\n\n\n\nSample Output 2UNRESTORABLE\n\nThere is no string that satisfies Condition 1, so the string S does not exist."}
{"id": "p03566", "problem": "\ufeffScore : 400 points\n\n\nProblem StatementIn the year 2168, AtCoder Inc., which is much larger than now, is starting a limited express train service called AtCoder Express.\nIn the plan developed by the president Takahashi, the trains will run as follows:\n\nA train will run for (t_1 + t_2 + t_3 + ... + t_N) seconds.\nIn the first t_1 seconds, a train must run at a speed of at most v_1 m/s (meters per second). Similarly, in the subsequent t_2 seconds, a train must run at a speed of at most v_2 m/s, and so on.\n\nAccording to the specifications of the trains, the acceleration of a train must be always within \u00b11m/s^2. Additionally, a train must stop at the beginning and the end of the run.\nFind the maximum possible distance that a train can cover in the run.\n\n\n\n\nConstraints\n1 \\leq N \\leq 100\n1 \\leq t_i \\leq 200\n1 \\leq v_i \\leq 100\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nt_1 t_2 t_3 \u2026 t_N\nv_1 v_2 v_3 \u2026 v_N\n\n\n\n\n\nOutputPrint the maximum possible that a train can cover in the run.\nOutput is considered correct if its absolute difference from the judge's output is at most 10^{-3}.\n\n\n\n\n\n\nSample Input 11\n100\n30\n\n\n\n\n\nSample Output 12100.000000000000000\n\n\nThe maximum distance is achieved when a train runs as follows:\n\nIn the first 30 seconds, it accelerates at a rate of 1m/s^2, covering 450 meters.\nIn the subsequent 40 seconds, it maintains the velocity of 30m/s, covering 1200 meters.\nIn the last 30 seconds, it decelerates at the acceleration of -1m/s^2, covering 450 meters.\n\nThe total distance covered is 450 + 1200 + 450 = 2100 meters.\n\n\n\n\n\nSample Input 22\n60 50\n34 38\n\n\n\n\n\nSample Output 22632.000000000000000\n\n\nThe maximum distance is achieved when a train runs as follows:\n\nIn the first 34 seconds, it accelerates at a rate of 1m/s^2, covering 578 meters.\nIn the subsequent 26 seconds, it maintains the velocity of 34m/s, covering 884 meters.\nIn the subsequent 4 seconds, it accelerates at a rate of 1m/s^2, covering 144 meters.\nIn the subsequent 8 seconds, it maintains the velocity of 38m/s, covering 304 meters.\nIn the last 38 seconds, it decelerates at the acceleration of -1m/s^2, covering 722 meters.\n\nThe total distance covered is 578 + 884 + 144 + 304 + 722 = 2632 meters.\n\n\n\n\n\nSample Input 33\n12 14 2\n6 2 7\n\n\n\n\n\nSample Output 376.000000000000000\n\n\nThe maximum distance is achieved when a train runs as follows:\n\nIn the first 6 seconds, it accelerates at a rate of 1m/s^2, covering 18 meters.\nIn the subsequent 2 seconds, it maintains the velocity of 6m/s, covering 12 meters.\nIn the subsequent 4 seconds, it decelerates at the acceleration of -1m/s^2, covering 16 meters.\nIn the subsequent 14 seconds, it maintains the velocity of 2m/s, covering 28 meters.\nIn the last 2 seconds, it decelerates at the acceleration of -1m/s^2, covering 2 meters.\n\nThe total distance covered is 18 + 12 + 16 + 28 + 2 = 76 meters.\n\n\n\n\n\nSample Input 41\n9\n10\n\n\n\n\n\nSample Output 420.250000000000000000\n\n\nThe maximum distance is achieved when a train runs as follows:\n\nIn the first 4.5 seconds, it accelerates at a rate of 1m/s^2, covering 10.125 meters.\nIn the last 4.5 seconds, it decelerates at the acceleration of -1m/s^2, covering 10.125 meters.\n\nThe total distance covered is 10.125 + 10.125 = 20.25 meters.\n\n\n\n\n\nSample Input 510\n64 55 27 35 76 119 7 18 49 100\n29 19 31 39 27 48 41 87 55 70\n\n\n\n\n\nSample Output 520291.000000000000"}
{"id": "p03567", "problem": "Score : 100 points\n\n\nProblem StatementSnuke built an online judge to hold a programming contest.\nWhen a program is submitted to the judge, the judge returns a verdict, which is a two-character string that appears in the string S as a contiguous substring.\n(The judge can return any two-character substring of S.)\nDetermine whether the judge can return the string AC as the verdict to a program.\n\n\n\n\nConstraints\n2 \\leq |S| \\leq 5\nS consists of uppercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf the judge can return the string AC as a verdict to a program, print Yes; if it cannot, print No.\n\n\n\n\n\n\nSample Input 1BACD\n\n\n\n\n\nSample Output 1Yes\n\nThe string AC appears in BACD as a contiguous substring (the second and third characters).\n\n\n\n\n\nSample Input 2ABCD\n\n\n\n\n\nSample Output 2No\n\nAlthough the string ABCD contains both A and C (the first and third characters), the string AC does not appear in ABCD as a contiguous substring.\n\n\n\n\n\nSample Input 3CABD\n\n\n\n\n\nSample Output 3No\n\n\n\n\n\n\nSample Input 4ACACA\n\n\n\n\n\nSample Output 4Yes\n\n\n\n\n\n\nSample Input 5XX\n\n\n\n\n\nSample Output 5No"}
{"id": "p03568", "problem": "Score : 200 points\n\n\nProblem StatementWe will say that two integer sequences of length N, x_1, x_2, ..., x_N and y_1, y_2, ..., y_N, are similar when |x_i - y_i| \\leq 1 holds for all i (1 \\leq i \\leq N).\nIn particular, any integer sequence is similar to itself.\nYou are given an integer N and an integer sequence of length N, A_1, A_2, ..., A_N.\nHow many integer sequences b_1, b_2, ..., b_N are there such that b_1, b_2, ..., b_N is similar to A and the product of all elements, b_1 b_2 ... b_N, is even?\n\n\n\n\nConstraints\n1 \\leq N \\leq 10\n1 \\leq A_i \\leq 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the number of integer sequences that satisfy the condition.\n\n\n\n\n\n\nSample Input 12\n2 3\n\n\n\n\n\nSample Output 17\n\nThere are seven integer sequences that satisfy the condition:\n\n1, 2\n1, 4\n2, 2\n2, 3\n2, 4\n3, 2\n3, 4\n\n\n\n\n\n\nSample Input 23\n3 3 3\n\n\n\n\n\nSample Output 226\n\n\n\n\n\n\nSample Input 31\n100\n\n\n\n\n\nSample Output 31\n\n\n\n\n\n\nSample Input 410\n90 52 56 71 44 8 13 30 57 84\n\n\n\n\n\nSample Output 458921"}
{"id": "p03569", "problem": "Score : 400 points\n\n\nProblem StatementWe have a string s consisting of lowercase English letters.\nSnuke can perform the following operation repeatedly:\n\nInsert a letter x to any position in s of his choice, including the beginning and end of s.\n\nSnuke's objective is to turn s into a palindrome.\nDetermine whether the objective is achievable. If it is achievable, find the minimum number of operations required.\n\n\n\n\nNotesA palindrome is a string that reads the same forward and backward.\nFor example, a, aa, abba and  abcba are palindromes, while ab, abab and abcda are not.\n\n\n\n\nConstraints\n1 \\leq |s| \\leq 10^5\ns consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputIf the objective is achievable, print the number of operations required.\nIf it is not, print -1 instead.\n\n\n\n\n\n\nSample Input 1xabxa\n\n\n\n\n\nSample Output 12\n\nOne solution is as follows (newly inserted x are shown in bold):\nxabxa \u2192 xaxbxa \u2192 xaxbxax\n\n\n\n\n\nSample Input 2ab\n\n\n\n\n\nSample Output 2-1\n\nNo sequence of operations can turn s into a palindrome.\n\n\n\n\n\nSample Input 3a\n\n\n\n\n\nSample Output 30\n\ns is a palindrome already at the beginning.\n\n\n\n\n\nSample Input 4oxxx\n\n\n\n\n\nSample Output 43\n\nOne solution is as follows:\noxxx \u2192 xoxxx \u2192 xxoxxx \u2192 xxxoxxx"}
{"id": "p03570", "problem": "Score : 700 points\n\n\nProblem StatementWe have a string s consisting of lowercase English letters.\nSnuke is partitioning s into some number of non-empty substrings.\nLet the subtrings obtained be s_1, s_2, ..., s_N from left to right. (Here, s = s_1 + s_2 + ... + s_N holds.)\nSnuke wants to satisfy the following condition:\n\nFor each i (1 \\leq i \\leq N), it is possible to permute the characters in s_i and obtain a palindrome.\n\nFind the minimum possible value of N when the partition satisfies the condition.\n\n\n\n\nConstraints\n1 \\leq |s| \\leq 2 \\times 10^5\ns consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the minimum possible value of N when the partition satisfies the condition.\n\n\n\n\n\n\nSample Input 1aabxyyzz\n\n\n\n\n\nSample Output 12\n\nThe solution is to partition s as aabxyyzz = aab + xyyzz.\nHere, aab can be permuted to form a palindrome aba, and xyyzz can be permuted to form a palindrome zyxyz.\n\n\n\n\n\nSample Input 2byebye\n\n\n\n\n\nSample Output 21\n\nbyebye can be permuted to form a palindrome byeeyb.\n\n\n\n\n\nSample Input 3abcdefghijklmnopqrstuvwxyz\n\n\n\n\n\nSample Output 326\n\n\n\n\n\n\nSample Input 4abcabcxabcx\n\n\n\n\n\nSample Output 43\n\nThe solution is to partition s as abcabcxabcx = a + b + cabcxabcx."}
{"id": "p03571", "problem": "Score : 1600 points\n\n\nProblem StatementWe constructed a rectangular parallelepiped of dimensions A \\times B \\times C built of ABC cubic blocks of side 1.\nThen, we placed the parallelepiped in xyz-space as follows:\n\nFor every triple i, j, k (0 \\leq i < A, 0 \\leq j < B, 0 \\leq k < C), there exists a block that has a diagonal connecting the points (i, j, k) and (i + 1, j + 1, k + 1). All sides of the block are parallel to a coordinate axis.\n\nFor each triple i, j, k, we will call the above block as block (i, j, k).\nFor two blocks (i_1, j_1, k_1) and (i_2, j_2, k_2), we will define the distance between them as max(|i_1 - i_2|, |j_1 - j_2|, |k_1 - k_2|).\nWe have passed a wire with a negligible thickness through a segment connecting the points (0, 0, 0) and (A, B, C).\nHow many blocks (x,y,z) satisfy the following condition? Find the count modulo 10^9 + 7.\n\nThere exists a block (x', y', z') such that the wire passes inside the block (x', y', z') (not just boundary) and the distance between the blocks (x, y, z) and (x', y', z') is at most D.\n\n\n\n\n\nConstraints\n1 \\leq A < B < C \\leq 10^{9}\nAny two of the three integers A, B and C are coprime.\n0 \\leq D \\leq 50,000\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C D\n\n\n\n\n\nOutputPrint the number of the blocks that satisfy the condition, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 13 4 5 1\n\n\n\n\n\nSample Output 154\n\nThe figure below shows the parallelepiped, sliced into five layers by planes parallel to xy-plane.\nHere, the layer in the region i - 1 \\leq z \\leq i is called layer i.\nThe blocks painted black are penetrated by the wire, and satisfy the condition.\nThe other blocks that satisfy the condition are painted yellow.\n\n\n\nThere are 54 blocks that are painted black or yellow.\n\n\n\n\n\nSample Input 21 2 3 0\n\n\n\n\n\nSample Output 24\n\nThere are four blocks that are penetrated by the wire, and only these blocks satisfy the condition.\n\n\n\n\n\nSample Input 33 5 7 100\n\n\n\n\n\nSample Output 3105\n\nAll blocks satisfy the condition.\n\n\n\n\n\nSample Input 43 123456781 1000000000 100\n\n\n\n\n\nSample Output 4444124403\n\n\n\n\n\n\nSample Input 51234 12345 1234567 5\n\n\n\n\n\nSample Output 5150673016\n\n\n\n\n\n\nSample Input 6999999997 999999999 1000000000 50000\n\n\n\n\n\nSample Output 68402143"}
{"id": "p03572", "problem": "Score : 1800 points\n\n\nProblem StatementThree men, A, B and C, are eating sushi together.\nInitially, there are N pieces of sushi, numbered 1 through N.\nHere, N is a multiple of 3.\nEach of the three has likes and dislikes in sushi.\nA's preference is represented by (a_1,\\ ...,\\ a_N), a permutation of integers from 1 to N.\nFor each i (1 \\leq i \\leq N), A's i-th favorite sushi is Sushi a_i.\nSimilarly, B's and C's preferences are represented by (b_1,\\ ...,\\ b_N) and (c_1,\\ ...,\\ c_N), permutations of integers from 1 to N.\nThe three repeats the following action until all pieces of sushi are consumed or a fight brakes out (described later):\n\nEach of the three A, B and C finds his most favorite piece of sushi among the remaining pieces. Let these pieces be Sushi x, y and z, respectively. If x, y and z are all different, A, B and C eats Sushi x, y and z, respectively. Otherwise, a fight brakes out.\n\nYou are given A's and B's preferences, (a_1,\\ ...,\\ a_N) and (b_1,\\ ...,\\ b_N).\nHow many preferences of C, (c_1,\\ ...,\\ c_N), leads to all the pieces of sushi being consumed without a fight?\nFind the count modulo 10^9+7.\n\n\n\n\nConstraints\n3 \\leq N \\leq 399\nN is a multiple of 3.\n(a_1,\\ ...,\\ a_N) and (b_1,\\ ...,\\ b_N) are permutations of integers from 1 to N.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 ... a_N\nb_1 ... b_N\n\n\n\n\n\nOutputPrint the number of the preferences of C that leads to all the pieces of sushi being consumed without a fight, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n1 2 3\n2 3 1\n\n\n\n\n\nSample Output 12\n\nThe answer is two, (c_1,\\ c_2,\\ c_3) = (3,\\ 1,\\ 2),\\ (3,\\ 2,\\ 1).\nIn both cases, A, B and C will eat Sushi 1, 2 and 3, respectively, and there will be no more sushi.\n\n\n\n\n\nSample Input 23\n1 2 3\n1 2 3\n\n\n\n\n\nSample Output 20\n\nRegardless of what permutation (c_1,\\ c_2,\\ c_3) is, A and B will try to eat Sushi 1, resulting in a fight.\n\n\n\n\n\nSample Input 36\n1 2 3 4 5 6\n2 1 4 3 6 5\n\n\n\n\n\nSample Output 380\n\nFor example, if (c_1,\\ c_2,\\ c_3,\\ c_4,\\ c_5,\\ c_6) = (5,\\ 1,\\ 2,\\ 6,\\ 3,\\ 4), A, B and C will first eat Sushi 1, 2 and 5, respectively, then they will eat Sushi 3, 4 and 6, respectively, and there will be no more sushi.\n\n\n\n\n\nSample Input 46\n1 2 3 4 5 6\n6 5 4 3 2 1\n\n\n\n\n\nSample Output 4160\n\n\n\n\n\n\nSample Input 59\n4 5 6 7 8 9 1 2 3\n7 8 9 1 2 3 4 5 6\n\n\n\n\n\nSample Output 533600"}
{"id": "p03573", "problem": "Score : 100 points\n\n\nProblem StatementYou are given three integers, A, B and C.\nAmong them, two are the same, but the remaining one is different from the rest.\nFor example, when A=5,B=7,C=5, A and C are the same, but B is different.\nFind the one that is different from the rest among the given three integers.  \n\n\n\n\nConstraints\n-100 \\leq A,B,C \\leq 100 \nA, B and C are integers.\nThe input satisfies the condition in the statement.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nA B C\n\n\n\n\n\nOutputAmong A, B and C, print the integer that is different from the rest.\n\n\n\n\n\n\nSample Input 15 7 5\n\n\n\n\n\nSample Output 17\n\nThis is the same case as the one in the statement.\n\n\n\n\n\nSample Input 21 1 7\n\n\n\n\n\nSample Output 27\n\nIn this case, C is the one we seek.\n\n\n\n\n\nSample Input 3-100 100 100\n\n\n\n\n\nSample Output 3-100"}
{"id": "p03574", "problem": "Score : 200 points\n\n\nProblem StatementYou are given an H \u00d7 W grid.\nThe squares in the grid are described by H strings, S_1,...,S_H.\nThe j-th character in the string S_i corresponds to the square at the i-th row from the top and j-th column from the left (1 \\leq i \\leq H,1 \\leq j \\leq W).\n. stands for an empty square, and # stands for a square containing a bomb.  \nDolphin is interested in how many bomb squares are horizontally, vertically or diagonally adjacent to each empty square.\n(Below, we will simply say \"adjacent\" for this meaning. For each square, there are at most eight adjacent squares.)\nHe decides to replace each . in our H strings with a digit that represents the number of bomb squares adjacent to the corresponding empty square.  \nPrint the strings after the process.  \n\n\n\n\nConstraints\n1 \\leq H,W \\leq 50\nS_i is a string of length W consisting of # and ..\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nH W\nS_1\n:\nS_H\n\n\n\n\n\nOutputPrint the H strings after the process.\nThe i-th line should contain a string T_i of length W, where the j-th character in T_i corresponds to the square at the i-th row from the top and j-th row from the left in the grid (1 \\leq i \\leq H, 1 \\leq j \\leq W).  \n\n\n\n\n\n\nSample Input 13 5\n.....\n.#.#.\n.....\n\n\n\n\n\nSample Output 111211\n1#2#1\n11211\n\nFor example, let us observe the empty square at the first row from the top and first column from the left.\nThere is one bomb square adjacent to this empty square: the square at the second row and second column.\nThus, the . corresponding to this empty square is replaced with 1.  \n\n\n\n\n\nSample Input 23 5\n#####\n#####\n#####\n\n\n\n\n\nSample Output 2#####\n#####\n#####\n\nIt is possible that there is no empty square.  \n\n\n\n\n\nSample Input 36 6\n#####.\n#.#.##\n####.#\n.#..#.\n#.##..\n#.#...\n\n\n\n\n\nSample Output 3#####3\n#8#7##\n####5#\n4#65#2\n#5##21\n#4#310"}
{"id": "p03575", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an undirected connected graph with N vertices and M edges that does not contain self-loops and double edges.\nThe i-th edge (1 \\leq i \\leq M) connects Vertex a_i and Vertex b_i.  \nAn edge whose removal disconnects the graph is called a bridge.\nFind the number of the edges that are bridges among the M edges.  \n\n\n\n\nNotes\nA self-loop is an edge i such that a_i=b_i (1 \\leq i \\leq M).\nDouble edges are a pair of edges i,j such that a_i=a_j and b_i=b_j (1 \\leq i<j \\leq M).\nAn undirected graph is said to be connected when there exists a path between every pair of vertices.\n\n\n\n\n\nConstraints\n2 \\leq N \\leq 50\nN-1 \\leq M \\leq min(N(N\u22121)\u20442,50)\n1 \\leq a_i<b_i \\leq N\nThe given graph does not contain self-loops and double edges.\nThe given graph is connected.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN M  \na_1 b_1  \na_2 b_2\n:  \na_M b_M\n\n\n\n\n\nOutputPrint the number of the edges that are bridges among the M edges.\n\n\n\n\n\n\nSample Input 17 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\n\n\n\nSample Output 14\n\nThe figure below shows the given graph:\n\n\n\nThe edges shown in red are bridges. There are four of them.\n\n\n\n\n\nSample Input 23 3\n1 2\n1 3\n2 3\n\n\n\n\n\nSample Output 20\n\nIt is possible that there is no bridge.\n\n\n\n\n\nSample Input 36 5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\n\n\n\nSample Output 35\n\nIt is possible that every edge is a bridge."}
{"id": "p03576", "problem": "Score : 400 points\n\n\nProblem StatementWe have N points in a two-dimensional plane.\nThe coordinates of the i-th point (1 \\leq i \\leq N) are (x_i,y_i).\nLet us consider a rectangle whose sides are parallel to the coordinate axes that contains K or more of the N points in its interior.\nHere, points on the sides of the rectangle are considered to be in the interior.\nFind the minimum possible area of such a rectangle.  \n\n\n\n\nConstraints\n2 \\leq K \\leq N \\leq 50 \n-10^9 \\leq x_i,y_i \\leq 10^9 (1 \\leq i \\leq N) \nx_i\u2260x_j (1 \\leq i<j \\leq N) \ny_i\u2260y_j (1 \\leq i<j \\leq N) \nAll input values are integers. (Added at 21:50 JST)  \n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN K  \nx_1 y_1\n:  \nx_{N} y_{N}\n\n\n\n\n\nOutputPrint the minimum possible area of a rectangle that satisfies the condition.  \n\n\n\n\n\n\nSample Input 14 4\n1 4\n3 3\n6 2\n8 1\n\n\n\n\n\nSample Output 121\n\nOne rectangle that satisfies the condition with the minimum possible area has the following vertices: (1,1), (8,1), (1,4) and (8,4).\nIts area is (8-1) \u00d7 (4-1) = 21.  \n\n\n\n\n\nSample Input 24 2\n0 0\n1 1\n2 2\n3 3\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 34 3\n-1000000000 -1000000000\n1000000000 1000000000\n-999999999 999999999\n999999999 -999999999\n\n\n\n\n\nSample Output 33999999996000000001\n\nWatch out for integer overflows."}
{"id": "p03577", "problem": "Score : 100 points\n\n\nProblem StatementRng is going to a festival.\nThe name of the festival is given to you as a string S, which ends with FESTIVAL, from input. Answer the question: \"Rng is going to a festival of what?\" Output the answer.\nHere, assume that the name of \"a festival of s\" is a string obtained by appending FESTIVAL to the end of s.\nFor example, CODEFESTIVAL is a festival of CODE.\n\n\n\n\nConstraints\n9 \\leq |S| \\leq 50\nS consists of uppercase English letters.\nS ends with FESTIVAL.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the answer to the question: \"Rng is going to a festival of what?\"\n\n\n\n\n\n\nSample Input 1CODEFESTIVAL\n\n\n\n\n\nSample Output 1CODE\n\nThis is the same as the example in the statement.\n\n\n\n\n\nSample Input 2CODEFESTIVALFESTIVAL\n\n\n\n\n\nSample Output 2CODEFESTIVAL\n\nThis string is obtained by appending FESTIVAL to the end of CODEFESTIVAL, so it is a festival of CODEFESTIVAL.\n\n\n\n\n\nSample Input 3YAKINIKUFESTIVAL\n\n\n\n\n\nSample Output 3YAKINIKU"}
{"id": "p03578", "problem": "Score : 200 points\n\n\nProblem StatementRng is preparing a problem set for a qualification round of CODEFESTIVAL.\nHe has N candidates of problems. The difficulty of the i-th candidate is D_i.\nThere must be M problems in the problem set, and the difficulty of the i-th problem must be T_i. Here, one candidate of a problem cannot be used as multiple problems.\nDetermine whether Rng can complete the problem set without creating new candidates of problems.\n\n\n\n\nConstraints\n1 \\leq N \\leq 200,000\n1 \\leq D_i \\leq 10^9\n1 \\leq M \\leq 200,000\n1 \\leq T_i \\leq 10^9\nAll numbers in the input are integers.\n\n\n\n\n\nPartial Score\n100 points will be awarded for passing the test set satisfying N \\leq 100 and M \\leq 100.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nD_1 D_2 ... D_N\nM\nT_1 T_2 ... T_M\n\n\n\n\n\nOutputPrint YES if Rng can complete the problem set without creating new candidates of problems; print NO if he cannot.\n\n\n\n\n\n\nSample Input 15\n3 1 4 1 5\n3\n5 4 3\n\n\n\n\n\nSample Output 1YES\n\n\n\n\n\n\nSample Input 27\n100 200 500 700 1200 1600 2000\n6\n100 200 500 700 1600 1600\n\n\n\n\n\nSample Output 2NO\n\nNot enough 1600s.\n\n\n\n\n\nSample Input 31\n800\n5\n100 100 100 100 100\n\n\n\n\n\nSample Output 3NO\n\n\n\n\n\n\nSample Input 415\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5\n9\n5 4 3 2 1 2 3 4 5\n\n\n\n\n\nSample Output 4YES"}
{"id": "p03579", "problem": "Score : 500 points\n\n\nProblem StatementRng has a connected undirected graph with N vertices.\nCurrently, there are M edges in the graph, and the i-th edge connects Vertices A_i and B_i.\nRng will add new edges to the graph by repeating the following operation:\n\nOperation: Choose u and v (u \\neq v) such that Vertex v can be reached by traversing exactly three edges from Vertex u, and add an edge connecting Vertices u and v. It is not allowed to add an edge if there is already an edge connecting Vertices u and v.\n\nFind the maximum possible number of edges that can be added.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq M \\leq 10^5\n1 \\leq A_i,B_i \\leq N\nThe graph has no self-loops or multiple edges.\nThe graph is connected.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nA_1 B_1\nA_2 B_2\n:\nA_M B_M\n\n\n\n\n\nOutputFind the maximum possible number of edges that can be added.\n\n\n\n\n\n\nSample Input 16 5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\n\n\n\nSample Output 14\n\nIf we add edges as shown below, four edges can be added, and no more.\n\n\n\n\n\n\nSample Input 25 5\n1 2\n2 3\n3 1\n5 4\n5 1\n\n\n\n\n\nSample Output 25\n\nFive edges can be added, for example, as follows:\n\nAdd an edge connecting Vertex 5 and Vertex 3.\nAdd an edge connecting Vertex 5 and Vertex 2.\nAdd an edge connecting Vertex 4 and Vertex 1.\nAdd an edge connecting Vertex 4 and Vertex 2.\nAdd an edge connecting Vertex 4 and Vertex 3."}
{"id": "p03580", "problem": "Score : 700 points\n\n\nProblem StatementN cells are arranged in a row.\nSome of them may contain tokens.\nYou are given a string s that consists of 0s and 1s.\nIf the i-th character of s is 1, the i-th cell (from left) contains a token.\nOtherwise, it doesn't contain a token.\nSnuke wants to perform the following operation as many times as possible.\nIn each operation, he chooses three consecutive cells.\nLet's call the cells X, Y, Z from left to right.\nIn order for the operation to be valid, both X and Z must contain tokens and Y must not contain a token.\nThen, he removes these two tokens and puts a new token on Y.\nHow many operations can he perform if he performs operations in the optimal way?\n\n\n\n\nConstraints\n1 \\leq N \\leq 500,000\n|s| = N\nEach character in s is either 0 or 1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\ns\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 17\n1010101\n\n\n\n\n\nSample Output 12\n\nFor example, he can perform two operations in the following way:\n\nPerform an operation on the last three cells. Now the string that represents tokens becomes 1010010.\nPerform an operation on the first three cells. Now the string that represents tokens becomes 0100010.\n\nNote that the choice of operations matters.\nFor example, if he chooses three cells in the middle first, he can perform no more operations.\n\n\n\n\n\nSample Input 250\n10101000010011011110001001111110000101010111100110\n\n\n\n\n\nSample Output 210"}
{"id": "p03581", "problem": "Score : 1600 points\n\n\nProblem StatementA + B balls are arranged in a row.\nThe leftmost A balls are colored red, and the rightmost B balls are colored blue.\nYou perform the following operation:\n\nFirst, you choose two integers s, t such that 1 \\leq s, t \\leq A + B.\nThen, you repeat the following step A + B times:\nIn each step, you remove the first ball or the s-th ball (if it exists) or the t-th ball (if it exists, all indices are 1-based) from left in the row, and give it to Snuke.\n\nIn how many ways can you give the balls to Snuke?\nCompute the answer modulo 10^9 + 7.\nHere, we consider two ways to be different if for some k, the k-th ball given to Snuke has different colors.\nIn particular, the choice of s, t doesn't matter.\nAlso, we don't distinguish two balls of the same color.\n\n\n\n\nConstraints\n1 \\leq A, B \\leq 2000\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13 3\n\n\n\n\n\nSample Output 120\n\nThere are 20 ways to give 3 red balls and 3 blue balls.\nIt turns out that all of them are possible.\nHere is an example of the operation (r stands for red, b stands for blue):\n\nYou choose s = 3, t = 4.\nInitially, the row looks like rrrbbb.\nYou remove 3rd ball (r) and give it to Snuke. Now the row looks like rrbbb.\nYou remove 4th ball (b) and give it to Snuke. Now the row looks like rrbb.\nYou remove 1st ball (r) and give it to Snuke. Now the row looks like rbb.\nYou remove 3rd ball (b) and give it to Snuke. Now the row looks like rb.\nYou remove 1st ball (r) and give it to Snuke. Now the row looks like b.\nYou remove 1st ball (b) and give it to Snuke. Now the row is empty.\n\nThis way, Snuke receives balls in the order rbrbrb.\n\n\n\n\n\nSample Input 24 4\n\n\n\n\n\nSample Output 267\n\nThere are 70 ways to give 4 red balls and 4 blue balls.\nAmong them, only bbrrbrbr, brbrbrbr, and brrbbrbr are impossible.\n\n\n\n\n\nSample Input 37 9\n\n\n\n\n\nSample Output 37772\n\n\n\n\n\n\nSample Input 41987 1789\n\n\n\n\n\nSample Output 4456315553"}
{"id": "p03582", "problem": "Score : 1600 points\n\n\nProblem StatementFor a string S, let f(S) be the lexicographically smallest cyclic shift of S.\nFor example, if S = babca, f(S) = ababc because this is the smallest among all cyclic shifts (babca, abcab, bcaba, cabab, ababc).\nYou are given three integers X, Y, and Z.\nYou want to construct a string T that consists of exactly X as, exactly Y bs, and exactly Z cs.\nIf there are multiple such strings, you want to choose one that maximizes f(T) lexicographically.\nCompute the lexicographically largest possible value of f(T).\n\n\n\n\nConstraints\n1 \\leq X + Y + Z \\leq 50\nX, Y, Z are non-negative integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX Y Z\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 12 2 0\n\n\n\n\n\nSample Output 1abab\n\nT must consist of two as and two bs.\n\nIf T = aabb, f(T) = aabb.\nIf T = abab, f(T) = abab.\nIf T = abba, f(T) = aabb.\nIf T = baab, f(T) = aabb.\nIf T = baba, f(T) = abab.\nIf T = bbaa, f(T) = aabb.\n\nThus, the largest possible f(T) is abab.\n\n\n\n\n\nSample Input 21 1 1\n\n\n\n\n\nSample Output 2acb"}
{"id": "p03583", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer N.\nFind a triple of positive integers h, n and w such that 4/N = 1/h + 1/n + 1/w.\nIf there are multiple solutions, any of them will be accepted.\n\n\n\n\nConstraints\nIt is guaranteed that, for the given integer N, there exists a solution such that h,n,w \\leq 3500.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputsPrint a triple of positive integers h, n and w that satisfies the condition, in the following format:\nh n w\n\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 11 2 2\n\n4/2 = 1/1 + 1/2 + 1/2.\n\n\n\n\n\nSample Input 23485\n\n\n\n\n\nSample Output 2872 1012974 1539173474040\n\nIt is allowed to use an integer exceeding 3500 in a solution.\n\n\n\n\n\nSample Input 34664\n\n\n\n\n\nSample Output 33498 3498 3498"}
{"id": "p03584", "problem": "Score : 500 points\n\n\nProblem StatementSeisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities.\nTakahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible.\nFind the maximum possible sum of utilities of purchased integers.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n0 \\leq K < 2^{30}\n0 \\leq A_i < 2^{30}(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN K\nA_1 B_1\n:\nA_N B_N\n\n\n\n\n\nOutputsPrint the maximum possible sum of utilities of purchased integers.\n\n\n\n\n\n\nSample Input 13 5\n3 3\n4 4\n2 5\n\n\n\n\n\nSample Output 18\n\nBuy 2 and 3 to achieve the maximum possible total utility, 8.\n\n\n\n\n\nSample Input 23 6\n3 3\n4 4\n2 5\n\n\n\n\n\nSample Output 29\n\nBuy 2 and 4 to achieve the maximum possible total utility, 9.\n\n\n\n\n\nSample Input 37 14\n10 5\n7 4\n11 4\n9 8\n3 6\n6 2\n8 9\n\n\n\n\n\nSample Output 332"}
{"id": "p03585", "problem": "Score : 800 points\n\n\nProblem StatementThere are N lines in the xy-plane. The i-th line is represented by A_ix+B_iy=C_i.\nAny two lines among the N+2 lines, the above N lines plus the x-axis and y-axis, cross each other at exactly one point.\nFor each pair 1 \\leq i < j \\leq N, there is a car at the cross point of the i-th and j-th lines.\nEven where three or more lines intersect at a point, a car is individually placed for each pair of lines.\nThat is, there will be k(k-1)/2 cars placed at the intersection of k lines.\nThose cars are already very old, and can only be moved parallel to the x-axis or y-axis.\nTakahashi will hold an exhibition of antique cars at a place on the xy-plane.\nIn order to avoid damaging the half-broken cars too much, he will select the place of the exhibition so that the total distance covered will be minimized when all the cars are moved to the place.\nIf such a place is not uniquely determined, among the places that satisfy the condition above, the place with the minimum x-coordinate will be selected.\nIf the place is still not uniquely determined, among the places that satisfy the two conditions above, the place with the minimum y-coordinate will be selected.\nFind the place of the exhibition that will be selected.\n\n\n\n\nConstraints\n2 \\leq N \\leq 4 \u00d7 10^4\n1 \\leq |A_i|,|B_i| \\leq 10^4(1 \\leq i \\leq N)\n0 \\leq |C_i| \\leq 10^4(1 \\leq i \\leq N)\nNo two given lines are parallel.\nAll input values are integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nA_1 B_1 C_1\n:\nA_N B_N C_N\n\n\n\n\n\nOutputsPrint the x-coordinate and y-coordinate of the place of the exhibition that will be selected, in this order, with a space in between. The output will be judged as correct when the absolute or relative error is at most 10^{-9}.\n\n\n\n\n\n\nSample Input 13\n1 1 1\n2 -1 2\n-1 2 2\n\n\n\n\n\nSample Output 11.000000000000000 1.000000000000000\n\n\nThere is a car at each place shown by a blue circle in the figure. The place to be selected is shown by a purple circle.\n\n\n\n\n\nSample Input 24\n1 1 2\n1 -1 0\n3 -1 -2\n1 -3 4\n\n\n\n\n\nSample Output 2-1.000000000000000 -1.000000000000000\n\n\n\n\n\n\nSample Input 37\n1 7 8\n-2 4 9\n3 -8 -5\n9 2 -14\n6 7 5\n-8 -9 3\n3 8 10\n\n\n\n\n\nSample Output 3-1.722222222222222 1.325000000000000"}
{"id": "p03586", "problem": "Score : 1400 points\n\n\nProblem StatementProcess the Q queries below.\n\nYou are given two integers A_i and M_i. Determine whether there exists a positive integer K_i not exceeding 2 \u00d7 10^{18} such that A_i^{K_i} \u2261 K_i (mod M_i), and find one if it exists.\n\n\n\n\n\nConstraints\n1 \\leq Q \\leq 100\n0 \\leq A_i \\leq 10^9(1 \\leq i \\leq Q)\n1 \\leq M_i \\leq 10^9(1 \\leq i \\leq Q)\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nQ\nA_1 M_1\n:\nA_Q M_Q\n\n\n\n\n\nOutputsIn the i-th line, print -1 if there is no integer K_i that satisfies the condition.\nOtherwise, print an integer K_i not exceeding 2 \u00d7 10^{18} such that A_i^{K_i} \u2261 K_i (mod M_i). If there are multiple solutions, any of them will be accepted.\n\n\n\n\n\nSample Input 14\n2 4\n3 8\n9 6\n10 7\n\n\n\n\n\nSample Output 14\n11\n9\n2\n\nIt can be seen that the condition is satisfied: 2^4 = 16 \u2261 4 (mod 4), 3^{11} = 177147 \u2261 11 (mod 8), 9^9 = 387420489 \u2261 9 (mod 6) and 10^2 = 100 \u2261 2 (mod 7).\n\n\n\n\n\nSample Input 23\n177 168\n2028 88772\n123456789 987654321\n\n\n\n\n\nSample Output 27953\n234831584\n471523108231963269"}
{"id": "p03587", "problem": "Score : 100 points\n\n\nProblem StatementSnuke prepared 6 problems for a upcoming programming contest.\nFor each of those problems, Rng judged whether it can be used in the contest or not.\nYou are given a string S of length 6.\nIf the i-th character of s is 1, it means that the i-th problem prepared by Snuke is accepted to be used; 0 means that the problem is not accepted.\nHow many problems prepared by Snuke are accepted to be used in the contest?\n\n\n\n\nConstraints\nThe length of S is 6.\nS consists of 0 and 1.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputsPrint the number of problems prepared by Snuke that are accepted to be used in the contest.\n\n\n\n\n\n\nSample Input 1111100\n\n\n\n\n\nSample Output 14\n\nThe first, second, third and fourth problems are accepted, for a total of four.\n\n\n\n\n\nSample Input 2001001\n\n\n\n\n\nSample Output 22\n\n\n\n\n\n\nSample Input 3000000\n\n\n\n\n\nSample Output 30"}
{"id": "p03588", "problem": "Score : 200 points\n\n\nProblem StatementA group of people played a game. All players had distinct scores, which are positive integers.\nTakahashi knows N facts on the players' scores. The i-th fact is as follows: the A_i-th highest score among the players is B_i.\nFind the maximum possible number of players in the game.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9(1\\leq i\\leq N)\n0 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\nIf i \u2260 j, A_i \u2260 A_j.\nThere exists a possible outcome of the game that are consistent with the facts.\nAll input values are integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nA_1 B_1\n:\nA_N B_N\n\n\n\n\n\nOutputsPrint the maximum possible number of players in the game.\n\n\n\n\n\n\nSample Input 13\n4 7\n2 9\n6 2\n\n\n\n\n\nSample Output 18\n\nThe maximum possible number of players is achieved when, for example, the players have the following scores: 12,9,8,7,5,2,1,0.\n\n\n\n\n\nSample Input 25\n1 10\n3 6\n5 2\n4 4\n2 8\n\n\n\n\n\nSample Output 27\n\n\n\n\n\n\nSample Input 32\n1 1000000000\n1000000000 1\n\n\n\n\n\nSample Output 31000000001"}
{"id": "p03589", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer N.\nFind a triple of positive integers h, n and w such that 4/N = 1/h + 1/n + 1/w.\nIf there are multiple solutions, any of them will be accepted.\n\n\n\n\nConstraints\nIt is guaranteed that, for the given integer N, there exists a solution such that h,n,w \\leq 3500.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputsPrint a triple of positive integers h, n and w that satisfies the condition, in the following format:\nh n w\n\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 11 2 2\n\n4/2 = 1/1 + 1/2 + 1/2.\n\n\n\n\n\nSample Input 23485\n\n\n\n\n\nSample Output 2872 1012974 1539173474040\n\nIt is allowed to use an integer exceeding 3500 in a solution.\n\n\n\n\n\nSample Input 34664\n\n\n\n\n\nSample Output 33498 3498 3498"}
{"id": "p03590", "problem": "Score : 500 points\n\n\nProblem StatementSeisu-ya, a store specializing in non-negative integers, sells N non-negative integers. The i-th integer is A_i and has a utility of B_i.\nThere may be multiple equal integers with different utilities.\nTakahashi will buy some integers in this store. He can buy a combination of integers whose bitwise OR is less than or equal to K. He wants the sum of utilities of purchased integers to be as large as possible.\nFind the maximum possible sum of utilities of purchased integers.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n0 \\leq K < 2^{30}\n0 \\leq A_i < 2^{30}(1\\leq i\\leq N)\n1 \\leq B_i \\leq 10^9(1\\leq i\\leq N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN K\nA_1 B_1\n:\nA_N B_N\n\n\n\n\n\nOutputsPrint the maximum possible sum of utilities of purchased integers.\n\n\n\n\n\n\nSample Input 13 5\n3 3\n4 4\n2 5\n\n\n\n\n\nSample Output 18\n\nBuy 2 and 3 to achieve the maximum possible total utility, 8.\n\n\n\n\n\nSample Input 23 6\n3 3\n4 4\n2 5\n\n\n\n\n\nSample Output 29\n\nBuy 2 and 4 to achieve the maximum possible total utility, 9.\n\n\n\n\n\nSample Input 37 14\n10 5\n7 4\n11 4\n9 8\n3 6\n6 2\n8 9\n\n\n\n\n\nSample Output 332"}
{"id": "p03591", "problem": "Score : 100 points\n\n\nProblem StatementRingo is giving a present to Snuke.\nRingo has found out that Snuke loves yakiniku (a Japanese term meaning grilled meat. yaki: grilled, niku: meat). He supposes that Snuke likes grilled things starting with YAKI in Japanese, and does not like other things.\nYou are given a string S representing the Japanese name of Ringo's present to Snuke. Determine whether S starts with YAKI.\n\n\n\n\nConstraints\n1 \\leq |S| \\leq 10\nS consists of uppercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S starts with YAKI, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 1YAKINIKU\n\n\n\n\n\nSample Output 1Yes\n\nYAKINIKU starts with YAKI.\n\n\n\n\n\nSample Input 2TAKOYAKI\n\n\n\n\n\nSample Output 2No\n\nTAKOYAKI (a Japanese snack. tako: octopus) does not start with YAKI.\n\n\n\n\n\nSample Input 3YAK\n\n\n\n\n\nSample Output 3No"}
{"id": "p03592", "problem": "Score : 200 points\n\n\nProblem StatementWe have a grid with N rows and M columns of squares. Initially, all the squares are white.\nThere is a button attached to each row and each column.\nWhen a button attached to a row is pressed, the colors of all the squares in that row are inverted; that is, white squares become black and vice versa.\nWhen a button attached to a column is pressed, the colors of all the squares in that column are inverted.\nTakahashi can freely press the buttons any number of times. Determine whether he can have exactly K black squares in the grid.\n\n\n\n\nConstraints\n1 \\leq N,M \\leq 1000\n0 \\leq K \\leq NM\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M K\n\n\n\n\n\nOutputIf Takahashi can have exactly K black squares in the grid, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 12 2 2\n\n\n\n\n\nSample Output 1Yes\n\nPress the buttons in the order of the first row, the first column.\n\n\n\n\n\nSample Input 22 2 1\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 33 5 8\n\n\n\n\n\nSample Output 3Yes\n\nPress the buttons in the order of the first column, third column, second row, fifth column.\n\n\n\n\n\nSample Input 47 9 20\n\n\n\n\n\nSample Output 4No"}
{"id": "p03593", "problem": "Score : 400 points\n\n\nProblem StatementWe have an H-by-W matrix.\nLet a_{ij} be the element at the i-th row from the top and j-th column from the left.\nIn this matrix, each a_{ij} is a lowercase English letter.\nSnuke is creating another H-by-W matrix, A', by freely rearranging the elements in A.\nHere, he wants to satisfy the following condition:\n\nEvery row and column in A' can be read as a palindrome.\n\nDetermine whether he can create a matrix satisfying the condition.\n\n\n\n\nNoteA palindrome is a string that reads the same forward and backward.\nFor example, a, aa, abba and abcba are all palindromes, while ab, abab and abcda are not.\n\n\n\n\nConstraints\n1 \u2264 H, W \u2264 100\na_{ij} is a lowercase English letter.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\na_{11}a_{12}...a_{1W}\n:\na_{H1}a_{H2}...a_{HW}\n\n\n\n\n\nOutputIf Snuke can create a matrix satisfying the condition, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 13 4\naabb\naabb\naacc\n\n\n\n\n\nSample Output 1Yes\n\nFor example, the following matrix satisfies the condition.\nabba\nacca\nabba\n\n\n\n\n\n\nSample Input 22 2\naa\nbb\n\n\n\n\n\nSample Output 2No\n\nIt is not possible to create a matrix satisfying the condition, no matter how we rearrange the elements in A.\n\n\n\n\n\nSample Input 35 1\nt\nw\ne\ne\nt\n\n\n\n\n\nSample Output 3Yes\n\nFor example, the following matrix satisfies the condition.\nt\ne\nw\ne\nt\n\n\n\n\n\n\nSample Input 42 5\nabxba\nabyba\n\n\n\n\n\nSample Output 4No\n\n\n\n\n\n\nSample Input 51 1\nz\n\n\n\n\n\nSample Output 5Yes"}
{"id": "p03594", "problem": "Score : 700 points\n\n\nProblem StatementWe have a grid with H rows and W columns of squares.\nWe will represent the square at the i-th row from the top and j-th column from the left as (i,\\ j).\nAlso, we will define the distance between the squares (i_1,\\ j_1) and (i_2,\\ j_2) as |i_1 - i_2| + |j_1 - j_2|.\nSnuke is painting each square in red, yellow, green or blue.\nHere, for a given positive integer d, he wants to satisfy the following condition:\n\nNo two squares with distance exactly d have the same color.\n\nFind a way to paint the squares satisfying the condition.\nIt can be shown that a solution always exists.\n\n\n\n\nConstraints\n2 \u2264 H, W \u2264 500\n1 \u2264 d \u2264 H + W - 2\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W d\n\n\n\n\n\nOutputPrint a way to paint the squares satisfying the condition, in the following format. If the square (i,\\ j) is painted in red, yellow, green or blue, c_{ij} should be R, Y, G or B, respectively.\nc_{11}c_{12}...c_{1W}\n:\nc_{H1}c_{H2}...c_{HW}\n\n\n\n\n\n\n\nSample Input 12 2 1\n\n\n\n\n\nSample Output 1RY\nGR\n\nThere are four pairs of squares with distance exactly 1.\nAs shown below, no two such squares have the same color.\n\n(1,\\ 1), (1,\\ 2) : R, Y\n(1,\\ 2), (2,\\ 2) : Y, R\n(2,\\ 2), (2,\\ 1) : R, G\n(2,\\ 1), (1,\\ 1) : G, R\n\n\n\n\n\n\nSample Input 22 3 2\n\n\n\n\n\nSample Output 2RYB\nRGB\n\nThere are six pairs of squares with distance exactly 2.\nAs shown below, no two such squares have the same color.\n\n(1,\\ 1) , (1,\\ 3) : R , B\n(1,\\ 3) , (2,\\ 2) : B , G\n(2,\\ 2) , (1,\\ 1) : G , R\n(2,\\ 1) , (2,\\ 3) : R , B\n(2,\\ 3) , (1,\\ 2) : B , Y\n(1,\\ 2) , (2,\\ 1) : Y , R"}
{"id": "p03595", "problem": "Score : 1600 points\n\n\nProblem StatementRingo got interested in modern art. He decided to draw a big picture on the board with N+2 rows and M+2 columns of squares constructed in the venue of CODE FESTIVAL 2017, using some people.\nThe square at the (i+1)-th row and (j+1)-th column in the board is represented by the pair of integers (i,j). That is, the top-left square is (0,0), and the bottom-right square is (N+1,M+1).\nInitially, the squares (x,y) satisfying 1 \\leq x \\leq N and 1 \\leq y \\leq M are painted white, and the other (outermost) squares are painted black.\nRingo arranged people at some of the outermost squares, facing inward.\nMore specifically, the arrangement of people is represented by four strings A, B, C and D, as follows:\n\nFor each row except the top and bottom, if the i-th character (1 \\leq i \\leq N) in A is 1, place a person facing right at the square (i,0); otherwise, do nothing.\nFor each row except the top and bottom, if the i-th character (1 \\leq i \\leq N) in B is 1, place a person facing left at the square (i,M+1); otherwise, do nothing.\nFor each column except the leftmost and rightmost, if the i-th character (1 \\leq i \\leq M) in C is 1, place a person facing down at the square (0,i); otherwise, do nothing.\nFor each column except the leftmost and rightmost, if the i-th character (1 \\leq i \\leq M) in D is 1, place a person facing up at the square (N+1,i); otherwise, do nothing.\n\nEach person has a sufficient amount of non-white paint. No two people have paint of the same color.\n\n\nAn example of an arrangement of people (For convenience, black squares are displayed in gray)\n\nRingo repeats the following sequence of operations until all people are dismissed from the venue.\n\nSelect a person who is still in the venue.\nThe selected person repeats the following action while the square in front of him/her is white: move one square forward, and paint the square he/she enters with his/her paint. When the square in front of him/her is not white, he/she stops doing the action.\nThe person is now dismissed from the venue.\n\n\n\nAn example of a way the board is painted\n\nHow many different states of the board can Ringo obtain at the end of the process? Find the count modulo 998244353.\nTwo states of the board are considered different when there is a square painted in different colors.\n\n\n\n\nConstraints\n1 \\leq N,M \\leq 10^5\n|A|=|B|=N\n|C|=|D|=M\nA, B, C and D consist of 0 and 1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nA\nB\nC\nD\n\n\n\n\n\nOutputPrint the number of the different states of the board Ringo can obtain at the end of the process, modulo 998244353.\n\n\n\n\n\n\nSample Input 12 2\n10\n01\n10\n01\n\n\n\n\n\nSample Output 16\n\nThere are six possible states as shown below.\n\n\n\n\n\n\nSample Input 22 2\n11\n11\n11\n11\n\n\n\n\n\nSample Output 232\n\n\n\n\n\n\nSample Input 33 4\n111\n111\n1111\n1111\n\n\n\n\n\nSample Output 31276\n\n\n\n\n\n\nSample Input 417 21\n11001010101011101\n11001010011010111\n111010101110101111100\n011010110110101000111\n\n\n\n\n\nSample Output 4548356548\n\nBe sure to find the count modulo 998244353.\n\n\n\n\n\nSample Input 53 4\n000\n101\n1111\n0010\n\n\n\n\n\nSample Output 521\n\n\n\n\n\n\nSample Input 69 13\n111100001\n010101011\n0000000000000\n1010111111101\n\n\n\n\n\nSample Output 6177856\n\n\n\n\n\n\nSample Input 723 30\n01010010101010010001110\n11010100100100101010101\n000101001001010010101010101101\n101001000100101001010010101000\n\n\n\n\n\nSample Output 7734524988"}
{"id": "p03596", "problem": "Score : 1600 points\n\n\nProblem StatementThere are A slimes lining up in a row.\nInitially, the sizes of the slimes are all 1.\nSnuke can repeatedly perform the following operation.\n\nChoose a positive even number M. Then, select M consecutive slimes and form M / 2 pairs from those slimes as follows: pair the 1-st and 2-nd of them from the left, the 3-rd and 4-th of them, ..., the (M-1)-th and M-th of them. Combine each pair of slimes into one larger slime. Here, the size of a combined slime is the sum of the individual slimes before combination. The order of the M / 2 combined slimes remain the same as the M / 2 pairs of slimes before combination.\n\nSnuke wants to get to the situation where there are exactly N slimes, and the size of the i-th (1 \u2264 i \u2264 N) slime from the left is a_i.\nFind the minimum number of operations required to achieve his goal.\nNote that A is not directly given as input. Assume A = a_1 + a_2 + ... + a_N.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum number of operations required to achieve Snuke's goal.\n\n\n\n\n\n\nSample Input 12\n3 3\n\n\n\n\n\nSample Output 12\n\nOne way to achieve Snuke's goal is as follows.\nHere, the selected slimes are marked in bold.\n\n(1, 1, 1, 1, 1, 1) \u2192 (1, 2, 2, 1)\n(1, 2, 2, 1) \u2192 (3, 3)\n\n\n\n\n\n\nSample Input 24\n2 1 2 2\n\n\n\n\n\nSample Output 22\n\nOne way to achieve Snuke's goal is as follows.\n\n(1, 1, 1, 1, 1, 1, 1) \u2192 (2, 1, 1, 1, 1, 1)\n(2, 1, 1, 1, 1, 1) \u2192 (2, 1, 2, 2)\n\n\n\n\n\n\nSample Input 31\n1\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 410\n3 1 4 1 5 9 2 6 5 3\n\n\n\n\n\nSample Output 410"}
{"id": "p03597", "problem": "Score : 100 points\n\n\nProblem StatementWe have an N \\times N square grid.\nWe will paint each square in the grid either black or white.\nIf we paint exactly A squares white, how many squares will be painted black?\n\n\n\n\nConstraints\n1 \\leq N \\leq 100\n0 \\leq A \\leq N^2\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nA\n\n\n\n\n\nOutputsPrint the number of squares that will be painted black.\n\n\n\n\n\n\nSample Input 13\n4\n\n\n\n\n\nSample Output 15\n\nThere are nine squares in a 3 \\times 3 square grid.\nFour of them will be painted white, so the remaining five squares will be painted black.\n\n\n\n\n\nSample Input 219\n100\n\n\n\n\n\nSample Output 2261\n\n\n\n\n\n\nSample Input 310\n0\n\n\n\n\n\nSample Output 3100\n\nAs zero squares will be painted white, all the squares will be painted black."}
{"id": "p03598", "problem": "Score : 200 points\n\n\nProblem StatementThere are N balls in the xy-plane. The coordinates of the i-th of them is (x_i, i).\nThus, we have one ball on each of the N lines y = 1, y = 2, ..., y = N.\nIn order to collect these balls, Snuke prepared 2N robots, N of type A and N of type B.\nThen, he placed the i-th type-A robot at coordinates (0, i), and the i-th type-B robot at coordinates (K, i).\nThus, now we have one type-A robot and one type-B robot on each of the N lines y = 1, y = 2, ..., y = N.\nWhen activated, each type of robot will operate as follows.\n\n\nWhen a type-A robot is activated at coordinates (0, a), it will move to the position of the ball on the line y = a, collect the ball, move back to its original position (0, a) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nWhen a type-B robot is activated at coordinates (K, b), it will move to the position of the ball on the line y = b, collect the ball, move back to its original position (K, b) and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nSnuke will activate some of the 2N robots to collect all of the balls. Find the minimum possible total distance covered by robots.\n\n\n\n\nConstraints\n1 \\leq N \\leq 100\n1 \\leq K \\leq 100\n0 < x_i < K\nAll input values are integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nK\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputsPrint the minimum possible total distance covered by robots.\n\n\n\n\n\n\nSample Input 11\n10\n2\n\n\n\n\n\nSample Output 14\n\nThere are just one ball, one type-A robot and one type-B robot.\nIf the type-A robot is used to collect the ball, the distance from the robot to the ball is 2, and the distance from the ball to the original position of the robot is also 2, for a total distance of 4.\nSimilarly, if the type-B robot is used, the total distance covered will be 16.\nThus, the total distance covered will be minimized when the type-A robot is used. The output should be 4.\n\n\n\n\n\nSample Input 22\n9\n3 6\n\n\n\n\n\nSample Output 212\n\nThe total distance covered will be minimized when the first ball is collected by the type-A robot, and the second ball by the type-B robot.\n\n\n\n\n\nSample Input 35\n20\n11 12 9 17 12\n\n\n\n\n\nSample Output 374"}
{"id": "p03599", "problem": "Score : 300 points\n\n\nProblem StatementSnuke is making sugar water in a beaker.\nInitially, the beaker is empty. Snuke can perform the following four types of operations any number of times. He may choose not to perform some types of operations.\n\nOperation 1: Pour 100A grams of water into the beaker.\nOperation 2: Pour 100B grams of water into the beaker.\nOperation 3: Put C grams of sugar into the beaker.\nOperation 4: Put D grams of sugar into the beaker.\n\nIn our experimental environment, E grams of sugar can dissolve into 100 grams of water.\nSnuke will make sugar water with the highest possible density.\nThe beaker can contain at most F grams of substances (water and sugar combined), and there must not be any undissolved sugar in the beaker.\nFind the mass of the sugar water Snuke will make, and the mass of sugar dissolved in it.\nIf there is more than one candidate, any of them will be accepted.\nWe remind you that the sugar water that contains a grams of water and b grams of sugar is \\frac{100b}{a + b} percent.\nAlso, in this problem, pure water that does not contain any sugar is regarded as 0 percent density sugar water.\n\n\n\n\nConstraints\n1 \\leq A < B \\leq 30\n1 \\leq C < D \\leq 30\n1 \\leq E \\leq 100\n100A \\leq F \\leq 3 000\nA, B, C, D, E and F are all integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nA B C D E F\n\n\n\n\n\nOutputsPrint two integers separated by a space.\nThe first integer should be the mass of the desired sugar water, and the second should be the mass of the sugar dissolved in it.\n\n\n\n\n\n\nSample Input 11 2 10 20 15 200\n\n\n\n\n\nSample Output 1110 10\n\nIn this environment, 15 grams of sugar can dissolve into 100 grams of water, and the beaker can contain at most 200 grams of substances.\nWe can make 110 grams of sugar water by performing Operation 1 once and Operation 3 once.\nIt is not possible to make sugar water with higher density.\nFor example, the following sequences of operations are infeasible:\n\nIf we perform Operation 1 once and Operation 4 once, there will be undissolved sugar in the beaker.\nIf we perform Operation 2 once and Operation 3 three times, the mass of substances in the beaker will exceed 200 grams.\n\n\n\n\n\n\nSample Input 21 2 1 2 100 1000\n\n\n\n\n\nSample Output 2200 100\n\nThere are other acceptable outputs, such as:\n400 200\n\nHowever, the output below is not acceptable:\n300 150\n\nThis is because, in order to make 300 grams of sugar water containing 150 grams of sugar, we need to pour exactly 150 grams of water into the beaker, which is impossible.\n\n\n\n\n\nSample Input 317 19 22 26 55 2802\n\n\n\n\n\nSample Output 32634 934"}
{"id": "p03600", "problem": "Score : 500 points\n\n\nProblem StatementIn Takahashi Kingdom, which once existed, there are N cities, and some pairs of cities are connected bidirectionally by roads.\nThe following are known about the road network:\n\nPeople traveled between cities only through roads. It was possible to reach any city from any other city, via intermediate cities if necessary.\nDifferent roads may have had different lengths, but all the lengths were positive integers.\n\nSnuke the archeologist found a table with N rows and N columns, A, in the ruin of Takahashi Kingdom.\nHe thought that it represented the shortest distances between the cities along the roads in the kingdom.\nDetermine whether there exists a road network such that for each u and v, the integer A_{u, v} at the u-th row and v-th column of A is equal to the length of the shortest path from City u to City v.\nIf such a network exist, find the shortest possible total length of the roads.\n\n\n\n\nConstraints\n1 \\leq N \\leq 300\nIf i \u2260 j, 1 \\leq A_{i, j} = A_{j, i} \\leq 10^9.\nA_{i, i} = 0\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n...\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\n\n\n\n\nOutputsIf there exists no network that satisfies the condition, print -1.\nIf it exists, print the shortest possible total length of the roads.\n\n\n\n\n\n\nSample Input 13\n0 1 3\n1 0 2\n3 2 0\n\n\n\n\n\nSample Output 13\n\nThe network below satisfies the condition:\n\nCity 1 and City 2 is connected by a road of length 1.\nCity 2 and City 3 is connected by a road of length 2.\nCity 3 and City 1 is not connected by a road.\n\n\n\n\n\n\nSample Input 23\n0 1 3\n1 0 1\n3 1 0\n\n\n\n\n\nSample Output 2-1\n\nAs there is a path of length 1 from City 1 to City 2 and City 2 to City 3, there is a path of length 2 from City 1 to City 3.\nHowever, according to the table, the shortest distance between City 1 and City 3 must be 3.\nThus, we conclude that there exists no network that satisfies the condition.\n\n\n\n\n\nSample Input 35\n0 21 18 11 28\n21 0 13 10 26\n18 13 0 23 13\n11 10 23 0 17\n28 26 13 17 0\n\n\n\n\n\nSample Output 382\n\n\n\n\n\n\nSample Input 43\n0 1000000000 1000000000\n1000000000 0 1000000000\n1000000000 1000000000 0\n\n\n\n\n\nSample Output 43000000000"}
{"id": "p03601", "problem": "Score : 300 points\n\n\nProblem StatementSnuke is making sugar water in a beaker.\nInitially, the beaker is empty. Snuke can perform the following four types of operations any number of times. He may choose not to perform some types of operations.\n\nOperation 1: Pour 100A grams of water into the beaker.\nOperation 2: Pour 100B grams of water into the beaker.\nOperation 3: Put C grams of sugar into the beaker.\nOperation 4: Put D grams of sugar into the beaker.\n\nIn our experimental environment, E grams of sugar can dissolve into 100 grams of water.\nSnuke will make sugar water with the highest possible density.\nThe beaker can contain at most F grams of substances (water and sugar combined), and there must not be any undissolved sugar in the beaker.\nFind the mass of the sugar water Snuke will make, and the mass of sugar dissolved in it.\nIf there is more than one candidate, any of them will be accepted.\nWe remind you that the sugar water that contains a grams of water and b grams of sugar is \\frac{100b}{a + b} percent.\nAlso, in this problem, pure water that does not contain any sugar is regarded as 0 percent density sugar water.\n\n\n\n\nConstraints\n1 \\leq A < B \\leq 30\n1 \\leq C < D \\leq 30\n1 \\leq E \\leq 100\n100A \\leq F \\leq 3 000\nA, B, C, D, E and F are all integers.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nA B C D E F\n\n\n\n\n\nOutputsPrint two integers separated by a space.\nThe first integer should be the mass of the desired sugar water, and the second should be the mass of the sugar dissolved in it.\n\n\n\n\n\n\nSample Input 11 2 10 20 15 200\n\n\n\n\n\nSample Output 1110 10\n\nIn this environment, 15 grams of sugar can dissolve into 100 grams of water, and the beaker can contain at most 200 grams of substances.\nWe can make 110 grams of sugar water by performing Operation 1 once and Operation 3 once.\nIt is not possible to make sugar water with higher density.\nFor example, the following sequences of operations are infeasible:\n\nIf we perform Operation 1 once and Operation 4 once, there will be undissolved sugar in the beaker.\nIf we perform Operation 2 once and Operation 3 three times, the mass of substances in the beaker will exceed 200 grams.\n\n\n\n\n\n\nSample Input 21 2 1 2 100 1000\n\n\n\n\n\nSample Output 2200 100\n\nThere are other acceptable outputs, such as:\n400 200\n\nHowever, the output below is not acceptable:\n300 150\n\nThis is because, in order to make 300 grams of sugar water containing 150 grams of sugar, we need to pour exactly 150 grams of water into the beaker, which is impossible.\n\n\n\n\n\nSample Input 317 19 22 26 55 2802\n\n\n\n\n\nSample Output 32634 934"}
{"id": "p03602", "problem": "Score : 500 points\n\n\nProblem StatementIn Takahashi Kingdom, which once existed, there are N cities, and some pairs of cities are connected bidirectionally by roads.\nThe following are known about the road network:\n\nPeople traveled between cities only through roads. It was possible to reach any city from any other city, via intermediate cities if necessary.\nDifferent roads may have had different lengths, but all the lengths were positive integers.\n\nSnuke the archeologist found a table with N rows and N columns, A, in the ruin of Takahashi Kingdom.\nHe thought that it represented the shortest distances between the cities along the roads in the kingdom.\nDetermine whether there exists a road network such that for each u and v, the integer A_{u, v} at the u-th row and v-th column of A is equal to the length of the shortest path from City u to City v.\nIf such a network exist, find the shortest possible total length of the roads.\n\n\n\n\nConstraints\n1 \\leq N \\leq 300\nIf i \u2260 j, 1 \\leq A_{i, j} = A_{j, i} \\leq 10^9.\nA_{i, i} = 0\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n...\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\n\n\n\n\nOutputsIf there exists no network that satisfies the condition, print -1.\nIf it exists, print the shortest possible total length of the roads.\n\n\n\n\n\n\nSample Input 13\n0 1 3\n1 0 2\n3 2 0\n\n\n\n\n\nSample Output 13\n\nThe network below satisfies the condition:\n\nCity 1 and City 2 is connected by a road of length 1.\nCity 2 and City 3 is connected by a road of length 2.\nCity 3 and City 1 is not connected by a road.\n\n\n\n\n\n\nSample Input 23\n0 1 3\n1 0 1\n3 1 0\n\n\n\n\n\nSample Output 2-1\n\nAs there is a path of length 1 from City 1 to City 2 and City 2 to City 3, there is a path of length 2 from City 1 to City 3.\nHowever, according to the table, the shortest distance between City 1 and City 3 must be 3.\nThus, we conclude that there exists no network that satisfies the condition.\n\n\n\n\n\nSample Input 35\n0 21 18 11 28\n21 0 13 10 26\n18 13 0 23 13\n11 10 23 0 17\n28 26 13 17 0\n\n\n\n\n\nSample Output 382\n\n\n\n\n\n\nSample Input 43\n0 1000000000 1000000000\n1000000000 0 1000000000\n1000000000 1000000000 0\n\n\n\n\n\nSample Output 43000000000"}
{"id": "p03603", "problem": "Score : 700 points\n\n\nProblem StatementWe have a tree with N vertices. Vertex 1 is the root of the tree, and the parent of Vertex i (2 \\leq i \\leq N) is Vertex P_i.\nTo each vertex in the tree, Snuke will allocate a color, either black or white, and a non-negative integer weight.\nSnuke has a favorite integer sequence, X_1, X_2, ..., X_N, so he wants to allocate colors and weights so that the following condition is satisfied for all v.\n\nThe total weight of the vertices with the same color as v among the vertices contained in the subtree whose root is v, is X_v.\n\nHere, the subtree whose root is v is the tree consisting of Vertex v and all of its descendants.\nDetermine whether it is possible to allocate colors and weights in this way.\n\n\n\n\nConstraints\n1 \\leq N \\leq 1 000\n1 \\leq P_i \\leq i - 1\n0 \\leq X_i \\leq 5 000\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nP_2 P_3 ... P_N\nX_1 X_2 ... X_N\n\n\n\n\n\nOutputsIf it is possible to allocate colors and weights to the vertices so that the condition is satisfied, print POSSIBLE; otherwise, print IMPOSSIBLE.\n\n\n\n\n\n\nSample Input 13\n1 1\n4 3 2\n\n\n\n\n\nSample Output 1POSSIBLE\n\nFor example, the following allocation satisfies the condition:\n\nSet the color of Vertex 1 to white and its weight to 2.\nSet the color of Vertex 2 to black and its weight to 3.\nSet the color of Vertex 3 to white and its weight to 2.\n\nThere are also other possible allocations.\n\n\n\n\n\nSample Input 23\n1 2\n1 2 3\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\nIf the same color is allocated to Vertex 2 and Vertex 3, Vertex 2 cannot be allocated a non-negative weight.\nIf different colors are allocated to Vertex 2 and 3, no matter which color is allocated to Vertex 1, it cannot be allocated a non-negative weight.\nThus, there exists no allocation of colors and weights that satisfies the condition.\n\n\n\n\n\nSample Input 38\n1 1 1 3 4 5 5\n4 1 6 2 2 1 3 3\n\n\n\n\n\nSample Output 3POSSIBLE\n\n\n\n\n\n\nSample Input 41\n\n0\n\n\n\n\n\nSample Output 4POSSIBLE"}
{"id": "p03604", "problem": "Score : 1200 points\n\n\nProblem StatementThere are 2N balls in the xy-plane. The coordinates of the i-th of them is (x_i, y_i).\nHere, x_i and y_i are integers between 1 and N (inclusive) for all i, and no two balls occupy the same coordinates.\nIn order to collect these balls, Snuke prepared 2N robots, N of type A and N of type B.\nThen, he placed the type-A robots at coordinates (1, 0), (2, 0), ..., (N, 0), and the type-B robots at coordinates (0, 1), (0, 2), ..., (0, N), one at each position.\nWhen activated, each type of robot will operate as follows.\n\n\nWhen a type-A robot is activated at coordinates (a, 0), it will move to the position of the ball with the lowest y-coordinate among the balls on the line x = a, collect the ball and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nWhen a type-B robot is activated at coordinates (0, b), it will move to the position of the ball with the lowest x-coordinate among the balls on the line y = b, collect the ball and deactivate itself. If there is no such ball, it will just deactivate itself without doing anything.\n\n\nOnce deactivated, a robot cannot be activated again. Also, while a robot is operating, no new robot can be activated until the operating robot is deactivated.\nWhen Snuke was about to activate a robot, he noticed that he may fail to collect all the balls, depending on the order of activating the robots.\nAmong the (2N)! possible orders of activating the robots, find the number of the ones such that all the balls can be collected, modulo 1 000 000 007.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq x_i \\leq N\n1 \\leq y_i \\leq N\nIf i \u2260 j, either x_i \u2260 x_j or y_i \u2260 y_j.\n\n\n\n\n\n\n\nInputsInput is given from Standard Input in the following format:\nN\nx_1 y_1\n...\nx_{2N} y_{2N}\n\n\n\n\n\nOutputsPrint the number of the orders of activating the robots such that all the balls can be collected, modulo 1 000 000 007.\n\n\n\n\n\n\nSample Input 12\n1 1\n1 2\n2 1\n2 2\n\n\n\n\n\nSample Output 18\n\nWe will refer to the robots placed at (1, 0) and (2, 0) as A1 and A2, respectively, and the robots placed at (0, 1) and (0, 2) as B1 and B2, respectively.\nThere are eight orders of activation that satisfy the condition, as follows:\n\nA1, B1, A2, B2\nA1, B1, B2, A2\nA1, B2, B1, A2\nA2, B1, A1, B2\nB1, A1, B2, A2\nB1, A1, A2, B2\nB1, A2, A1, B2\nB2, A1, B1, A2\n\nThus, the output should be 8.\n\n\n\n\n\nSample Input 24\n3 2\n1 2\n4 1\n4 2\n2 2\n4 4\n2 1\n1 3\n\n\n\n\n\nSample Output 27392\n\n\n\n\n\n\nSample Input 34\n1 1\n2 2\n3 3\n4 4\n1 2\n2 1\n3 4\n4 3\n\n\n\n\n\nSample Output 34480\n\n\n\n\n\n\nSample Input 48\n6 2\n5 1\n6 8\n7 8\n6 5\n5 7\n4 3\n1 4\n7 6\n8 3\n2 8\n3 6\n3 2\n8 5\n1 5\n5 8\n\n\n\n\n\nSample Output 482060779\n\n\n\n\n\n\nSample Input 53\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n\n\n\n\n\nSample Output 50\n\nWhen there is no order of activation that satisfies the condition, the output should be 0."}
{"id": "p03605", "problem": "Score : 100 points\n\n\nProblem StatementIt is September 9 in Japan now.\nYou are given a two-digit integer N. Answer the question: Is 9 contained in the decimal notation of N?\n\n\n\n\nConstraints\n10\u2264N\u226499\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputIf 9 is contained in the decimal notation of N, print Yes; if not, print No.\n\n\n\n\n\n\nSample Input 129\n\n\n\n\n\nSample Output 1Yes\n\nThe one's digit of 29 is 9.\n\n\n\n\n\nSample Input 272\n\n\n\n\n\nSample Output 2No\n\n72 does not contain 9.\n\n\n\n\n\nSample Input 391\n\n\n\n\n\nSample Output 3Yes"}
{"id": "p03606", "problem": "Score : 200 points\n\n\nProblem StatementJoisino is working as a receptionist at a theater.\nThe theater has 100000 seats, numbered from 1 to 100000.\nAccording to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive).\nHow many people are sitting at the theater now?\n\n\n\n\nConstraints\n1\u2264N\u22641000\n1\u2264l_i\u2264r_i\u2264100000\nNo seat is occupied by more than one person.\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nl_1 r_1\n:\nl_N r_N\n\n\n\n\n\nOutputPrint the number of people sitting at the theater.\n\n\n\n\n\n\nSample Input 11\n24 30\n\n\n\n\n\nSample Output 17\n\nThere are 7 people, sitting at Seat 24,25,26,27,28,29 and 30.\n\n\n\n\n\nSample Input 22\n6 8\n3 3\n\n\n\n\n\nSample Output 24"}
{"id": "p03607", "problem": "Score : 300 points\n\n\nProblem StatementYou are playing the following game with Joisino.\n\nInitially, you have a blank sheet of paper.\nJoisino announces a number. If that number is written on the sheet, erase the number from the sheet; if not, write the number on the sheet. This process is repeated N times.\nThen, you are asked a question: How many numbers are written on the sheet now?\n\nThe numbers announced by Joisino are given as A_1, ... ,A_N in the order she announces them. How many numbers will be written on the sheet at the end of the game?\n\n\n\n\nConstraints\n1\u2264N\u2264100000\n1\u2264A_i\u22641000000000(=10^9)\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1\n:\nA_N\n\n\n\n\n\nOutputPrint how many numbers will be written on the sheet at the end of the game.\n\n\n\n\n\n\nSample Input 13\n6\n2\n6\n\n\n\n\n\nSample Output 11\n\nThe game proceeds as follows:\n\n\n6 is not written on the sheet, so write 6.\n\n\n2 is not written on the sheet, so write 2.\n\n\n6 is written on the sheet, so erase 6.\n\n\nThus, the sheet contains only 2 in the end. The answer is 1.\n\n\n\n\n\nSample Input 24\n2\n5\n5\n2\n\n\n\n\n\nSample Output 20\n\nIt is possible that no number is written on the sheet in the end.\n\n\n\n\n\nSample Input 36\n12\n22\n16\n22\n18\n12\n\n\n\n\n\nSample Output 32"}
{"id": "p03608", "problem": "Score : 400 points\n\n\nProblem StatementThere are N towns in the State of Atcoder, connected by M bidirectional roads.\nThe i-th road connects Town A_i and B_i and has a length of C_i.\nJoisino is visiting R towns in the state, r_1,r_2,..,r_R (not necessarily in this order).\nShe will fly to the first town she visits, and fly back from the last town she visits, but for the rest of the trip she will have to travel by road.\nIf she visits the towns in the order that minimizes the distance traveled by road, what will that distance be?\n\n\n\n\nConstraints\n2\u2264N\u2264200\n1\u2264M\u2264N\u00d7(N-1)/2\n2\u2264R\u2264min(8,N) (min(8,N) is the smaller of 8 and N.)\nr_i\u2260r_j (i\u2260j)\n1\u2264A_i,B_i\u2264N, A_i\u2260B_i\n(A_i,B_i)\u2260(A_j,B_j),(A_i,B_i)\u2260(B_j,A_j) (i\u2260j)\n1\u2264C_i\u2264100000\nEvery town can be reached from every town by road.\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M R\nr_1 ... r_R\nA_1 B_1 C_1\n:\nA_M B_M C_M\n\n\n\n\n\nOutputPrint the distance traveled by road if Joisino visits the towns in the order that minimizes it.\n\n\n\n\n\n\nSample Input 13 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4\n\n\n\n\n\nSample Output 12\n\nFor example, if she visits the towns in the order of 1, 2, 3, the distance traveled will be 2, which is the minimum possible.\n\n\n\n\n\nSample Input 23 3 2\n1 3\n2 3 2\n1 3 6\n1 2 2\n\n\n\n\n\nSample Output 24\n\nThe shortest distance between Towns 1 and 3 is 4. Thus, whether she visits Town 1 or 3 first, the distance traveled will be 4.\n\n\n\n\n\nSample Input 34 6 3\n2 3 4\n1 2 4\n2 3 3\n4 3 1\n1 4 1\n4 2 2\n3 1 6\n\n\n\n\n\nSample Output 33"}
{"id": "p03609", "problem": "Score : 100 points\n\n\nProblem StatementWe have a sandglass that runs for X seconds. The sand drops from the upper bulb at a rate of 1 gram per second. That is, the upper bulb initially contains X grams of sand.\nHow many grams of sand will the upper bulb contains after t seconds?\n\n\n\n\nConstraints\n1\u2264X\u226410^9\n1\u2264t\u226410^9\nX and t are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX t\n\n\n\n\n\nOutputPrint the number of sand in the upper bulb after t second.\n\n\n\n\n\n\nSample Input 1100 17\n\n\n\n\n\nSample Output 183\n\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\n\n\n\n\n\nSample Input 248 58\n\n\n\n\n\nSample Output 20\n\nAll 48 grams of sand will be gone, resulting in 0 grams.\n\n\n\n\n\nSample Input 31000000000 1000000000\n\n\n\n\n\nSample Output 30"}
{"id": "p03610", "problem": "Score : 200 points\n\n\nProblem StatementYou are given a string s consisting of lowercase English letters. Extract all the characters in the odd-indexed positions and print the string obtained by concatenating them. Here, the leftmost character is assigned the index 1.\n\n\n\n\nConstraints\nEach character in s is a lowercase English letter.\n1\u2264|s|\u226410^5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the string obtained by concatenating all the characters in the odd-numbered positions.\n\n\n\n\n\n\nSample Input 1atcoder\n\n\n\n\n\nSample Output 1acdr\n\nExtract the first character a, the third character c, the fifth character d and the seventh character r to obtain acdr.\n\n\n\n\n\nSample Input 2aaaa\n\n\n\n\n\nSample Output 2aa\n\n\n\n\n\n\nSample Input 3z\n\n\n\n\n\nSample Output 3z\n\n\n\n\n\n\nSample Input 4fukuokayamaguchi\n\n\n\n\n\nSample Output 4fkoaaauh"}
{"id": "p03611", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length N, a_1,a_2,...,a_N.\nFor each 1\u2264i\u2264N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.\nAfter these operations, you select an integer X and count the number of i such that a_i=X.\nMaximize this count by making optimal choices.\n\n\n\n\nConstraints\n1\u2264N\u226410^5\n0\u2264a_i<10^5 (1\u2264i\u2264N)\na_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 .. a_N\n\n\n\n\n\nOutputPrint the maximum possible number of i such that a_i=X.\n\n\n\n\n\n\nSample Input 17\n3 1 4 1 5 9 2\n\n\n\n\n\nSample Output 14\n\nFor example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count.\n\n\n\n\n\nSample Input 210\n0 1 2 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 23\n\n\n\n\n\n\nSample Input 31\n99999\n\n\n\n\n\nSample Output 31"}
{"id": "p03612", "problem": "Score : 400 points\n\n\nProblem StatementYou are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero):\nOperation: Swap two adjacent elements in the permutation.\nYou want to have p_i \u2260 i for all 1\u2264i\u2264N.\nFind the minimum required number of operations to achieve this.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\np_1,p_2,..,p_N is a permutation of 1,2,..,N.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\np_1 p_2 .. p_N\n\n\n\n\n\nOutputPrint the minimum required number of operations\n\n\n\n\n\n\nSample Input 15\n1 4 3 5 2\n\n\n\n\n\nSample Output 12\n\nSwap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2.\n\n\n\n\n\nSample Input 22\n1 2\n\n\n\n\n\nSample Output 21\n\nSwapping 1 and 2 satisfies the condition.\n\n\n\n\n\nSample Input 32\n2 1\n\n\n\n\n\nSample Output 30\n\nThe condition is already satisfied initially.\n\n\n\n\n\nSample Input 49\n1 2 4 9 5 8 7 3 6\n\n\n\n\n\nSample Output 43"}
{"id": "p03613", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length N, a_1,a_2,...,a_N.\nFor each 1\u2264i\u2264N, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing.\nAfter these operations, you select an integer X and count the number of i such that a_i=X.\nMaximize this count by making optimal choices.\n\n\n\n\nConstraints\n1\u2264N\u226410^5\n0\u2264a_i<10^5 (1\u2264i\u2264N)\na_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 .. a_N\n\n\n\n\n\nOutputPrint the maximum possible number of i such that a_i=X.\n\n\n\n\n\n\nSample Input 17\n3 1 4 1 5 9 2\n\n\n\n\n\nSample Output 14\n\nFor example, turn the sequence into 2,2,3,2,6,9,2 and select X=2 to obtain 4, the maximum possible count.\n\n\n\n\n\nSample Input 210\n0 1 2 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 23\n\n\n\n\n\n\nSample Input 31\n99999\n\n\n\n\n\nSample Output 31"}
{"id": "p03614", "problem": "Score : 400 points\n\n\nProblem StatementYou are given a permutation p_1,p_2,...,p_N consisting of 1,2,..,N.\nYou can perform the following operation any number of times (possibly zero):\nOperation: Swap two adjacent elements in the permutation.\nYou want to have p_i \u2260 i for all 1\u2264i\u2264N.\nFind the minimum required number of operations to achieve this.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\np_1,p_2,..,p_N is a permutation of 1,2,..,N.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\np_1 p_2 .. p_N\n\n\n\n\n\nOutputPrint the minimum required number of operations\n\n\n\n\n\n\nSample Input 15\n1 4 3 5 2\n\n\n\n\n\nSample Output 12\n\nSwap 1 and 4, then swap 1 and 3. p is now 4,3,1,5,2 and satisfies the condition.\nThis is the minimum possible number, so the answer is 2.\n\n\n\n\n\nSample Input 22\n1 2\n\n\n\n\n\nSample Output 21\n\nSwapping 1 and 2 satisfies the condition.\n\n\n\n\n\nSample Input 32\n2 1\n\n\n\n\n\nSample Output 30\n\nThe condition is already satisfied initially.\n\n\n\n\n\nSample Input 49\n1 2 4 9 5 8 7 3 6\n\n\n\n\n\nSample Output 43"}
{"id": "p03615", "problem": "Score : 700 points\n\n\nProblem StatementYou are given N points (x_i,y_i) located on a two-dimensional plane.\nConsider a subset S of the N points that forms a convex polygon.\nHere, we say a set of points S forms a convex polygon when there exists a convex polygon with a positive area that has the same set of vertices as S. All the interior angles of the polygon must be strictly less than 180\u00b0.\n\n\n\nFor example, in the figure above, {A,C,E} and {B,D,E} form convex polygons; {A,C,D,E}, {A,B,C,E}, {A,B,C}, {D,E} and {} do not.\nFor a given set S, let n be the number of the points among the N points that are inside the convex hull of S (including the boundary and vertices). Then, we will define the score of S as 2^{n-|S|}.\nCompute the scores of all possible sets S that form convex polygons, and find the sum of all those scores.\nHowever, since the sum can be extremely large, print the sum modulo 998244353.\n\n\n\n\nConstraints\n1\u2264N\u2264200\n0\u2264x_i,y_i<10^4 (1\u2264i\u2264N)\nIf i\u2260j, x_i\u2260x_j or y_i\u2260y_j.\nx_i and y_i are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the sum of all the scores modulo 998244353.\n\n\n\n\n\n\nSample Input 14\n0 0\n0 1\n1 0\n1 1\n\n\n\n\n\nSample Output 15\n\nWe have five possible sets as S, four sets that form triangles and one set that forms a square. Each of them has a score of 2^0=1, so the answer is 5.\n\n\n\n\n\nSample Input 25\n0 0\n0 1\n0 2\n0 3\n1 1\n\n\n\n\n\nSample Output 211\n\nWe have three \"triangles\" with a score of 1 each, two \"triangles\" with a score of 2 each, and one \"triangle\" with a score of 4. Thus, the answer is 11.\n\n\n\n\n\nSample Input 31\n3141 2718\n\n\n\n\n\nSample Output 30\n\nThere are no possible set as S, so the answer is 0."}
{"id": "p03616", "problem": "Score : 700 points\n\n\nProblem StatementWe have a sandglass consisting of two bulbs, bulb A and bulb B. These bulbs contain some amount of sand.\nWhen we put the sandglass, either bulb A or B lies on top of the other and becomes the upper bulb. The other bulb becomes the lower bulb.\nThe sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.\nWhen the upper bulb no longer contains any sand, nothing happens.\nInitially at time 0, bulb A is the upper bulb and contains a grams of sand; bulb B contains X-a grams of sand (for a total of X grams).\nWe will turn over the sandglass at time r_1,r_2,..,r_K. Assume that this is an instantaneous action and takes no time. Here, time t refer to the time t seconds after time 0.\nYou are given Q queries.\nEach query is in the form of (t_i,a_i).\nFor each query, assume that a=a_i and find the amount of sand that would be contained in bulb A at time t_i.\n\n\n\n\nConstraints\n1\u2264X\u226410^9\n1\u2264K\u226410^5\n1\u2264r_1<r_2< .. <r_K\u226410^9\n1\u2264Q\u226410^5\n0\u2264t_1<t_2< .. <t_Q\u226410^9\n0\u2264a_i\u2264X (1\u2264i\u2264Q)\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX\nK\nr_1 r_2 .. r_K\nQ\nt_1 a_1\nt_2 a_2\n:\nt_Q a_Q\n\n\n\n\n\nOutputFor each query, print the answer in its own line.\n\n\n\n\n\n\nSample Input 1180\n3\n60 120 180\n3\n30 90\n61 1\n180 180\n\n\n\n\n\nSample Output 160\n1\n120\n\nIn the first query, 30 out of the initial 90 grams of sand will drop from bulb A, resulting in 60 grams.\nIn the second query, the initial 1 gram of sand will drop from bulb A, and nothing will happen for the next 59 seconds. Then, we will turn over the sandglass, and 1 second after this, bulb A contains 1 gram of sand at the time in question.\n\n\n\n\n\nSample Input 2100\n1\n100000\n4\n0 100\n90 100\n100 100\n101 100\n\n\n\n\n\nSample Output 2100\n10\n0\n0\n\nIn every query, the upper bulb initially contains 100 grams, and the question in time comes before we turn over the sandglass.\n\n\n\n\n\nSample Input 3100\n5\n48 141 231 314 425\n7\n0 19\n50 98\n143 30\n231 55\n342 0\n365 100\n600 10\n\n\n\n\n\nSample Output 319\n52\n91\n10\n58\n42\n100"}
{"id": "p03617", "problem": "Score : 300 points\n\n\nProblem StatementYou've come to your favorite store Infinitesco to buy some ice tea.\nThe store sells ice tea in bottles of different volumes at different costs.\nSpecifically, a 0.25-liter bottle costs Q yen, a 0.5-liter bottle costs H yen, a 1-liter bottle costs S yen, and a 2-liter bottle costs D yen.\nThe store has an infinite supply of bottles of each type.\nYou want to buy exactly N liters of ice tea. How many yen do you have to spend?\n\n\n\n\nConstraints\n1 \\leq Q, H, S, D \\leq 10^8\n1 \\leq N \\leq 10^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nQ H S D\nN\n\n\n\n\n\nOutputPrint the smallest number of yen you have to spend to buy exactly N liters of ice tea.\n\n\n\n\n\n\nSample Input 120 30 70 90\n3\n\n\n\n\n\nSample Output 1150\n\nBuy one 2-liter bottle and two 0.5-liter bottles. You'll get 3 liters for 90 + 30 + 30 = 150 yen.\n\n\n\n\n\nSample Input 210000 1000 100 10\n1\n\n\n\n\n\nSample Output 2100\n\nEven though a 2-liter bottle costs just 10 yen, you need only 1 liter.\nThus, you have to buy a 1-liter bottle for 100 yen.\n\n\n\n\n\nSample Input 310 100 1000 10000\n1\n\n\n\n\n\nSample Output 340\n\nNow it's better to buy four 0.25-liter bottles for 10 + 10 + 10 + 10 = 40 yen.\n\n\n\n\n\nSample Input 412345678 87654321 12345678 87654321\n123456789\n\n\n\n\n\nSample Output 41524157763907942"}
{"id": "p03618", "problem": "Score : 500 points\n\n\nProblem StatementYou have a string A = A_1 A_2 ... A_n consisting of lowercase English letters.\nYou can choose any two indices i and j such that 1 \\leq i \\leq j \\leq n and reverse substring A_i A_{i+1} ... A_j.\nYou can perform this operation at most once.\nHow many different strings can you obtain?\n\n\n\n\nConstraints\n1 \\leq |A| \\leq 200,000\nA consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA\n\n\n\n\n\nOutputPrint the number of different strings you can obtain by reversing any substring in A at most once.\n\n\n\n\n\n\nSample Input 1aatt\n\n\n\n\n\nSample Output 15\n\nYou can obtain aatt (don't do anything), atat (reverse A[2..3]), atta (reverse A[2..4]), ttaa (reverse A[1..4]) and taat (reverse A[1..3]).\n\n\n\n\n\nSample Input 2xxxxxxxxxx\n\n\n\n\n\nSample Output 21\n\nWhatever substring you reverse, you'll always get xxxxxxxxxx.\n\n\n\n\n\nSample Input 3abracadabra\n\n\n\n\n\nSample Output 344"}
{"id": "p03619", "problem": "Score : 900 points\n\n\nProblem StatementIn the city of Nevermore, there are 10^8 streets and 10^8 avenues, both numbered from 0 to 10^8-1.\nAll streets run straight from west to east, and all avenues run straight from south to north.\nThe distance between neighboring streets and between neighboring avenues is exactly 100 meters.\nEvery street intersects every avenue. Every intersection can be described by pair (x, y), where x is avenue ID and y is street ID.\nThere are N fountains in the city, situated at intersections (X_i, Y_i).\nUnlike normal intersections, there's a circle with radius 10 meters centered at the intersection, and there are no road parts inside this circle.\nThe picture below shows an example of how a part of the city with roads and fountains may look like.\n\n\n\nCity governors don't like encountering more than one fountain while moving along the same road.\nTherefore, every street contains at most one fountain on it, as well as every avenue.\nCitizens can move along streets, avenues and fountain perimeters.\nWhat is the shortest distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2)?\n\n\n\n\nConstraints\n0 \\leq x_1, y_1, x_2, y_2 < 10^8\n1 \\leq N \\leq 200,000\n0 \\leq X_i, Y_i < 10^8\nX_i \\neq X_j for i \\neq j\nY_i \\neq Y_j for i \\neq j\nIntersections (x_1, y_1) and (x_2, y_2) are different and don't contain fountains.\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nx_1 y_1 x_2 y_2\nN\nX_1 Y_1\nX_2 Y_2\n:\nX_N Y_N\n\n\n\n\n\nOutputPrint the shortest possible distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2), in meters.\nYour answer will be considered correct if its absolute or relative error doesn't exceed 10^{-11}.\n\n\n\n\n\n\nSample Input 11 1 6 5\n3\n3 2\n5 3\n2 4\n\n\n\n\n\nSample Output 1891.415926535897938\n\nOne possible shortest path is shown on the picture below. The path starts at the blue point, finishes at the purple point and follows along the red line.\n\n\n\n\n\n\n\n\nSample Input 23 5 6 4\n3\n3 2\n5 3\n2 4\n\n\n\n\n\nSample Output 2400.000000000000000\n\n\n\n\n\n\n\n\n\nSample Input 34 2 2 2\n3\n3 2\n5 3\n2 4\n\n\n\n\n\nSample Output 3211.415926535897938"}
{"id": "p03620", "problem": "Score : 1000 points\n\n\nProblem StatementYou have two strings A = A_1 A_2 ... A_n and B = B_1 B_2 ... B_n of the same length consisting of 0 and 1.\nYou can transform A using the following operations in any order and as many times as you want:\n\nShift A by one character to the left (i.e., if A = A_1 A_2 ... A_n, replace A with A_2 A_3 ... A_n A_1).\nShift A by one character to the right (i.e., if A = A_1 A_2 ... A_n, replace A with A_n A_1 A_2 ... A_{n-1}).\nChoose any i such that B_i = 1. Flip A_i (i.e., set A_i = 1 - A_i).\n\nYou goal is to make strings A and B equal.\nPrint the smallest number of operations required to achieve this, or -1 if the goal is unreachable.\n\n\n\n\nConstraints\n1 \\leq |A| = |B| \\leq 2,000\nA and B consist of 0 and 1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA\nB\n\n\n\n\n\nOutputPrint the smallest number of operations required to make strings A and B equal, or -1 if the goal is unreachable.\n\n\n\n\n\n\nSample Input 11010\n1100\n\n\n\n\n\nSample Output 13\n\nHere is one fastest way to achieve the goal:\n\nFlip A_1: A = 0010\nShift A to the left: A = 0100\nFlip A_1 again: A = 1100\n\n\n\n\n\n\nSample Input 21\n0\n\n\n\n\n\nSample Output 2-1\n\nThere is no way to flip the only bit in A.\n\n\n\n\n\nSample Input 311010\n10001\n\n\n\n\n\nSample Output 34\n\nHere is one fastest way to achieve the goal:\n\nShift A to the right: A = 01101\nFlip A_5: A = 01100\nShift A to the left: A = 11000\nShift A to the left again: A = 10001\n\n\n\n\n\n\nSample Input 40100100\n1111111\n\n\n\n\n\nSample Output 45\n\nFlip A_1, A_3, A_4, A_6 and A_7 in any order."}
{"id": "p03621", "problem": "Score : 1700 points\n\n\nProblem StatementYou have two strings A = A_1 A_2 ... A_n and B = B_1 B_2 ... B_n of the same length consisting of 0 and 1.\nThe number of 1's in A and B is equal.\nYou've decided to transform A using the following algorithm:\n\nLet a_1, a_2, ..., a_k be the indices of 1's in A.\nLet b_1, b_2, ..., b_k be the indices of 1's in B.\nReplace a and b with their random permutations, chosen independently and uniformly.\nFor each i from 1 to k, in order, swap A_{a_i} and A_{b_i}.\n\nLet P be the probability that strings A and B become equal after the procedure above.\nLet Z = P \\times (k!)^2. Clearly, Z is an integer.\nFind Z modulo 998244353.\n\n\n\n\nConstraints\n1 \\leq |A| = |B| \\leq 10,000\nA and B consist of 0 and 1.\nA and B contain the same number of 1's.\nA and B contain at least one 1.\n\n\n\n\n\nPartial Score\n1200 points will be awarded for passing the testset satisfying 1 \\leq |A| = |B| \\leq 500.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA\nB\n\n\n\n\n\nOutputPrint the value of Z modulo 998244353.\n\n\n\n\n\n\nSample Input 11010\n1100\n\n\n\n\n\nSample Output 13\n\nAfter the first two steps, a = [1, 3] and b = [1, 2]. There are 4 possible scenarios after shuffling a and b:\n\na = [1, 3], b = [1, 2]. Initially, A = 1010. After swap(A_1, A_1), A = 1010. After swap(A_3, A_2), A = 1100.\na = [1, 3], b = [2, 1]. Initially, A = 1010. After swap(A_1, A_2), A = 0110. After swap(A_3, A_1), A = 1100.\na = [3, 1], b = [1, 2]. Initially, A = 1010. After swap(A_3, A_1), A = 1010. After swap(A_1, A_2), A = 0110.\na = [3, 1], b = [2, 1]. Initially, A = 1010. After swap(A_3, A_2), A = 1100. After swap(A_1, A_1), A = 1100.\n\nOut of 4 scenarios, 3 of them result in A = B. Therefore, P = 3 / 4, and Z = 3.\n\n\n\n\n\nSample Input 201001\n01001\n\n\n\n\n\nSample Output 24\n\nNo swap ever changes A, so we'll always have A = B.\n\n\n\n\n\nSample Input 3101010\n010101\n\n\n\n\n\nSample Output 336\n\nEvery possible sequence of three swaps puts the 1's in A into the right places.\n\n\n\n\n\nSample Input 41101011011110\n0111101011101\n\n\n\n\n\nSample Output 4932171449"}
{"id": "p03622", "problem": "Score : 2000 points\n\n\nProblem StatementYou are participating in a quiz with N + M questions and Yes/No answers.\nIt's known in advance that there are N questions with answer Yes and M questions with answer No, but the questions are given to you in random order.\nYou have no idea about correct answers to any of the questions.\nYou answer questions one by one, and for each question you answer, you get to know the correct answer immediately after answering.\nSuppose you follow a strategy maximizing the expected number of correct answers you give.\nLet this expected number be P/Q, an irreducible fraction. Let M = 998244353.\nIt can be proven that a unique integer R between 0 and M - 1 exists such that P = Q \\times R modulo M,\nand it is equal to P \\times Q^{-1} modulo M, where Q^{-1} is the modular inverse of Q.\nFind R.\n\n\n\n\nConstraints\n1 \\leq N, M \\leq 500,000\nBoth N and M are integers.\n\n\n\n\n\nPartial Score\n1500 points will be awarded for passing the testset satisfying N = M and 1 \\leq N, M \\leq 10^5.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputLet P/Q be the expected number of correct answers you give if you follow an optimal strategy, represented as an irreducible fraction.\nPrint P \\times Q^{-1} modulo 998244353.\n\n\n\n\n\n\nSample Input 11 1\n\n\n\n\n\nSample Output 1499122178\n\nThere are two questions.\nYou may answer randomly to the first question, and you'll succeed with 50% probability.\nThen, since you know the second answer is different from the first one, you'll succeed with 100% probability.\nThe expected number of your correct answers is 3 / 2.\nThus, P = 3, Q = 2, Q^{-1} = 499122177 (modulo 998244353), and P \\times Q^{-1} = 499122178 (again, modulo 998244353).\n\n\n\n\n\nSample Input 22 2\n\n\n\n\n\nSample Output 2831870297\n\nThe expected number of your correct answers is 17 / 6.\n\n\n\n\n\nSample Input 33 4\n\n\n\n\n\nSample Output 3770074220\n\nThe expected number of your correct answers is 169 / 35.\n\n\n\n\n\nSample Input 410 10\n\n\n\n\n\nSample Output 4208827570\n\n\n\n\n\n\nSample Input 542 23\n\n\n\n\n\nSample Output 5362936761"}
{"id": "p03623", "problem": "Score : 100 points\n\n\nProblem StatementSnuke lives at position x on a number line.\nOn this line, there are two stores A and B, respectively at position a and b, that offer food for delivery.\nSnuke decided to get food delivery from the closer of stores A and B.\nFind out which store is closer to Snuke's residence.\nHere, the distance between two points s and t on a number line is represented by |s-t|.\n\n\n\n\nConstraints\n1 \\leq x \\leq 1000\n1 \\leq a \\leq 1000\n1 \\leq b \\leq 1000\nx, a and b are pairwise distinct.\nThe distances between Snuke's residence and stores A and B are different.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nx a b\n\n\n\n\n\nOutputIf store A is closer, print A; if store B is closer, print B.\n\n\n\n\n\n\nSample Input 15 2 7\n\n\n\n\n\nSample Output 1B\n\nThe distances between Snuke's residence and stores A and B are 3 and 2, respectively.\nSince store B is closer, print B.\n\n\n\n\n\nSample Input 21 999 1000\n\n\n\n\n\nSample Output 2A"}
{"id": "p03624", "problem": "Score : 200 points\n\n\nProblem StatementYou are given a string S consisting of lowercase English letters.\nFind the lexicographically (alphabetically) smallest lowercase English letter that does not occur in S.\nIf every lowercase English letter occurs in S, print None instead.\n\n\n\n\nConstraints\n1 \\leq |S| \\leq 10^5 (|S| is the length of string S.)\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the lexicographically smallest lowercase English letter that does not occur in S.\nIf every lowercase English letter occurs in S, print None instead.\n\n\n\n\n\n\nSample Input 1atcoderregularcontest\n\n\n\n\n\nSample Output 1b\n\nThe string atcoderregularcontest contains a, but does not contain b.\n\n\n\n\n\nSample Input 2abcdefghijklmnopqrstuvwxyz\n\n\n\n\n\nSample Output 2None\n\nThis string contains every lowercase English letter.\n\n\n\n\n\nSample Input 3fajsonlslfepbjtsaayxbymeskptcumtwrmkkinjxnnucagfrg\n\n\n\n\n\nSample Output 3d"}
{"id": "p03625", "problem": "Score : 300 points\n\n\nProblem StatementWe have N sticks with negligible thickness.\nThe length of the i-th stick is A_i.\nSnuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides.\nFind the maximum possible area of the rectangle.\n\n\n\n\nConstraints\n4 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9\nA_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the maximum possible area of the rectangle.\nIf no rectangle can be formed, print 0.\n\n\n\n\n\n\nSample Input 16\n3 1 2 4 2 1\n\n\n\n\n\nSample Output 12\n\n1 \\times 2 rectangle can be formed.\n\n\n\n\n\nSample Input 24\n1 2 3 4\n\n\n\n\n\nSample Output 20\n\nNo rectangle can be formed.\n\n\n\n\n\nSample Input 310\n3 3 3 3 4 4 4 5 5 5\n\n\n\n\n\nSample Output 320"}
{"id": "p03626", "problem": "Score : 400 points\n\n\nProblem StatementWe have a board with a 2 \\times N grid.\nSnuke covered the board with N dominoes without overlaps.\nHere, a domino can cover a 1 \\times 2 or 2 \\times 1 square.\nThen, Snuke decided to paint these dominoes using three colors: red, cyan and green.\nTwo dominoes that are adjacent by side should be painted by different colors.\nHere, it is not always necessary to use all three colors.\nFind the number of such ways to paint the dominoes, modulo 1000000007.\nThe arrangement of the dominoes is given to you as two strings S_1 and S_2 in the following manner:\n\nEach domino is represented by a different English letter (lowercase or uppercase).\nThe j-th character in S_i represents the domino that occupies the square at the i-th row from the top and j-th column from the left.\n\n\n\n\n\nConstraints\n1 \\leq N \\leq 52\n|S_1| = |S_2| = N\nS_1 and S_2 consist of lowercase and uppercase English letters.\nS_1 and S_2 represent a valid arrangement of dominoes.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nS_1\nS_2\n\n\n\n\n\nOutputPrint the number of such ways to paint the dominoes, modulo 1000000007.\n\n\n\n\n\n\nSample Input 13\naab\nccb\n\n\n\n\n\nSample Output 16\n\nThere are six ways as shown below:\n\n\n\n\n\n\nSample Input 21\nZ\nZ\n\n\n\n\n\nSample Output 23\n\nNote that it is not always necessary to use all the colors.\n\n\n\n\n\nSample Input 352\nRvvttdWIyyPPQFFZZssffEEkkaSSDKqcibbeYrhAljCCGGJppHHn\nRLLwwdWIxxNNQUUXXVVMMooBBaggDKqcimmeYrhAljOOTTJuuzzn\n\n\n\n\n\nSample Output 3958681902"}
{"id": "p03627", "problem": "Score : 300 points\n\n\nProblem StatementWe have N sticks with negligible thickness.\nThe length of the i-th stick is A_i.\nSnuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides.\nFind the maximum possible area of the rectangle.\n\n\n\n\nConstraints\n4 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9\nA_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the maximum possible area of the rectangle.\nIf no rectangle can be formed, print 0.\n\n\n\n\n\n\nSample Input 16\n3 1 2 4 2 1\n\n\n\n\n\nSample Output 12\n\n1 \\times 2 rectangle can be formed.\n\n\n\n\n\nSample Input 24\n1 2 3 4\n\n\n\n\n\nSample Output 20\n\nNo rectangle can be formed.\n\n\n\n\n\nSample Input 310\n3 3 3 3 4 4 4 5 5 5\n\n\n\n\n\nSample Output 320"}
{"id": "p03628", "problem": "Score : 400 points\n\n\nProblem StatementWe have a board with a 2 \\times N grid.\nSnuke covered the board with N dominoes without overlaps.\nHere, a domino can cover a 1 \\times 2 or 2 \\times 1 square.\nThen, Snuke decided to paint these dominoes using three colors: red, cyan and green.\nTwo dominoes that are adjacent by side should be painted by different colors.\nHere, it is not always necessary to use all three colors.\nFind the number of such ways to paint the dominoes, modulo 1000000007.\nThe arrangement of the dominoes is given to you as two strings S_1 and S_2 in the following manner:\n\nEach domino is represented by a different English letter (lowercase or uppercase).\nThe j-th character in S_i represents the domino that occupies the square at the i-th row from the top and j-th column from the left.\n\n\n\n\n\nConstraints\n1 \\leq N \\leq 52\n|S_1| = |S_2| = N\nS_1 and S_2 consist of lowercase and uppercase English letters.\nS_1 and S_2 represent a valid arrangement of dominoes.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nS_1\nS_2\n\n\n\n\n\nOutputPrint the number of such ways to paint the dominoes, modulo 1000000007.\n\n\n\n\n\n\nSample Input 13\naab\nccb\n\n\n\n\n\nSample Output 16\n\nThere are six ways as shown below:\n\n\n\n\n\n\nSample Input 21\nZ\nZ\n\n\n\n\n\nSample Output 23\n\nNote that it is not always necessary to use all the colors.\n\n\n\n\n\nSample Input 352\nRvvttdWIyyPPQFFZZssffEEkkaSSDKqcibbeYrhAljCCGGJppHHn\nRLLwwdWIxxNNQUUXXVVMMooBBaggDKqcimmeYrhAljOOTTJuuzzn\n\n\n\n\n\nSample Output 3958681902"}
{"id": "p03629", "problem": "Score : 600 points\n\n\nProblem StatementA subsequence of a string S is a string that can be obtained by deleting zero or more characters from S without changing the order of the remaining characters.\nFor example, arc, artistic and (an empty string) are all subsequences of artistic; abc and ci are not.\nYou are given a string A consisting of lowercase English letters.\nFind the shortest string among the strings consisting of lowercase English letters that are not subsequences of A.\nIf there are more than one such string, find the lexicographically smallest one among them.\n\n\n\n\nConstraints\n1 \\leq |A| \\leq 2 \\times 10^5\nA consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA\n\n\n\n\n\nOutputPrint the lexicographically smallest string among the shortest strings consisting of lowercase English letters that are not subsequences of A.\n\n\n\n\n\n\nSample Input 1atcoderregularcontest\n\n\n\n\n\nSample Output 1b\n\nThe string atcoderregularcontest contains a as a subsequence, but not b.\n\n\n\n\n\nSample Input 2abcdefghijklmnopqrstuvwxyz\n\n\n\n\n\nSample Output 2aa\n\n\n\n\n\n\nSample Input 3frqnvhydscshfcgdemurlfrutcpzhopfotpifgepnqjxupnskapziurswqazdwnwbgdhyktfyhqqxpoidfhjdakoxraiedxskywuepzfniuyskxiyjpjlxuqnfgmnjcvtlpnclfkpervxmdbvrbrdn\n\n\n\n\n\nSample Output 3aca"}
{"id": "p03630", "problem": "Score : 700 points\n\n\nProblem StatementWe have a board with an H \\times W grid.\nEach square in the grid is painted in black or white. The square at the i-th row from the top and j-th column from the left is black if the j-th character in S_i is #, and white if that character is ..\nSnuke can perform the following operation on the grid any number of times:\n\nSelect a row or column in the grid, and invert the color of all the squares in that row or column (that is, black squares become white and vice versa).\n\nThen, Snuke draws a rectangle along grid lines. Here, all the squares contained in the rectangle must be painted in black.\nFind the maximum possible area of Snuke's rectangle when the operation is performed optimally.\n\n\n\n\nConstraints\n2 \\leq H \\leq 2000\n2 \\leq W \\leq 2000\n|S_i| = W\nS_i consists of # and ..\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\nS_1\nS_2\n:\nS_H\n\n\n\n\n\nOutputPrint the maximum possible area of Snuke's rectangle.\n\n\n\n\n\n\nSample Input 13 3\n..#\n##.\n.#.\n\n\n\n\n\nSample Output 16\n\nIf the first row from the top and the third column from the left are inverted, a 2 \\times 3 rectangle can be drawn, as shown below:\n\n\n\n\n\n\nSample Input 24 4\n....\n....\n....\n....\n\n\n\n\n\nSample Output 216\n\n\n\n\n\n\nSample Input 310 8\n##...#.#\n##...#.#\n..###.#.\n#.##.#.#\n.#..#.#.\n..##.#.#\n##.#.#..\n...#.#..\n###.#.##\n###..###\n\n\n\n\n\nSample Output 327"}
{"id": "p03631", "problem": "Score : 100 points\n\n\nProblem StatementYou are given a three-digit positive integer N.\nDetermine whether N is a palindromic number.\nHere, a palindromic number is an integer that reads the same backward as forward in decimal notation.\n\n\n\n\nConstraints\n100\u2264N\u2264999\nN is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN\n\n\n\n\n\nOutputIf N is a palindromic number, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 1575\n\n\n\n\n\nSample Output 1Yes\n\nN=575 is also 575 when read backward, so it is a palindromic number. You should print Yes.\n\n\n\n\n\nSample Input 2123\n\n\n\n\n\nSample Output 2No\n\nN=123 becomes 321 when read backward, so it is not a palindromic number. You should print No.\n\n\n\n\n\nSample Input 3812\n\n\n\n\n\nSample Output 3No"}
{"id": "p03632", "problem": "Score : 200 points\n\n\nProblem StatementAlice and Bob are controlling a robot. They each have one switch that controls the robot.\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\nFor how many seconds both Alice and Bob were holding down their buttons?\n\n\n\n\nConstraints\n0\u2264A<B\u2264100\n0\u2264C<D\u2264100\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nA B C D\n\n\n\n\n\nOutputPrint the length of the duration (in seconds) in which both Alice and Bob were holding down their buttons.\n\n\n\n\n\n\nSample Input 10 75 25 100\n\n\n\n\n\nSample Output 150\n\nAlice started holding down her button 0 second after the start-up of the robot, and released her button 75 second after the start-up.\nBob started holding down his button 25 second after the start-up, and released his button 100 second after the start-up.\nTherefore, the time when both of them were holding down their buttons, is the 50 seconds from 25 seconds after the start-up to 75 seconds after the start-up.\n\n\n\n\n\nSample Input 20 33 66 99\n\n\n\n\n\nSample Output 20\n\nAlice and Bob were not holding their buttons at the same time, so the answer is zero seconds.\n\n\n\n\n\nSample Input 310 90 20 80\n\n\n\n\n\nSample Output 360"}
{"id": "p03633", "problem": "Score : 300 points\n\n\nProblem StatementWe have N clocks. The hand of the i-th clock (1\u2264i\u2264N) rotates through 360\u00b0 in exactly T_i seconds.\nInitially, the hand of every clock stands still, pointing directly upward.\nNow, Dolphin starts all the clocks simultaneously.\nIn how many seconds will the hand of every clock point directly upward again?\n\n\n\n\nConstraints\n1\u2264N\u2264100 \n1\u2264T_i\u226410^{18} \nAll input values are integers.  \nThe correct answer is at most 10^{18} seconds.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN\nT_1\n:  \nT_N\n\n\n\n\n\nOutputPrint the number of seconds after which the hand of every clock point directly upward again.\n\n\n\n\n\n\nSample Input 12\n2\n3\n\n\n\n\n\nSample Output 16\n\nWe have two clocks. The time when the hand of each clock points upward is as follows:\n\nClock 1: 2, 4, 6, ... seconds after the beginning\nClock 2: 3, 6, 9, ... seconds after the beginning\n\nTherefore, it takes 6 seconds until the hands of both clocks point directly upward.\n\n\n\n\n\nSample Input 25\n2\n5\n10\n1000000000000000000\n1000000000000000000\n\n\n\n\n\nSample Output 21000000000000000000"}
{"id": "p03634", "problem": "Score : 400 points\n\n\nProblem StatementYou are given a tree with N vertices.\nHere, a tree is a kind of graph, and more specifically, a connected undirected graph with N-1 edges, where N is the number of its vertices.\nThe i-th edge (1\u2264i\u2264N-1) connects Vertices a_i and b_i, and has a length of c_i.\nYou are also given Q queries and an integer K. In the j-th query (1\u2264j\u2264Q):\n\nfind the length of the shortest path from Vertex x_j and Vertex y_j via Vertex K.\n\n\n\n\n\nConstraints\n3\u2264N\u226410^5 \n1\u2264a_i,b_i\u2264N (1\u2264i\u2264N-1) \n1\u2264c_i\u226410^9 (1\u2264i\u2264N-1) \nThe given graph is a tree.\n1\u2264Q\u226410^5 \n1\u2264K\u2264N \n1\u2264x_j,y_j\u2264N (1\u2264j\u2264Q) \nx_j\u2260y_j (1\u2264j\u2264Q) \nx_j\u2260K,y_j\u2260K (1\u2264j\u2264Q) \n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN  \na_1 b_1 c_1  \n:  \na_{N-1} b_{N-1} c_{N-1}\nQ K\nx_1 y_1\n:  \nx_{Q} y_{Q}\n\n\n\n\n\nOutputPrint the responses to the queries in Q lines.\nIn the j-th line j(1\u2264j\u2264Q), print the response to the j-th query.\n\n\n\n\n\n\nSample Input 15\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5\n\n\n\n\n\nSample Output 13\n2\n4\n\nThe shortest paths for the three queries are as follows:\n\nQuery 1: Vertex 2 \u2192 Vertex 1 \u2192 Vertex 2 \u2192 Vertex 4 : Length 1+1+1=3 \nQuery 2: Vertex 2 \u2192 Vertex 1 \u2192 Vertex 3 : Length 1+1=2 \nQuery 3: Vertex 4 \u2192 Vertex 2 \u2192 Vertex 1 \u2192 Vertex 3 \u2192 Vertex 5 : Length 1+1+1+1=4 \n\n\n\n\n\n\nSample Input 27\n1 2 1\n1 3 3\n1 4 5\n1 5 7\n1 6 9\n1 7 11\n3 2\n1 3\n4 5\n6 7\n\n\n\n\n\nSample Output 25\n14\n22\n\nThe path for each query must pass Vertex K=2.\n\n\n\n\n\nSample Input 310\n1 2 1000000000\n2 3 1000000000\n3 4 1000000000\n4 5 1000000000\n5 6 1000000000\n6 7 1000000000\n7 8 1000000000\n8 9 1000000000\n9 10 1000000000\n1 1\n9 10\n\n\n\n\n\nSample Output 317000000000"}
{"id": "p03635", "problem": "Score : 100 points\n\n\nProblem StatementIn K-city, there are n streets running east-west, and m streets running north-south. Each street running east-west and each street running north-south cross each other. We will call the smallest area that is surrounded by four streets a block. How many blocks there are in K-city?\n\n\n\n\nConstraints\n2 \u2264 n, m \u2264 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn m\n\n\n\n\n\nOutputPrint the number of blocks in K-city.\n\n\n\n\n\n\nSample Input 13 4\n\n\n\n\n\nSample Output 16\n\nThere are six blocks, as shown below:\n\n\n\n\n\n\n\n\nSample Input 22 2\n\n\n\n\n\nSample Output 21\n\nThere are one block, as shown below:"}
{"id": "p03636", "problem": "Score : 200 points\n\n\nProblem StatementThe word internationalization is sometimes abbreviated to i18n.\nThis comes from the fact that there are 18 letters between the first i and the last n.\nYou are given a string s of length at least 3 consisting of lowercase English letters.\nAbbreviate s in the same way.\n\n\n\n\nConstraints\n3 \u2264 |s| \u2264 100 (|s| denotes the length of s.)\ns consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the abbreviation of s.\n\n\n\n\n\n\nSample Input 1internationalization\n\n\n\n\n\nSample Output 1i18n\n\n\n\n\n\n\nSample Input 2smiles\n\n\n\n\n\nSample Output 2s4s\n\n\n\n\n\n\nSample Input 3xyz\n\n\n\n\n\nSample Output 3x1z"}
{"id": "p03637", "problem": "Score : 400 points\n\n\nProblem StatementWe have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer.\nSnuke's objective is to permute the element in a so that the following condition is satisfied:\n\nFor each 1 \u2264 i \u2264 N - 1, the product of a_i and a_{i + 1} is a multiple of 4.\n\nDetermine whether Snuke can achieve his objective.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputIf Snuke can achieve his objective, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 13\n1 10 100\n\n\n\n\n\nSample Output 1Yes\n\nOne solution is (1, 100, 10).\n\n\n\n\n\nSample Input 24\n1 2 3 4\n\n\n\n\n\nSample Output 2No\n\nIt is impossible to permute a so that the condition is satisfied.\n\n\n\n\n\nSample Input 33\n1 4 1\n\n\n\n\n\nSample Output 3Yes\n\nThe condition is already satisfied initially.\n\n\n\n\n\nSample Input 42\n1 1\n\n\n\n\n\nSample Output 4No\n\n\n\n\n\n\nSample Input 56\n2 7 1 8 2 8\n\n\n\n\n\nSample Output 5Yes"}
{"id": "p03638", "problem": "Score : 400 points\n\n\nProblem StatementWe have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied:\n\nFor each i (1 \u2264 i \u2264 N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 \u2264 i \u2264 N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i.\n\nFind a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists.\n\n\n\n\nConstraints\n1 \u2264 H, W \u2264 100\n1 \u2264 N \u2264 H W\na_i \u2265 1\na_1 + a_2 + ... + a_N = H W\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint one way to paint the squares that satisfies the conditions.\nOutput in the following format:\nc_{1 1} ... c_{1 W}\n:\nc_{H 1} ... c_{H W}\n\nHere, c_{i j} is the color of the square at the i-th row from the top and j-th column from the left.\n\n\n\n\n\n\nSample Input 12 2\n3\n2 1 1\n\n\n\n\n\nSample Output 11 1\n2 3\n\nBelow is an example of an invalid solution:\n1 2\n3 1\n\nThis is because the squares painted in Color 1 are not 4-connected.\n\n\n\n\n\nSample Input 23 5\n5\n1 2 3 4 5\n\n\n\n\n\nSample Output 21 4 4 4 3\n2 5 4 5 3\n2 5 5 5 3\n\n\n\n\n\n\nSample Input 31 1\n1\n1\n\n\n\n\n\nSample Output 31"}
{"id": "p03639", "problem": "Score : 400 points\n\n\nProblem StatementWe have a sequence of length N, a = (a_1, a_2, ..., a_N).\nEach a_i is a positive integer.\nSnuke's objective is to permute the element in a so that the following condition is satisfied:\n\nFor each 1 \u2264 i \u2264 N - 1, the product of a_i and a_{i + 1} is a multiple of 4.\n\nDetermine whether Snuke can achieve his objective.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputIf Snuke can achieve his objective, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 13\n1 10 100\n\n\n\n\n\nSample Output 1Yes\n\nOne solution is (1, 100, 10).\n\n\n\n\n\nSample Input 24\n1 2 3 4\n\n\n\n\n\nSample Output 2No\n\nIt is impossible to permute a so that the condition is satisfied.\n\n\n\n\n\nSample Input 33\n1 4 1\n\n\n\n\n\nSample Output 3Yes\n\nThe condition is already satisfied initially.\n\n\n\n\n\nSample Input 42\n1 1\n\n\n\n\n\nSample Output 4No\n\n\n\n\n\n\nSample Input 56\n2 7 1 8 2 8\n\n\n\n\n\nSample Output 5Yes"}
{"id": "p03640", "problem": "Score : 400 points\n\n\nProblem StatementWe have a grid with H rows and W columns of squares.\nSnuke is painting these squares in colors 1, 2, ..., N.\nHere, the following conditions should be satisfied:\n\nFor each i (1 \u2264 i \u2264 N), there are exactly a_i squares painted in Color i. Here, a_1 + a_2 + ... + a_N = H W.\nFor each i (1 \u2264 i \u2264 N), the squares painted in Color i are 4-connected. That is, every square painted in Color i can be reached from every square painted in Color i by repeatedly traveling to a horizontally or vertically adjacent square painted in Color i.\n\nFind a way to paint the squares so that the conditions are satisfied.\nIt can be shown that a solution always exists.\n\n\n\n\nConstraints\n1 \u2264 H, W \u2264 100\n1 \u2264 N \u2264 H W\na_i \u2265 1\na_1 + a_2 + ... + a_N = H W\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint one way to paint the squares that satisfies the conditions.\nOutput in the following format:\nc_{1 1} ... c_{1 W}\n:\nc_{H 1} ... c_{H W}\n\nHere, c_{i j} is the color of the square at the i-th row from the top and j-th column from the left.\n\n\n\n\n\n\nSample Input 12 2\n3\n2 1 1\n\n\n\n\n\nSample Output 11 1\n2 3\n\nBelow is an example of an invalid solution:\n1 2\n3 1\n\nThis is because the squares painted in Color 1 are not 4-connected.\n\n\n\n\n\nSample Input 23 5\n5\n1 2 3 4 5\n\n\n\n\n\nSample Output 21 4 4 4 3\n2 5 4 5 3\n2 5 5 5 3\n\n\n\n\n\n\nSample Input 31 1\n1\n1\n\n\n\n\n\nSample Output 31"}
{"id": "p03641", "problem": "Score : 800 points\n\n\nProblem StatementLet N be a positive even number.\nWe have a permutation of (1, 2, ..., N), p = (p_1, p_2, ..., p_N).\nSnuke is constructing another permutation of (1, 2, ..., N), q, following the procedure below.\nFirst, let q be an empty sequence.\nThen, perform the following operation until p becomes empty:\n\nSelect two adjacent elements in p, and call them x and y in order. Remove x and y from p (reducing the length of p by 2), and insert x and y, preserving the original order, at the beginning of q.\n\nWhen p becomes empty, q will be a permutation of (1, 2, ..., N).\nFind the lexicographically smallest permutation that can be obtained as q.\n\n\n\n\nConstraints\nN is an even number.\n2 \u2264 N \u2264 2 \u00d7 10^5\np is a permutation of (1, 2, ..., N).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\np_1 p_2 ... p_N\n\n\n\n\n\nOutputPrint the lexicographically smallest permutation, with spaces in between.\n\n\n\n\n\n\nSample Input 14\n3 2 4 1\n\n\n\n\n\nSample Output 13 1 2 4\n\nThe solution above is obtained as follows:\n\n\n\np\nq\n\n\n\n\n(3, 2, 4, 1)\n()\n\n\n\u2193\n\u2193\n\n\n(3, 1)\n(2, 4)\n\n\n\u2193\n\u2193\n\n\n()\n(3, 1, 2, 4)\n\n\n\n\n\n\n\n\nSample Input 22\n1 2\n\n\n\n\n\nSample Output 21 2\n\n\n\n\n\n\nSample Input 38\n4 6 3 2 8 5 7 1\n\n\n\n\n\nSample Output 33 1 2 7 4 6 8 5\n\nThe solution above is obtained as follows:\n\n\n\np\nq\n\n\n\n\n(4, 6, 3, 2, 8, 5, 7, 1)\n()\n\n\n\u2193\n\u2193\n\n\n(4, 6, 3, 2, 7, 1)\n(8, 5)\n\n\n\u2193\n\u2193\n\n\n(3, 2, 7, 1)\n(4, 6, 8, 5)\n\n\n\u2193\n\u2193\n\n\n(3, 1)\n(2, 7, 4, 6, 8, 5)\n\n\n\u2193\n\u2193\n\n\n()\n(3, 1, 2, 7, 4, 6, 8, 5)"}
{"id": "p03642", "problem": "Score : 1200 points\n\n\nProblem StatementThere are infinitely many cards, numbered 1, 2, 3, ...\nInitially, Cards x_1, x_2, ..., x_N are face up, and the others are face down.\nSnuke can perform the following operation repeatedly:\n\nSelect a prime p greater than or equal to 3. Then, select p consecutive cards and flip all of them.\n\nSnuke's objective is to have all the cards face down.\nFind the minimum number of operations required to achieve the objective.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n1 \u2264 x_1 < x_2 < ... < x_N \u2264 10^7\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputPrint the minimum number of operations required to achieve the objective.\n\n\n\n\n\n\nSample Input 12\n4 5\n\n\n\n\n\nSample Output 12\n\nBelow is one way to achieve the objective in two operations:\n\nSelect p = 5 and flip Cards 1, 2, 3, 4 and 5.\nSelect p = 3 and flip Cards 1, 2 and 3.\n\n\n\n\n\n\nSample Input 29\n1 2 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 23\n\nBelow is one way to achieve the objective in three operations:\n\nSelect p = 3 and flip Cards 1, 2 and 3.\nSelect p = 3 and flip Cards 4, 5 and 6.\nSelect p = 3 and flip Cards 7, 8 and 9.\n\n\n\n\n\n\nSample Input 32\n1 10000000\n\n\n\n\n\nSample Output 34"}
{"id": "p03643", "problem": "Score : 100 points\n\n\nProblem StatementThis contest, AtCoder Beginner Contest, is abbreviated as ABC.\nWhen we refer to a specific round of ABC, a three-digit number is appended after ABC. For example, ABC680 is the 680th round of ABC.\nWhat is the abbreviation for the N-th round of ABC? Write a program to output the answer.\n\n\n\n\nConstraints\n100 \u2264 N \u2264 999\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the abbreviation for the N-th round of ABC.\n\n\n\n\n\n\nSample Input 1100\n\n\n\n\n\nSample Output 1ABC100\n\nThe 100th round of ABC is ABC100.\n\n\n\n\n\nSample Input 2425\n\n\n\n\n\nSample Output 2ABC425\n\n\n\n\n\n\nSample Input 3999\n\n\n\n\n\nSample Output 3ABC999"}
{"id": "p03644", "problem": "Score : 200 points\n\n\nProblem StatementTakahashi loves numbers divisible by 2.\nYou are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\nHere, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder.\nFor example,\n\n6 can be divided by 2 once: 6 -> 3.\n8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1.\n3 can be divided by 2 zero times.\n\n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 14\n\n4 can be divided by 2 twice, which is the most number of times among 1, 2, ..., 7.\n\n\n\n\n\nSample Input 232\n\n\n\n\n\nSample Output 232\n\n\n\n\n\n\nSample Input 31\n\n\n\n\n\nSample Output 31\n\n\n\n\n\n\nSample Input 4100\n\n\n\n\n\nSample Output 464"}
{"id": "p03645", "problem": "Score : 300 points\n\n\nProblem StatementIn Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N.\nThere are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i.\nCat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.\nHelp him.\n\n\n\n\nConstraints\n3 \u2264 N \u2264 200 000\n1 \u2264 M \u2264 200 000\n1 \u2264 a_i < b_i \u2264 N\n(a_i, b_i) \\neq (1, N)\nIf i \\neq j, (a_i, b_i) \\neq (a_j, b_j).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\n\n\n\nOutputIf it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE.\n\n\n\n\n\n\nSample Input 13 2\n1 2\n2 3\n\n\n\n\n\nSample Output 1POSSIBLE\n\n\n\n\n\n\nSample Input 24 3\n1 2\n2 3\n3 4\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\nYou have to use three boat services to get to Island 4.\n\n\n\n\n\nSample Input 3100000 1\n1 99999\n\n\n\n\n\nSample Output 3IMPOSSIBLE\n\n\n\n\n\n\nSample Input 45 5\n1 3\n4 5\n2 3\n2 4\n1 4\n\n\n\n\n\nSample Output 4POSSIBLE\n\nYou can get to Island 5 by using two boat services: Island 1 -> Island 4 -> Island 5."}
{"id": "p03646", "problem": "Score : 600 points\n\n\nProblem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller.\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem.\n\n\n\n\nConstraints\n0 \u2264 K \u2264 50 \\times 10^{16}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint a solution in the following format:\nN\na_1 a_2 ... a_N\n\nHere, 2 \u2264 N \u2264 50 and 0 \u2264 a_i \u2264 10^{16} + 1000 must hold.\n\n\n\n\n\n\nSample Input 10\n\n\n\n\n\nSample Output 14\n3 3 3 3\n\n\n\n\n\n\nSample Input 21\n\n\n\n\n\nSample Output 23\n1 0 3\n\n\n\n\n\n\nSample Input 32\n\n\n\n\n\nSample Output 32\n2 2\n\nThe operation will be performed twice: [2, 2] -> [0, 3] -> [1, 1].\n\n\n\n\n\nSample Input 43\n\n\n\n\n\nSample Output 47\n27 0 0 0 0 0 0\n\n\n\n\n\n\nSample Input 51234567894848\n\n\n\n\n\nSample Output 510\n1000 193 256 777 0 1 1192 1234567891011 48 425"}
{"id": "p03647", "problem": "Score : 300 points\n\n\nProblem StatementIn Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N.\nThere are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i.\nCat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.\nHelp him.\n\n\n\n\nConstraints\n3 \u2264 N \u2264 200 000\n1 \u2264 M \u2264 200 000\n1 \u2264 a_i < b_i \u2264 N\n(a_i, b_i) \\neq (1, N)\nIf i \\neq j, (a_i, b_i) \\neq (a_j, b_j).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\n\n\n\nOutputIf it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE.\n\n\n\n\n\n\nSample Input 13 2\n1 2\n2 3\n\n\n\n\n\nSample Output 1POSSIBLE\n\n\n\n\n\n\nSample Input 24 3\n1 2\n2 3\n3 4\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\nYou have to use three boat services to get to Island 4.\n\n\n\n\n\nSample Input 3100000 1\n1 99999\n\n\n\n\n\nSample Output 3IMPOSSIBLE\n\n\n\n\n\n\nSample Input 45 5\n1 3\n4 5\n2 3\n2 4\n1 4\n\n\n\n\n\nSample Output 4POSSIBLE\n\nYou can get to Island 5 by using two boat services: Island 1 -> Island 4 -> Island 5."}
{"id": "p03648", "problem": "Score : 600 points\n\n\nProblem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller.\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given an integer K. Find an integer sequence a_i such that the number of times we will perform the above operation is exactly K. It can be shown that there is always such a sequence under the constraints on input and output in this problem.\n\n\n\n\nConstraints\n0 \u2264 K \u2264 50 \\times 10^{16}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint a solution in the following format:\nN\na_1 a_2 ... a_N\n\nHere, 2 \u2264 N \u2264 50 and 0 \u2264 a_i \u2264 10^{16} + 1000 must hold.\n\n\n\n\n\n\nSample Input 10\n\n\n\n\n\nSample Output 14\n3 3 3 3\n\n\n\n\n\n\nSample Input 21\n\n\n\n\n\nSample Output 23\n1 0 3\n\n\n\n\n\n\nSample Input 32\n\n\n\n\n\nSample Output 32\n2 2\n\nThe operation will be performed twice: [2, 2] -> [0, 3] -> [1, 1].\n\n\n\n\n\nSample Input 43\n\n\n\n\n\nSample Output 47\n27 0 0 0 0 0 0\n\n\n\n\n\n\nSample Input 51234567894848\n\n\n\n\n\nSample Output 510\n1000 193 256 777 0 1 1192 1234567891011 48 425"}
{"id": "p03649", "problem": "Score : 600 points\n\n\nProblem StatementWe have a sequence of length N consisting of non-negative integers. Consider performing the following operation on this sequence until the largest element in this sequence becomes N-1 or smaller. (The operation is the same as the one in Problem D.)\n\nDetermine the largest element in the sequence (if there is more than one, choose one). Decrease the value of this element by N, and increase each of the other elements by 1.\n\nIt can be proved that the largest element in the sequence becomes N-1 or smaller after a finite number of operations.\nYou are given the sequence a_i. Find the number of times we will perform the above operation.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 50\n0 \u2264 a_i \u2264 10^{16} + 1000\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the number of times the operation will be performed.\n\n\n\n\n\n\nSample Input 14\n3 3 3 3\n\n\n\n\n\nSample Output 10\n\n\n\n\n\n\nSample Input 23\n1 0 3\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 32\n2 2\n\n\n\n\n\nSample Output 32\n\n\n\n\n\n\nSample Input 47\n27 0 0 0 0 0 0\n\n\n\n\n\nSample Output 43\n\n\n\n\n\n\nSample Input 510\n1000 193 256 777 0 1 1192 1234567891011 48 425\n\n\n\n\n\nSample Output 51234567894848"}
{"id": "p03650", "problem": "Score : 800 points\n\n\nProblem StatementThere is a directed graph with N vertices and N edges. The vertices are numbered 1, 2, ..., N.\nThe graph has the following N edges: (p_1, 1), (p_2, 2), ..., (p_N, N), and the graph is weakly connected. Here, an edge from Vertex u to Vertex v is denoted by (u, v), and a weakly connected graph is a graph which would be connected if each edge was bidirectional.\nWe would like to assign a value to each of the vertices in this graph so that the following conditions are satisfied. Here, a_i is the value assigned to Vertex i.\n\nEach a_i is a non-negative integer.\nFor each edge (i, j), a_i \\neq a_j holds.\nFor each i and each integer x(0 \u2264 x < a_i), there exists a vertex j such that the edge (i, j) exists and x = a_j holds.\n\nDetermine whether there exists such an assignment.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 200 000\n1 \u2264 p_i \u2264 N\np_i \\neq i\nThe graph is weakly connected.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\np_1 p_2 ... p_N\n\n\n\n\n\nOutputIf the assignment is possible, print POSSIBLE; otherwise, print IMPOSSIBLE.\n\n\n\n\n\n\nSample Input 14\n2 3 4 1\n\n\n\n\n\nSample Output 1POSSIBLE\n\nThe assignment is possible: {a_i} = {0, 1, 0, 1} or {a_i} = {1, 0, 1, 0}.\n\n\n\n\n\nSample Input 23\n2 3 1\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\n\n\n\n\n\nSample Input 34\n2 3 1 1\n\n\n\n\n\nSample Output 3POSSIBLE\n\nThe assignment is possible: {a_i} = {2, 0, 1, 0}.\n\n\n\n\n\nSample Input 46\n4 5 6 5 6 4\n\n\n\n\n\nSample Output 4IMPOSSIBLE"}
{"id": "p03651", "problem": "Score : 300 points\n\n\nProblem StatementThere is a box containing N balls. The i-th ball has the integer A_i written on it.\nSnuke can perform the following operation any number of times:\n\nTake out two balls from the box. Then, return them to the box along with a new ball, on which the absolute difference of the integers written on the two balls is written.\n\nDetermine whether it is possible for Snuke to reach the state where the box contains a ball on which the integer K is written.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9\n1 \\leq K \\leq 10^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputIf it is possible for Snuke to reach the state where the box contains a ball on which the integer K is written, print POSSIBLE; if it is not possible, print IMPOSSIBLE.\n\n\n\n\n\n\nSample Input 13 7\n9 3 4\n\n\n\n\n\nSample Output 1POSSIBLE\n\nFirst, take out the two balls 9 and 4, and return them back along with a new ball, abs(9-4)=5.\nNext, take out 3 and 5, and return them back along with abs(3-5)=2.\nFinally, take out 9 and 2, and return them back along with abs(9-2)=7.\nNow we have 7 in the box, and the answer is therefore POSSIBLE.\n\n\n\n\n\nSample Input 23 5\n6 9 3\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\nNo matter what we do, it is not possible to have 5 in the box. The answer is therefore IMPOSSIBLE.\n\n\n\n\n\nSample Input 34 11\n11 3 7 15\n\n\n\n\n\nSample Output 3POSSIBLE\n\nThe box already contains 11 before we do anything. The answer is therefore POSSIBLE.\n\n\n\n\n\nSample Input 45 12\n10 2 8 6 4\n\n\n\n\n\nSample Output 4IMPOSSIBLE"}
{"id": "p03652", "problem": "Score : 700 points\n\n\nProblem StatementTakahashi is hosting an sports meet.\nThere are N people who will participate. These people are conveniently numbered 1 through N.\nAlso, there are M options of sports for this event. These sports are numbered 1 through M.\nAmong these options, Takahashi will select one or more sports (possibly all) to be played in the event.\nTakahashi knows that Person i's j-th favorite sport is Sport A_{ij}.\nEach person will only participate in his/her most favorite sport among the ones that are actually played in the event, and will not participate in the other sports.\nTakahashi is worried that one of the sports will attract too many people.\nTherefore, he would like to carefully select sports to be played so that the number of the participants in the sport with the largest number of participants is minimized.\nFind the minimum possible number of the participants in the sport with the largest number of participants.\n\n\n\n\nConstraints\n1 \\leq N \\leq 300\n1 \\leq M \\leq 300\nA_{i1} , A_{i2} , ... , A_{iM} is a permutation of the integers from 1 to M.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nA_{11} A_{12} ... A_{1M}\nA_{21} A_{22} ... A_{2M}\n:\nA_{N1} A_{N2} ... A_{NM}\n\n\n\n\n\nOutputPrint the minimum possible number of the participants in the sport with the largest number of participants.\n\n\n\n\n\n\nSample Input 14 5\n5 1 3 4 2\n2 5 3 1 4\n2 3 1 4 5\n2 5 4 3 1\n\n\n\n\n\nSample Output 12\n\nAssume that Sports 1, 3 and 4 are selected to be played. In this case, Person 1 will participate in Sport 1, Person 2 in Sport 3, Person 3 in Sport 3 and Person 4 in Sport 4.\nHere, the sport with the largest number of participants is Sport 3, with two participants.\nThere is no way to reduce the number of participants in the sport with the largest number of participants to 1. Therefore, the answer is 2.\n\n\n\n\n\nSample Input 23 3\n2 1 3\n2 1 3\n2 1 3\n\n\n\n\n\nSample Output 23\n\nSince all the people have the same taste in sports, there will be a sport with three participants, no matter what sports are selected.\nTherefore, the answer is 3."}
{"id": "p03653", "problem": "Score : 800 points\n\n\nProblem StatementThere are X+Y+Z people, conveniently numbered 1 through X+Y+Z.\nPerson i has A_i gold coins, B_i silver coins and C_i bronze coins.\nSnuke is thinking of getting gold coins from X of those people, silver coins from Y of the people and bronze coins from Z of the people.\nIt is not possible to get two or more different colors of coins from a single person.\nOn the other hand, a person will give all of his/her coins of the color specified by Snuke.\nSnuke would like to maximize the total number of coins of all colors he gets.\nFind the maximum possible number of coins.\n\n\n\n\nConstraints\n1 \\leq X\n1 \\leq Y\n1 \\leq Z\nX+Y+Z \\leq 10^5\n1 \\leq A_i \\leq 10^9\n1 \\leq B_i \\leq 10^9\n1 \\leq C_i \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX Y Z\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_{X+Y+Z} B_{X+Y+Z} C_{X+Y+Z}\n\n\n\n\n\nOutputPrint the maximum possible total number of coins of all colors he gets.\n\n\n\n\n\n\nSample Input 11 2 1\n2 4 4\n3 2 1\n7 6 7\n5 2 3\n\n\n\n\n\nSample Output 118\n\nGet silver coins from Person 1, silver coins from Person 2, bronze coins from Person 3 and gold coins from Person 4.\nIn this case, the total number of coins will be 4+2+7+5=18.\nIt is not possible to get 19 or more coins, and the answer is therefore 18.\n\n\n\n\n\nSample Input 23 3 2\n16 17 1\n2 7 5\n2 16 12\n17 7 7\n13 2 10\n12 18 3\n16 15 19\n5 6 2\n\n\n\n\n\nSample Output 2110\n\n\n\n\n\n\nSample Input 36 2 4\n33189 87907 277349742\n71616 46764 575306520\n8801 53151 327161251\n58589 4337 796697686\n66854 17565 289910583\n50598 35195 478112689\n13919 88414 103962455\n7953 69657 699253752\n44255 98144 468443709\n2332 42580 752437097\n39752 19060 845062869\n60126 74101 382963164\n\n\n\n\n\nSample Output 33093929975"}
{"id": "p03654", "problem": "Score : 1100 points\n\n\nProblem StatementThere is a tree with N vertices, numbered 1 through N.\nThe i-th edge in this tree connects Vertices A_i and B_i and has a length of C_i.\nJoisino created a complete graph with N vertices.\nThe length of the edge connecting Vertices u and v in this graph, is equal to the shortest distance between Vertices u and v in the tree above.\nJoisino would like to know the length of the longest Hamiltonian path (see Notes) in this complete graph.\nFind the length of that path.\n\n\n\n\nNotesA Hamiltonian path in a graph is a path in the graph that visits each vertex exactly once.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq A_i < B_i \\leq N\nThe given graph is a tree.\n1 \\leq C_i \\leq 10^8\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_{N-1} B_{N-1} C_{N-1}\n\n\n\n\n\nOutputPrint the length of the longest Hamiltonian path in the complete graph created by Joisino.\n\n\n\n\n\n\nSample Input 15\n1 2 5\n3 4 7\n2 3 3\n2 5 2\n\n\n\n\n\nSample Output 138\n\nThe length of the Hamiltonian path 5 \u2192 3 \u2192 1 \u2192 4 \u2192 2 is 5+8+15+10=38. Since there is no Hamiltonian path with length 39 or greater in the graph, the answer is 38.\n\n\n\n\n\nSample Input 28\n2 8 8\n1 5 1\n4 8 2\n2 5 4\n3 8 6\n6 8 9\n2 7 12\n\n\n\n\n\nSample Output 2132"}
{"id": "p03655", "problem": "Score : 1600 points\n\n\nProblem StatementJoisino is planning on touring Takahashi Town.\nThe town is divided into square sections by north-south and east-west lines.\nWe will refer to the section that is the x-th from the west and the y-th from the north as (x,y).\nJoisino thinks that a touring plan is good if it satisfies the following conditions:\n\n\nLet (p,q) be the section where she starts the tour. Then, X_1 \\leq p \\leq X_2 and Y_1 \\leq q \\leq Y_2 hold.\n\n\nLet (s,t) be the section where she has lunch. Then, X_3 \\leq s \\leq X_4 and Y_3 \\leq t \\leq Y_4 hold.\n\n\nLet (u,v) be the section where she ends the tour. Then, X_5 \\leq u \\leq X_6 and Y_5 \\leq v \\leq Y_6 hold.\n\n\nBy repeatedly moving to the adjacent section (sharing a side), she travels from the starting section to the ending section in the shortest distance, passing the lunch section on the way.\n\n\nTwo touring plans are considered different if at least one of the following is different: the starting section, the lunch section, the ending section, and the sections that are visited on the way.\nJoisino would like to know how many different good touring plans there are.\nFind the number of the different good touring plans.\nSince it may be extremely large, find the count modulo 10^9+7.\n\n\n\n\nConstraints\n1 \\leq X_1 \\leq X_2 < X_3 \\leq X_4 < X_5 \\leq X_6 \\leq 10^6\n1 \\leq Y_1 \\leq Y_2 < Y_3 \\leq Y_4 < Y_5 \\leq Y_6 \\leq 10^6\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX_1 X_2 X_3 X_4 X_5 X_6\nY_1 Y_2 Y_3 Y_4 Y_5 Y_6\n\n\n\n\n\nOutputPrint the number of the different good touring plans, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 11 1 2 2 3 4\n1 1 2 2 3 3\n\n\n\n\n\nSample Output 110\n\nThe starting section will always be (1,1), and the lunch section will always be (2,2).\nThere are four good touring plans where (3,3) is the ending section, and six good touring plans where (4,3) is the ending section.\nTherefore, the answer is 6+4=10.\n\n\n\n\n\nSample Input 21 2 3 4 5 6\n1 2 3 4 5 6\n\n\n\n\n\nSample Output 22346\n\n\n\n\n\n\nSample Input 377523 89555 420588 604360 845669 973451\n2743 188053 544330 647651 709337 988194\n\n\n\n\n\nSample Output 3137477680"}
{"id": "p03656", "problem": "Score : 1700 points\n\n\nProblem StatementThere are two rooted trees, each with N vertices.\nThe vertices of each tree are numbered 1 through N.\nIn the first tree, the parent of Vertex i is Vertex A_i.\nHere, A_i=-1 if Vertex i is the root of the first tree.\nIn the second tree, the parent of Vertex i is Vertex B_i.\nHere, B_i=-1 if Vertex i is the root of the second tree.\nSnuke would like to construct an integer sequence of length N, X_1 , X_2 , ... , X_N, that satisfies the following condition:\n\nFor each vertex on each tree, let the indices of its descendants including itself be a_1 , a_2 , ..., a_k. Then, abs(X_{a_1} + X_{a_2} + ... + X_{a_k})=1 holds.\n\nDetermine whether it is possible to construct such a sequence. If the answer is possible, find one such sequence.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq N, if Vertex i is not the root in the first tree.\nA_i = -1, if Vertex i is the root in the first tree.\n1 \\leq B_i \\leq N, if Vertex i is not the root in the second tree.\nB_i = -1, if Vertex i is the root in the second tree.\nInput corresponds to valid rooted trees.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 A_2 .. A_N\nB_1 B_2 .. B_N\n\n\n\n\n\nOutputIf it is not possible to construct an integer sequence that satisfies the condition, print IMPOSSIBLE.\nIf it is possible, print POSSIBLE in the first line.\nThen, in the second line, print X_1 , X_2 , ... , X_N, an integer sequence that satisfies the condition.\n\n\n\n\n\n\nSample Input 15\n3 3 4 -1 4\n4 4 1 -1 1\n\n\n\n\n\nSample Output 1POSSIBLE\n1 -1 -1 3 -1\n\nFor example, the indices of the descendants of Vertex 3 of the first tree including itself, is 3,1,2.\nIt can be seen that the sample output holds abs(X_3+X_1+X_2)=abs((-1)+(1)+(-1))=abs(-1)=1.\nSimilarly, the condition is also satisfied for other vertices.\n\n\n\n\n\nSample Input 26\n-1 5 1 5 1 3\n6 5 5 3 -1 3\n\n\n\n\n\nSample Output 2IMPOSSIBLE\n\nIn this case, constructing a sequence that satisfies the condition is IMPOSSIBLE.\n\n\n\n\n\nSample Input 38\n2 7 1 2 2 1 -1 4\n4 -1 4 7 4 4 2 4\n\n\n\n\n\nSample Output 3POSSIBLE\n1 2 -1 0 -1 1 0 -1"}
{"id": "p03657", "problem": "Score : 100 points\n\n\nProblem StatementSnuke is giving cookies to his three goats.\nHe has two cookie tins. One contains A cookies, and the other contains B cookies. He can thus give A cookies, B cookies or A+B cookies to his goats (he cannot open the tins).\nYour task is to determine whether Snuke can give cookies to his three goats so that each of them can have the same number of cookies.\n\n\n\n\nConstraints\n1 \\leq A,B \\leq 100\nBoth A and B are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputIf it is possible to give cookies so that each of the three goats can have the same number of cookies, print Possible; otherwise, print Impossible.\n\n\n\n\n\n\nSample Input 14 5\n\n\n\n\n\nSample Output 1Possible\n\nIf Snuke gives nine cookies, each of the three goats can have three cookies.\n\n\n\n\n\nSample Input 21 1\n\n\n\n\n\nSample Output 2Impossible\n\nSince there are only two cookies, the three goats cannot have the same number of cookies no matter what Snuke gives to them."}
{"id": "p03658", "problem": "Score : 200 points\n\n\nProblem StatementSnuke has N sticks.\nThe length of the i-th stick is l_i.\nSnuke is making a snake toy by joining K of the sticks together.\nThe length of the toy is represented by the sum of the individual sticks that compose it.\nFind the maximum possible length of the toy.\n\n\n\n\nConstraints\n1 \\leq K \\leq N \\leq 50\n1 \\leq l_i \\leq 50\nl_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\nl_1 l_2 l_3 ... l_{N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 15 3\n1 2 3 4 5\n\n\n\n\n\nSample Output 112\n\nYou can make a toy of length 12 by joining the sticks of lengths 3, 4 and 5, which is the maximum possible length.\n\n\n\n\n\nSample Input 215 14\n50 26 27 21 41 7 42 35 7 5 5 36 39 1 45\n\n\n\n\n\nSample Output 2386"}
{"id": "p03659", "problem": "Score : 300 points\n\n\nProblem StatementSnuke and Raccoon have a heap of N cards. The i-th card from the top has the integer a_i written on it.\nThey will share these cards.\nFirst, Snuke will take some number of cards from the top of the heap, then Raccoon will take all the remaining cards.\nHere, both Snuke and Raccoon have to take at least one card.\nLet the sum of the integers on Snuke's cards and Raccoon's cards be x and y, respectively.\nThey would like to minimize |x-y|.\nFind the minimum possible value of |x-y|.\n\n\n\n\nConstraints\n2 \\leq N \\leq 2 \\times 10^5\n-10^{9} \\leq a_i \\leq 10^{9}\na_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 16\n1 2 3 4 5 6\n\n\n\n\n\nSample Output 11\n\nIf Snuke takes four cards from the top, and Raccoon takes the remaining two cards, x=10, y=11, and thus |x-y|=1. This is the minimum possible value.\n\n\n\n\n\nSample Input 22\n10 -10\n\n\n\n\n\nSample Output 220\n\nSnuke can only take one card from the top, and Raccoon can only take the remaining one card. In this case, x=10, y=-10, and thus |x-y|=20."}
{"id": "p03660", "problem": "Score : 400 points\n\n\nProblem StatementFennec and Snuke are playing a board game.\nOn the board, there are N cells numbered 1 through N, and N-1 roads, each connecting two cells. Cell a_i is adjacent to Cell b_i through the i-th road. Every cell can be reached from every other cell by repeatedly traveling to an adjacent cell. In terms of graph theory, the graph formed by the cells and the roads is a tree.\nInitially, Cell 1 is painted black, and Cell N is painted white. The other cells are not yet colored.\nFennec (who goes first) and Snuke (who goes second) alternately paint an uncolored cell.\nMore specifically, each player performs the following action in her/his turn:\n\nFennec: selects an uncolored cell that is adjacent to a black cell, and paints it black.\nSnuke: selects an uncolored cell that is adjacent to a white cell, and paints it white.\n\nA player loses when she/he cannot paint a cell. Determine the winner of the game when Fennec and Snuke play optimally.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq a_i, b_i \\leq N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputIf Fennec wins, print Fennec; if Snuke wins, print Snuke.\n\n\n\n\n\n\nSample Input 17\n3 6\n1 2\n3 1\n7 4\n5 7\n1 4\n\n\n\n\n\nSample Output 1Fennec\n\nFor example, if Fennec first paints Cell 2 black, she will win regardless of Snuke's moves.\n\n\n\n\n\nSample Input 24\n1 4\n4 2\n2 3\n\n\n\n\n\nSample Output 2Snuke"}
{"id": "p03661", "problem": "Score : 300 points\n\n\nProblem StatementSnuke and Raccoon have a heap of N cards. The i-th card from the top has the integer a_i written on it.\nThey will share these cards.\nFirst, Snuke will take some number of cards from the top of the heap, then Raccoon will take all the remaining cards.\nHere, both Snuke and Raccoon have to take at least one card.\nLet the sum of the integers on Snuke's cards and Raccoon's cards be x and y, respectively.\nThey would like to minimize |x-y|.\nFind the minimum possible value of |x-y|.\n\n\n\n\nConstraints\n2 \\leq N \\leq 2 \\times 10^5\n-10^{9} \\leq a_i \\leq 10^{9}\na_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 16\n1 2 3 4 5 6\n\n\n\n\n\nSample Output 11\n\nIf Snuke takes four cards from the top, and Raccoon takes the remaining two cards, x=10, y=11, and thus |x-y|=1. This is the minimum possible value.\n\n\n\n\n\nSample Input 22\n10 -10\n\n\n\n\n\nSample Output 220\n\nSnuke can only take one card from the top, and Raccoon can only take the remaining one card. In this case, x=10, y=-10, and thus |x-y|=20."}
{"id": "p03662", "problem": "Score : 400 points\n\n\nProblem StatementFennec and Snuke are playing a board game.\nOn the board, there are N cells numbered 1 through N, and N-1 roads, each connecting two cells. Cell a_i is adjacent to Cell b_i through the i-th road. Every cell can be reached from every other cell by repeatedly traveling to an adjacent cell. In terms of graph theory, the graph formed by the cells and the roads is a tree.\nInitially, Cell 1 is painted black, and Cell N is painted white. The other cells are not yet colored.\nFennec (who goes first) and Snuke (who goes second) alternately paint an uncolored cell.\nMore specifically, each player performs the following action in her/his turn:\n\nFennec: selects an uncolored cell that is adjacent to a black cell, and paints it black.\nSnuke: selects an uncolored cell that is adjacent to a white cell, and paints it white.\n\nA player loses when she/he cannot paint a cell. Determine the winner of the game when Fennec and Snuke play optimally.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq a_i, b_i \\leq N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputIf Fennec wins, print Fennec; if Snuke wins, print Snuke.\n\n\n\n\n\n\nSample Input 17\n3 6\n1 2\n3 1\n7 4\n5 7\n1 4\n\n\n\n\n\nSample Output 1Fennec\n\nFor example, if Fennec first paints Cell 2 black, she will win regardless of Snuke's moves.\n\n\n\n\n\nSample Input 24\n1 4\n4 2\n2 3\n\n\n\n\n\nSample Output 2Snuke"}
{"id": "p03663", "problem": "Score : 800 points\n\n\nProblem StatementThis is an interactive task.\nSnuke has a favorite positive integer, N. You can ask him the following type of question at most 64 times: \"Is n your favorite integer?\" Identify N.\nSnuke is twisted, and when asked \"Is n your favorite integer?\", he answers \"Yes\" if one of the two conditions below is satisfied, and answers \"No\" otherwise:\n\nBoth n \\leq N and str(n) \\leq str(N) hold.\nBoth n > N and str(n) > str(N) hold.\n\nHere, str(x) is the decimal representation of x (without leading zeros) as a string. For example, str(123) = 123 and str(2000) = 2000.\nStrings are compared lexicographically. For example, 11111 < 123 and 123456789 < 9.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^{9}\n\n\n\n\n\nInput and OutputWrite your question to Standard Output in the following format:\n? n\n\nHere, n must be an integer between 1 and 10^{18} (inclusive).\nThen, the response to the question shall be given from Standard Input in the following format:\nans\n\nHere, ans is either Y or N. Y represents \"Yes\"; N represents \"No\".\nFinally, write your answer in the following format:\n! n\n\nHere, n=N must hold.\n\n\n\n\n\n\nJudging\nAfter each output, you must flush Standard Output. Otherwise you may get TLE.\nAfter you print the answer, the program must be terminated immediately. Otherwise, the behavior of the judge is undefined.\nWhen your output is invalid or incorrect, the behavior of the judge is undefined (it does not necessarily give WA).\n\n\n\n\n\nSampleBelow is a sample communication for the case N=123:\n\n\n\nInput\nOutput\n\n\n\n\n\n? 1\n\n\nY\n\n\n\n\n? 32\n\n\nN\n\n\n\n\n? 1010\n\n\nN\n\n\n\n\n? 999\n\n\nY\n\n\n\n\n! 123\n\n\n\n\nSince 1 \\leq 123 and str(1) \\leq str(123), the first response is \"Yes\".\nSince 32 \\leq 123 but str(32) > str(123), the second response is \"No\".\nSince 1010 > 123 but str(1010) \\leq str(123), the third response is \"No\".\nSince 999 \\geq 123 and str(999) > str(123), the fourth response is \"Yes\".\nThe program successfully identifies N=123 in four questions, and thus passes the case."}
{"id": "p03664", "problem": "Score : 900 points\n\n\nProblem StatementMole decided to live in an abandoned mine. The structure of the mine is represented by a simple connected undirected graph which consists of N vertices numbered 1 through N and M edges.\nThe i-th edge connects Vertices a_i and b_i, and it costs c_i yen (the currency of Japan) to remove it.\nMole would like to remove some of the edges so that there is exactly one path from Vertex 1 to Vertex N that does not visit the same vertex more than once. Find the minimum budget needed to achieve this.\n\n\n\n\nConstraints\n2 \\leq N \\leq 15\nN-1 \\leq M \\leq N(N-1)/2\n1 \\leq a_i, b_i \\leq N\n1 \\leq c_i \\leq 10^{6}\nThere are neither multiple edges nor self-loops in the given graph.\nThe given graph is connected.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\na_1 b_1 c_1\n:\na_M b_M c_M\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 14 6\n1 2 100\n3 1 100\n2 4 100\n4 3 100\n1 4 100\n3 2 100\n\n\n\n\n\nSample Output 1200\n\nBy removing the two edges represented by the red dotted lines in the figure below, the objective can be achieved for a cost of 200 yen.\n\n\n\n\n\n\n\n\nSample Input 22 1\n1 2 1\n\n\n\n\n\nSample Output 20\n\nIt is possible that there is already only one path from Vertex 1 to Vertex N in the beginning.\n\n\n\n\n\nSample Input 315 22\n8 13 33418\n14 15 55849\n7 10 15207\n4 6 64328\n6 9 86902\n15 7 46978\n8 14 53526\n1 2 8720\n14 12 37748\n8 3 61543\n6 5 32425\n4 11 20932\n3 12 55123\n8 2 45333\n9 12 77796\n3 9 71922\n12 15 70793\n2 4 25485\n11 6 1436\n2 7 81563\n7 11 97843\n3 1 40491\n\n\n\n\n\nSample Output 3133677"}
{"id": "p03665", "problem": "Score : 200 points\n\n\nProblem StatementThere are N bags of biscuits. The i-th bag contains A_i biscuits.\nTakaki will select some of these bags and eat all of the biscuits inside.\nHere, it is also possible to select all or none of the bags.\nHe would like to select bags so that the total number of biscuits inside is congruent to P modulo 2.\nHow many such ways to select bags there are?\n\n\n\n\nConstraints\n1 \\leq N \\leq 50\nP = 0 or 1\n1 \\leq A_i \\leq 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN P\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the number of ways to select bags so that the total number of biscuits inside is congruent to P modulo 2.\n\n\n\n\n\n\nSample Input 12 0\n1 3\n\n\n\n\n\nSample Output 12\n\nThere are two ways to select bags so that the total number of biscuits inside is congruent to 0 modulo 2:\n\nSelect neither bag. The total number of biscuits is 0.\nSelect both bags. The total number of biscuits is 4.\n\n\n\n\n\n\nSample Input 21 1\n50\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 33 0\n1 1 1\n\n\n\n\n\nSample Output 34\n\nTwo bags are distinguished even if they contain the same number of biscuits.\n\n\n\n\n\nSample Input 445 1\n17 55 85 55 74 20 90 67 40 70 39 89 91 50 16 24 14 43 24 66 25 9 89 71 41 16 53 13 61 15 85 72 62 67 42 26 36 66 4 87 59 91 4 25 26\n\n\n\n\n\nSample Output 417592186044416"}
{"id": "p03666", "problem": "Score : 400 points\n\n\nProblem StatementThere are N squares in a row.\nThe leftmost square contains the integer A, and the rightmost contains the integer B. The other squares are empty.\nAohashi would like to fill the empty squares with integers so that the following condition is satisfied:\n\nFor any two adjacent squares, the (absolute) difference of the two integers in those squares is between C and D (inclusive).\n\nAs long as the condition is satisfied, it is allowed to use arbitrarily large or small integers to fill the squares.\nDetermine whether it is possible to fill the squares under the condition.\n\n\n\n\nConstraints\n3 \\leq N \\leq 500000\n0 \\leq A \\leq 10^9\n0 \\leq B \\leq 10^9\n0 \\leq C \\leq D \\leq 10^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN A B C D\n\n\n\n\n\nOutputPrint YES if it is possible to fill the squares under the condition; print NO otherwise.\n\n\n\n\n\n\nSample Input 15 1 5 2 4\n\n\n\n\n\nSample Output 1YES\n\nFor example, fill the squares with the following integers: 1, -1, 3, 7, 5, from left to right.\n\n\n\n\n\nSample Input 24 7 6 4 5\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 348792 105960835 681218449 90629745 90632170\n\n\n\n\n\nSample Output 3NO\n\n\n\n\n\n\nSample Input 4491995 412925347 825318103 59999126 59999339\n\n\n\n\n\nSample Output 4YES"}
{"id": "p03667", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N balls in a row.\nInitially, the i-th ball from the left has the integer A_i written on it.\nWhen Snuke cast a spell, the following happens:\n\nLet the current number of balls be k. All the balls with k written on them disappear at the same time.\n\nSnuke's objective is to vanish all the balls by casting the spell some number of times.\nThis may not be possible as it is. If that is the case, he would like to modify the integers on the minimum number of balls to make his objective achievable.\nBy the way, the integers on these balls sometimes change by themselves.\nThere will be M such changes. In the j-th change, the integer on the X_j-th ball from the left will change into Y_j.\nAfter each change, find the minimum number of modifications of integers on the balls Snuke needs to make if he wishes to achieve his objective before the next change occurs. We will assume that he is quick enough in modifying integers. Here, note that he does not actually perform those necessary modifications and leaves them as they are.\n\n\n\n\nConstraints\n1 \\leq N \\leq 200000\n1 \\leq M \\leq 200000\n1 \\leq A_i \\leq N\n1 \\leq X_j \\leq N\n1 \\leq Y_j \\leq N\n\n\n\n\n\nSubscore\nIn the test set worth 500 points, N \\leq 200 and M \\leq 200.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nA_1 A_2 ... A_N\nX_1 Y_1\nX_2 Y_2\n:\nX_M Y_M\n\n\n\n\n\nOutputPrint M lines.\nThe j-th line should contain the minimum necessary number of modifications of integers on the balls to make Snuke's objective achievable.\n\n\n\n\n\n\nSample Input 15 3\n1 1 3 4 5\n1 2\n2 5\n5 4\n\n\n\n\n\nSample Output 10\n1\n1\n\n\nAfter the first change, the integers on the balls become 2, 1, 3, 4, 5, from left to right. Here, all the balls can be vanished by casting the spell five times. Thus, no modification is necessary.\nAfter the second change, the integers on the balls become 2, 5, 3, 4, 5, from left to right. In this case, at least one modification must be made. One optimal solution is to modify the integer on the fifth ball from the left to 2, and cast the spell four times.\nAfter the third change, the integers on the balls become 2, 5, 3, 4, 4, from left to right. Also in this case, at least one modification must be made. One optimal solution is to modify the integer on the third ball from the left to 2, and cast the spell three times.\n\n\n\n\n\n\nSample Input 24 4\n4 4 4 4\n4 1\n3 1\n1 1\n2 1\n\n\n\n\n\nSample Output 20\n1\n2\n3\n\n\n\n\n\n\nSample Input 310 10\n8 7 2 9 10 6 6 5 5 4\n8 1\n6 3\n6 2\n7 10\n9 7\n9 9\n2 4\n8 1\n1 8\n7 7\n\n\n\n\n\nSample Output 31\n0\n1\n2\n2\n3\n3\n3\n3\n2"}
{"id": "p03668", "problem": "Score : 1100 points\n\n\nProblem StatementThere is a tree with N vertices numbered 1, 2, ..., N.\nThe edges of the tree are denoted by (x_i, y_i).\nOn this tree, Alice and Bob play a game against each other.\nStarting from Alice, they alternately perform the following operation:\n\nSelect an existing edge and remove it from the tree, disconnecting it into two separate connected components. Then, remove the component that does not contain Vertex 1.\n\nA player loses the game when he/she is unable to perform the operation.\nDetermine the winner of the game assuming that both players play optimally.\n\n\n\n\nConstraints\n2 \\leq N \\leq 100000\n1 \\leq x_i, y_i \\leq N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_{N-1} y_{N-1}\n\n\n\n\n\nOutputPrint Alice if Alice wins; print Bob if Bob wins.\n\n\n\n\n\n\nSample Input 15\n1 2\n2 3\n2 4\n4 5\n\n\n\n\n\nSample Output 1Alice\n\nIf Alice first removes the edge connecting Vertices 1 and 2, the tree becomes a single vertex tree containing only Vertex 1.\nSince there is no edge anymore, Bob cannot perform the operation and Alice wins.\n\n\n\n\n\nSample Input 25\n1 2\n2 3\n1 4\n4 5\n\n\n\n\n\nSample Output 2Bob\n\n\n\n\n\n\nSample Input 36\n1 2\n2 4\n5 1\n6 3\n3 2\n\n\n\n\n\nSample Output 3Alice\n\n\n\n\n\n\nSample Input 47\n1 2\n3 7\n4 6\n2 3\n2 4\n1 5\n\n\n\n\n\nSample Output 4Bob"}
{"id": "p03669", "problem": "Score : 1200 points\n\n\nProblem StatementWe have N irregular jigsaw pieces. Each piece is composed of three rectangular parts of width 1 and various heights joined together. More specifically:\n\nThe i-th piece is a part of height H, with another part of height A_i joined to the left, and yet another part of height B_i joined to the right, as shown below. Here, the bottom sides of the left and right parts are respectively at C_i and D_i units length above the bottom side of the center part.\n\n\nSnuke is arranging these pieces on a square table of side 10^{100}. Here, the following conditions must be held:\n\nAll pieces must be put on the table.\nThe entire bottom side of the center part of each piece must touch the front side of the table.\nThe entire bottom side of the non-center parts of each piece must either touch the front side of the table, or touch the top side of a part of some other piece.\nThe pieces must not be rotated or flipped.\n\nDetermine whether such an arrangement is possible.\n\n\n\n\nConstraints\n1 \\leq N \\leq 100000\n1 \\leq H \\leq 200\n1 \\leq A_i \\leq H\n1 \\leq B_i \\leq H\n0 \\leq C_i \\leq H - A_i\n0 \\leq D_i \\leq H - B_i\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN H\nA_1 B_1 C_1 D_1\nA_2 B_2 C_2 D_2\n:\nA_N B_N C_N D_N\n\n\n\n\n\nOutputIf it is possible to arrange the pieces under the conditions, print YES; if it is impossible, print NO.\n\n\n\n\n\n\nSample Input 13 4\n1 1 0 0\n2 2 0 1\n3 3 1 0\n\n\n\n\n\nSample Output 1YES\n\nThe figure below shows a possible arrangement.\n\n\n\n\n\n\nSample Input 24 2\n1 1 0 1\n1 1 0 1\n1 1 0 1\n1 1 0 1\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 310 4\n1 1 0 3\n2 3 2 0\n1 2 3 0\n2 1 0 0\n3 2 0 2\n1 1 3 0\n3 2 0 0\n1 3 2 0\n1 1 1 3\n2 3 0 0\n\n\n\n\n\nSample Output 3YES"}
{"id": "p03670", "problem": "Score : 1600 points\n\n\nProblem StatementThere are N(N+1)/2 dots arranged to form an equilateral triangle whose sides consist of N dots, as shown below.\nThe j-th dot from the left in the i-th row from the top is denoted by (i, j) (1 \\leq i \\leq N, 1 \\leq j \\leq i).\nAlso, we will call (i+1, j) immediately lower-left to (i, j), and (i+1, j+1) immediately lower-right to (i, j).\n\nTakahashi is drawing M polygonal lines L_1, L_2, ..., L_M by connecting these dots.\nEach L_i starts at (1, 1), and visits the dot that is immediately lower-left or lower-right to the current dots N-1 times.\nMore formally, there exist X_{i,1}, ..., X_{i,N} such that:\n\nL_i connects the N points (1, X_{i,1}), (2, X_{i,2}), ..., (N, X_{i,N}), in this order.\nFor each j=1, 2, ..., N-1, either X_{i,j+1} = X_{i,j} or X_{i,j+1} = X_{i,j}+1 holds.\n\nTakahashi would like to draw these lines so that no part of L_{i+1} is to the left of L_{i}.\nThat is, for each j=1, 2, ..., N, X_{1,j} \\leq X_{2,j} \\leq ... \\leq X_{M,j} must hold.\nAdditionally, there are K conditions on the shape of the lines that must be followed.\nThe i-th condition is denoted by (A_i, B_i, C_i), which means:\n\nIf C_i=0, L_{A_i} must visit the immediately lower-left dot for the B_i-th move.\nIf C_i=1, L_{A_i} must visit the immediately lower-right dot for the B_i-th move.\n\nThat is, X_{A_i, {B_i}+1} = X_{A_i, B_i} + C_i must hold.\nIn how many ways can Takahashi draw M polygonal lines? Find the count modulo 1000000007.\n\n\n\n\nNotesBefore submission, it is strongly recommended to measure the execution time of your code using \"Custom Test\".\n\n\n\n\nConstraints\n1 \\leq N \\leq 20\n1 \\leq M \\leq 20\n0 \\leq K \\leq (N-1)M\n1 \\leq A_i \\leq M\n1 \\leq B_i \\leq N-1\nC_i = 0 or 1\nNo pair appears more than once as (A_i, B_i).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M K\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_K B_K C_K\n\n\n\n\n\nOutputPrint the number of ways for Takahashi to draw M polygonal lines, modulo 1000000007.\n\n\n\n\n\n\nSample Input 13 2 1\n1 2 0\n\n\n\n\n\nSample Output 16\n\nThere are six ways to draw lines, as shown below. Here, red lines represent L_1, and green lines represent L_2.\n\n\n\n\n\n\nSample Input 23 2 2\n1 1 1\n2 1 0\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 35 4 2\n1 3 1\n4 2 0\n\n\n\n\n\nSample Output 3172\n\n\n\n\n\n\nSample Input 420 20 0\n\n\n\n\n\nSample Output 4881396682"}
{"id": "p03671", "problem": "Score : 100 points\n\n\nProblem StatementSnuke is buying a bicycle.\nThe bicycle of his choice does not come with a bell, so he has to buy one separately.\nHe has very high awareness of safety, and decides to buy two bells, one for each hand.\nThe store sells three kinds of bells for the price of a, b and c yen (the currency of Japan), respectively.\nFind the minimum total price of two different bells.\n\n\n\n\nConstraints\n1 \\leq a,b,c \\leq 10000\na, b and c are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\na b c\n\n\n\n\n\nOutputPrint the minimum total price of two different bells.\n\n\n\n\n\n\nSample Input 1700 600 780\n\n\n\n\n\nSample Output 11300\n\n\nBuying a 700-yen bell and a 600-yen bell costs 1300 yen.\nBuying a 700-yen bell and a 780-yen bell costs 1480 yen.\nBuying a 600-yen bell and a 780-yen bell costs 1380 yen.\n\nThe minimum among these is 1300 yen.\n\n\n\n\n\nSample Input 210000 10000 10000\n\n\n\n\n\nSample Output 220000\n\nBuying any two bells costs 20000 yen."}
{"id": "p03672", "problem": "Score : 200 points\n\n\nProblem StatementWe will call a string that can be obtained by concatenating two equal strings an even string.\nFor example, xyzxyz and aaaaaa are even, while ababab and xyzxy are not.\nYou are given an even string S consisting of lowercase English letters.\nFind the length of the longest even string that can be obtained by deleting one or more characters from the end of S.\nIt is guaranteed that such a non-empty string exists for a given input.\n\n\n\n\nConstraints\n2 \\leq |S| \\leq 200\nS is an even string consisting of lowercase English letters.\nThere exists a non-empty even string that can be obtained by deleting one or more characters from the end of S.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the length of the longest even string that can be obtained.\n\n\n\n\n\n\nSample Input 1abaababaab\n\n\n\n\n\nSample Output 16\n\n\nabaababaab itself is even, but we need to delete at least one character.\nabaababaa is not even.\nabaababa is not even.\nabaabab is not even.\nabaaba is even. Thus, we should print its length, 6.\n\n\n\n\n\n\nSample Input 2xxxx\n\n\n\n\n\nSample Output 22\n\n\nxxx is not even.\nxx is even.\n\n\n\n\n\n\nSample Input 3abcabcabcabc\n\n\n\n\n\nSample Output 36\n\nThe longest even string that can be obtained is abcabc, whose length is 6.\n\n\n\n\n\nSample Input 4akasakaakasakasakaakas\n\n\n\n\n\nSample Output 414\n\nThe longest even string that can be obtained is akasakaakasaka, whose length is 14."}
{"id": "p03673", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length n, a_1, ..., a_n.\nLet us consider performing the following n operations on an empty sequence b.\nThe i-th operation is as follows:\n\nAppend a_i to the end of b.\nReverse the order of the elements in b.\n\nFind the sequence b obtained after these n operations.\n\n\n\n\nConstraints\n1 \\leq n \\leq 2\\times 10^5\n0 \\leq a_i \\leq 10^9\nn and a_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_n\n\n\n\n\n\nOutputPrint n integers in a line with spaces in between.\nThe i-th integer should be b_i.\n\n\n\n\n\n\nSample Input 14\n1 2 3 4\n\n\n\n\n\nSample Output 14 2 1 3\n\n\nAfter step 1 of the first operation, b becomes: 1.\nAfter step 2 of the first operation, b becomes: 1.\nAfter step 1 of the second operation, b becomes: 1, 2.\nAfter step 2 of the second operation, b becomes: 2, 1.\nAfter step 1 of the third operation, b becomes: 2, 1, 3.\nAfter step 2 of the third operation, b becomes: 3, 1, 2.\nAfter step 1 of the fourth operation, b becomes: 3, 1, 2, 4.\nAfter step 2 of the fourth operation, b becomes: 4, 2, 1, 3.\n\nThus, the answer is 4 2 1 3.\n\n\n\n\n\nSample Input 23\n1 2 3\n\n\n\n\n\nSample Output 23 1 2\n\nAs shown above in Sample Output 1, b becomes 3, 1, 2 after step 2 of the third operation. Thus, the answer is 3 1 2.\n\n\n\n\n\nSample Input 31\n1000000000\n\n\n\n\n\nSample Output 31000000000\n\n\n\n\n\n\nSample Input 46\n0 6 7 6 7 0\n\n\n\n\n\nSample Output 40 6 6 0 7 7"}
{"id": "p03674", "problem": "Score : 600 points\n\n\nProblem StatementYou are given an integer sequence of length n+1, a_1,a_2,...,a_{n+1}, which consists of the n integers 1,...,n.\nIt is known that each of the n integers 1,...,n appears at least once in this sequence.\nFor each integer k=1,...,n+1, find the number of the different subsequences (not necessarily contiguous) of the given sequence with length k, modulo 10^9+7.\n\n\n\n\nNotes\n\nIf the contents of two subsequences are the same, they are not separately counted even if they originate from different positions in the original sequence.\n\n\nA subsequence of a sequence a with length k is a sequence obtained by selecting k of the elements of a and arranging them without changing their relative order. For example, the sequences 1,3,5 and 1,2,3 are subsequences of 1,2,3,4,5, while 3,1,2 and 1,10,100 are not.\n\n\n\n\n\n\nConstraints\n1 \\leq n \\leq 10^5\n1 \\leq a_i \\leq n\nEach of the integers 1,...,n appears in the sequence.\nn and a_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_{n+1}\n\n\n\n\n\nOutputPrint n+1 lines.\nThe k-th line should contain the number of the different subsequences of the given sequence with length k, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n1 2 1 3\n\n\n\n\n\nSample Output 13\n5\n4\n1\n\nThere are three subsequences with length 1: 1 and 2 and 3.\nThere are five subsequences with length 2: 1,1 and 1,2 and 1,3 and 2,1 and 2,3.\nThere are four subsequences with length 3: 1,1,3 and 1,2,1 and 1,2,3 and 2,1,3.\nThere is one subsequence with length 4: 1,2,1,3.\n\n\n\n\n\nSample Input 21\n1 1\n\n\n\n\n\nSample Output 21\n1\n\nThere is one subsequence with length 1: 1.\nThere is one subsequence with length 2: 1,1.\n\n\n\n\n\nSample Input 332\n29 19 7 10 26 32 27 4 11 20 2 8 16 23 5 14 6 12 17 22 18 30 28 24 15 1 25 3 13 21 19 31 9\n\n\n\n\n\nSample Output 332\n525\n5453\n40919\n237336\n1107568\n4272048\n13884156\n38567100\n92561040\n193536720\n354817320\n573166440\n818809200\n37158313\n166803103\n166803103\n37158313\n818809200\n573166440\n354817320\n193536720\n92561040\n38567100\n13884156\n4272048\n1107568\n237336\n40920\n5456\n528\n33\n1\n\nBe sure to print the numbers modulo 10^9+7."}
{"id": "p03675", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length n, a_1, ..., a_n.\nLet us consider performing the following n operations on an empty sequence b.\nThe i-th operation is as follows:\n\nAppend a_i to the end of b.\nReverse the order of the elements in b.\n\nFind the sequence b obtained after these n operations.\n\n\n\n\nConstraints\n1 \\leq n \\leq 2\\times 10^5\n0 \\leq a_i \\leq 10^9\nn and a_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_n\n\n\n\n\n\nOutputPrint n integers in a line with spaces in between.\nThe i-th integer should be b_i.\n\n\n\n\n\n\nSample Input 14\n1 2 3 4\n\n\n\n\n\nSample Output 14 2 1 3\n\n\nAfter step 1 of the first operation, b becomes: 1.\nAfter step 2 of the first operation, b becomes: 1.\nAfter step 1 of the second operation, b becomes: 1, 2.\nAfter step 2 of the second operation, b becomes: 2, 1.\nAfter step 1 of the third operation, b becomes: 2, 1, 3.\nAfter step 2 of the third operation, b becomes: 3, 1, 2.\nAfter step 1 of the fourth operation, b becomes: 3, 1, 2, 4.\nAfter step 2 of the fourth operation, b becomes: 4, 2, 1, 3.\n\nThus, the answer is 4 2 1 3.\n\n\n\n\n\nSample Input 23\n1 2 3\n\n\n\n\n\nSample Output 23 1 2\n\nAs shown above in Sample Output 1, b becomes 3, 1, 2 after step 2 of the third operation. Thus, the answer is 3 1 2.\n\n\n\n\n\nSample Input 31\n1000000000\n\n\n\n\n\nSample Output 31000000000\n\n\n\n\n\n\nSample Input 46\n0 6 7 6 7 0\n\n\n\n\n\nSample Output 40 6 6 0 7 7"}
{"id": "p03676", "problem": "Score : 600 points\n\n\nProblem StatementYou are given an integer sequence of length n+1, a_1,a_2,...,a_{n+1}, which consists of the n integers 1,...,n.\nIt is known that each of the n integers 1,...,n appears at least once in this sequence.\nFor each integer k=1,...,n+1, find the number of the different subsequences (not necessarily contiguous) of the given sequence with length k, modulo 10^9+7.\n\n\n\n\nNotes\n\nIf the contents of two subsequences are the same, they are not separately counted even if they originate from different positions in the original sequence.\n\n\nA subsequence of a sequence a with length k is a sequence obtained by selecting k of the elements of a and arranging them without changing their relative order. For example, the sequences 1,3,5 and 1,2,3 are subsequences of 1,2,3,4,5, while 3,1,2 and 1,10,100 are not.\n\n\n\n\n\n\nConstraints\n1 \\leq n \\leq 10^5\n1 \\leq a_i \\leq n\nEach of the integers 1,...,n appears in the sequence.\nn and a_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_{n+1}\n\n\n\n\n\nOutputPrint n+1 lines.\nThe k-th line should contain the number of the different subsequences of the given sequence with length k, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n1 2 1 3\n\n\n\n\n\nSample Output 13\n5\n4\n1\n\nThere are three subsequences with length 1: 1 and 2 and 3.\nThere are five subsequences with length 2: 1,1 and 1,2 and 1,3 and 2,1 and 2,3.\nThere are four subsequences with length 3: 1,1,3 and 1,2,1 and 1,2,3 and 2,1,3.\nThere is one subsequence with length 4: 1,2,1,3.\n\n\n\n\n\nSample Input 21\n1 1\n\n\n\n\n\nSample Output 21\n1\n\nThere is one subsequence with length 1: 1.\nThere is one subsequence with length 2: 1,1.\n\n\n\n\n\nSample Input 332\n29 19 7 10 26 32 27 4 11 20 2 8 16 23 5 14 6 12 17 22 18 30 28 24 15 1 25 3 13 21 19 31 9\n\n\n\n\n\nSample Output 332\n525\n5453\n40919\n237336\n1107568\n4272048\n13884156\n38567100\n92561040\n193536720\n354817320\n573166440\n818809200\n37158313\n166803103\n166803103\n37158313\n818809200\n573166440\n354817320\n193536720\n92561040\n38567100\n13884156\n4272048\n1107568\n237336\n40920\n5456\n528\n33\n1\n\nBe sure to print the numbers modulo 10^9+7."}
{"id": "p03677", "problem": "Score : 700 points\n\n\nProblem StatementSnuke is buying a lamp.\nThe light of the lamp can be adjusted to m levels of brightness, represented by integers from 1 through m, by the two buttons on the remote control.\nThe first button is a \"forward\" button. When this button is pressed, the brightness level is increased by 1, except when the brightness level is m, in which case the brightness level becomes 1.\nThe second button is a \"favorite\" button. When this button is pressed, the brightness level becomes the favorite brightness level x, which is set when the lamp is purchased.\nSnuke is thinking of setting the favorite brightness level x so that he can efficiently adjust the brightness.\nHe is planning to change the brightness n-1 times. In the i-th change, the brightness level is changed from a_i to a_{i+1}. The initial brightness level is a_1.\nFind the number of times Snuke needs to press the buttons when x is set to minimize this number.\n\n\n\n\nConstraints\n2 \\leq n,m \\leq 10^5\n1 \\leq a_i\\leq m\na_i \\neq a_{i+1}\nn, m and a_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn m\na_1 a_2 \u2026 a_n\n\n\n\n\n\nOutputPrint the minimum number of times Snuke needs to press the buttons.\n\n\n\n\n\n\nSample Input 14 6\n1 5 1 4\n\n\n\n\n\nSample Output 15\n\nWhen the favorite brightness level is set to 1, 2, 3, 4, 5 and 6, Snuke needs to press the buttons 8, 9, 7, 5, 6 and 9 times, respectively.\nThus, Snuke should set the favorite brightness level to 4.\nIn this case, the brightness is adjusted as follows:\n\nIn the first change, press the favorite button once, then press the forward button once.\nIn the second change, press the forward button twice.\nIn the third change, press the favorite button once.\n\n\n\n\n\n\nSample Input 210 10\n10 9 8 7 6 5 4 3 2 1\n\n\n\n\n\nSample Output 245"}
{"id": "p03678", "problem": "Score : 1100 points\n\n\nProblem StatementWe will call a string that can be obtained by concatenating two equal strings an even string.\nFor example, xyzxyz and aaaaaa are even, while ababab and xyzxy are not.\nFor a non-empty string S, we will define f(S) as the shortest even string that can be obtained by appending one or more characters to the end of S.\nFor example, f(abaaba)=abaababaab.\nIt can be shown that f(S) is uniquely determined for a non-empty string S.\nYou are given an even string S consisting of lowercase English letters.\nFor each letter in the lowercase English alphabet, find the number of its occurrences from the l-th character through the r-th character of f^{10^{100}} (S).\nHere, f^{10^{100}} (S) is the string f(f(f( ... f(S) ... ))) obtained by applying f to S 10^{100} times.\n\n\n\n\nConstraints\n2 \\leq |S| \\leq 2\\times 10^5\n1 \\leq l \\leq r \\leq 10^{18}\nS is an even string consisting of lowercase English letters.\nl and r are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\nl r\n\n\n\n\n\nOutputPrint 26 integers in a line with spaces in between.\nThe i-th integer should be the number of the occurrences of the i-th letter in the lowercase English alphabet from the l-th character through the r-th character of f^{10^{100}} (S).\n\n\n\n\n\n\nSample Input 1abaaba\n6 10\n\n\n\n\n\nSample Output 13 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nSince f(abaaba)=abaababaab, the first ten characters in f^{10^{100}}(S) is also abaababaab. Thus, the sixth through the tenth characters are abaab. In this string, a appears three times, b appears twice and no other letters appear, and thus the output should be 3 and 2 followed by twenty-four 0s.\n\n\n\n\n\nSample Input 2xx\n1 1000000000000000000\n\n\n\n\n\nSample Output 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1000000000000000000 0 0\n\n\n\n\n\n\nSample Input 3vgxgpuamkvgxgvgxgpuamkvgxg\n1 1000000000000000000\n\n\n\n\n\nSample Output 387167725689669676 0 0 0 0 0 282080685775825810 0 0 0 87167725689669676 0 87167725689669676 0 0 87167725689669676 0 0 0 0 87167725689669676 141040342887912905 0 141040342887912905 0 0"}
{"id": "p03679", "problem": "Score : 100 points\n\n\nProblem StatementTakahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier.\nHe gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though.\nOther than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious.\nTakahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it.\nWrite a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache.\n\n\n\n\nConstraints\n1 \u2264 X,A,B \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX A B\n\n\n\n\n\nOutputPrint delicious if Takahashi found the food delicious; print safe if he neither found it delicious nor got a stomachache; print dangerous if he got a stomachache.\n\n\n\n\n\n\nSample Input 14 3 6\n\n\n\n\n\nSample Output 1safe\n\nHe ate the food three days after the \"best-by\" date. It was not delicious or harmful for him.\n\n\n\n\n\nSample Input 26 5 1\n\n\n\n\n\nSample Output 2delicious\n\nHe ate the food by the \"best-by\" date. It was delicious for him.\n\n\n\n\n\nSample Input 33 7 12\n\n\n\n\n\nSample Output 3dangerous\n\nHe ate the food five days after the \"best-by\" date. It was harmful for him."}
{"id": "p03680", "problem": "Score : 200 points\n\n\nProblem StatementTakahashi wants to gain muscle, and decides to work out at AtCoder Gym.\nThe exercise machine at the gym has N buttons, and exactly one of the buttons is lighten up.\nThese buttons are numbered 1 through N.\nWhen Button i is lighten up and you press it, the light is turned off, and then Button a_i will be lighten up. It is possible that i=a_i.\nWhen Button i is not lighten up, nothing will happen by pressing it.\nInitially, Button 1 is lighten up. Takahashi wants to quit pressing buttons when Button 2 is lighten up.\nDetermine whether this is possible. If the answer is positive, find the minimum number of times he needs to press buttons.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n1 \u2264 a_i \u2264 N\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1\na_2\n:\na_N\n\n\n\n\n\nOutputPrint -1 if it is impossible to lighten up Button 2.\nOtherwise, print the minimum number of times we need to press buttons in order to lighten up Button 2.\n\n\n\n\n\n\nSample Input 13\n3\n1\n2\n\n\n\n\n\nSample Output 12\n\nPress Button 1, then Button 3.\n\n\n\n\n\nSample Input 24\n3\n4\n1\n2\n\n\n\n\n\nSample Output 2-1\n\nPressing Button 1 lightens up Button 3, and vice versa, so Button 2 will never be lighten up.\n\n\n\n\n\nSample Input 35\n3\n3\n4\n2\n4\n\n\n\n\n\nSample Output 33"}
{"id": "p03681", "problem": "Score : 300 points\n\n\nProblem StatementSnuke has N dogs and M monkeys. He wants them to line up in a row.\nAs a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys.\nHow many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 10^5\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the number of possible arrangements, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 2\n\n\n\n\n\nSample Output 18\n\nWe will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA.\n\n\n\n\n\nSample Input 23 2\n\n\n\n\n\nSample Output 212\n\n\n\n\n\n\nSample Input 31 8\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 4100000 100000\n\n\n\n\n\nSample Output 4530123477"}
{"id": "p03682", "problem": "Score : 500 points\n\n\nProblem StatementThere are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates.\nYou can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads.\nYour objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this?\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n0 \u2264 x_i,y_i \u2264 10^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the minimum necessary amount of money in order to build roads so that it will be possible to travel between every pair of towns by traversing roads.\n\n\n\n\n\n\nSample Input 13\n1 5\n3 9\n7 8\n\n\n\n\n\nSample Output 13\n\nBuild a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen.\n\n\n\n\n\nSample Input 26\n8 3\n4 9\n12 19\n18 1\n13 5\n7 6\n\n\n\n\n\nSample Output 28"}
{"id": "p03683", "problem": "Score : 300 points\n\n\nProblem StatementSnuke has N dogs and M monkeys. He wants them to line up in a row.\nAs a Japanese saying goes, these dogs and monkeys are on bad terms. (\"ken'en no naka\", literally \"the relationship of dogs and monkeys\", means a relationship of mutual hatred.) Snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys.\nHow many such arrangements there are? Find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).\nHere, dogs and monkeys are both distinguishable. Also, two arrangements that result from reversing each other are distinguished.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 10^5\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the number of possible arrangements, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 2\n\n\n\n\n\nSample Output 18\n\nWe will denote the dogs by A and B, and the monkeys by C and D. There are eight possible arrangements: ACBD, ADBC, BCAD, BDAC, CADB, CBDA, DACB and DBCA.\n\n\n\n\n\nSample Input 23 2\n\n\n\n\n\nSample Output 212\n\n\n\n\n\n\nSample Input 31 8\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 4100000 100000\n\n\n\n\n\nSample Output 4530123477"}
{"id": "p03684", "problem": "Score : 500 points\n\n\nProblem StatementThere are N towns on a plane. The i-th town is located at the coordinates (x_i,y_i). There may be more than one town at the same coordinates.\nYou can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of Japan). It is not possible to build other types of roads.\nYour objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. At least how much money is necessary to achieve this?\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n0 \u2264 x_i,y_i \u2264 10^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the minimum necessary amount of money in order to build roads so that it will be possible to travel between every pair of towns by traversing roads.\n\n\n\n\n\n\nSample Input 13\n1 5\n3 9\n7 8\n\n\n\n\n\nSample Output 13\n\nBuild a road between Towns 1 and 2, and another between Towns 2 and 3. The total cost is 2+1=3 yen.\n\n\n\n\n\nSample Input 26\n8 3\n4 9\n12 19\n18 1\n13 5\n7 6\n\n\n\n\n\nSample Output 28"}
{"id": "p03685", "problem": "Score : 700 points\n\n\nProblem StatementSnuke is playing a puzzle game.\nIn this game, you are given a rectangular board of dimensions R \u00d7 C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\nThe objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nHere, the curves may not go outside the board or cross each other.\nDetermine whether this is possible.\n\n\n\n\nConstraints\n1 \u2264 R,C \u2264 10^8\n1 \u2264 N \u2264 10^5\n0 \u2264 x_{i,1},x_{i,2} \u2264 R(1 \u2264 i \u2264 N)\n0 \u2264 y_{i,1},y_{i,2} \u2264 C(1 \u2264 i \u2264 N)\nAll given points are distinct.\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nR C N\nx_{1,1} y_{1,1} x_{1,2} y_{1,2}\n:\nx_{N,1} y_{N,1} x_{N,2} y_{N,2}\n\n\n\n\n\nOutputPrint YES if the objective is achievable; print NO otherwise.\n\n\n\n\n\n\nSample Input 14 2 3\n0 1 3 1\n1 1 4 1\n2 0 2 2\n\n\n\n\n\nSample Output 1YES\n\n\nThe above figure shows a possible solution.\n\n\n\n\n\nSample Input 22 2 4\n0 0 2 2\n2 0 0 1\n0 2 1 2\n1 1 2 1\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 35 5 7\n0 0 2 4\n2 3 4 5\n3 5 5 2\n5 5 5 4\n0 3 5 1\n2 2 4 4\n0 5 4 1\n\n\n\n\n\nSample Output 3YES\n\n\n\n\n\n\nSample Input 41 1 2\n0 0 1 1\n1 0 0 1\n\n\n\n\n\nSample Output 4NO"}
{"id": "p03686", "problem": "Score : 1000 points\n\n\nProblem StatementThere are M chairs arranged in a line. The coordinate of the i-th chair (1 \u2264 i \u2264 M) is i.\nN people of the Takahashi clan played too much games, and they are all suffering from backaches. They need to sit in chairs and rest, but they are particular about which chairs they sit in. Specifically, the i-th person wishes to sit in a chair whose coordinate is not greater than L_i, or not less than R_i. Naturally, only one person can sit in the same chair.\nIt may not be possible for all of them to sit in their favorite chairs, if nothing is done.\nAoki, who cares for the health of the people of the Takahashi clan, decides to provide additional chairs so that all of them can sit in chairs at their favorite positions.\nAdditional chairs can be placed at arbitrary real coordinates. Find the minimum required number of additional chairs.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 2 \u00d7 10^5\n0 \u2264 L_i < R_i \u2264 M + 1(1 \u2264 i \u2264 N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nL_1 R_1\n:\nL_N R_N\n\n\n\n\n\nOutputPrint the minimum required number of additional chairs.\n\n\n\n\n\n\nSample Input 14 4\n0 3\n2 3\n1 3\n3 4\n\n\n\n\n\nSample Output 10\n\nThe four people can sit in chairs at the coordinates 3, 2, 1 and 4, respectively, and no more chair is needed.\n\n\n\n\n\nSample Input 27 6\n0 7\n1 5\n3 6\n2 7\n1 6\n2 6\n3 7\n\n\n\n\n\nSample Output 22\n\nIf we place additional chairs at the coordinates 0 and 2.5, the seven people can sit at coordinates 0, 5, 3, 2, 6, 1 and 2.5, respectively.\n\n\n\n\n\nSample Input 33 1\n1 2\n1 2\n1 2\n\n\n\n\n\nSample Output 32\n\n\n\n\n\n\nSample Input 46 6\n1 6\n1 6\n1 5\n1 5\n2 6\n2 6\n\n\n\n\n\nSample Output 42"}
{"id": "p03687", "problem": "Score : 300 points\n\n\nProblem StatementSnuke can change a string t of length N into a string t' of length N - 1 under the following rule:\n\nFor each i (1 \u2264 i \u2264 N - 1), the i-th character of t' must be either the i-th or (i + 1)-th character of t.\n\nThere is a string s consisting of lowercase English letters.\nSnuke's objective is to apply the above operation to s repeatedly so that all the characters in s are the same.\nFind the minimum necessary number of operations.\n\n\n\n\nConstraints\n1 \u2264 |s| \u2264 100\ns consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the minimum necessary number of operations to achieve the objective.\n\n\n\n\n\n\nSample Input 1serval\n\n\n\n\n\nSample Output 13\n\nOne solution is: serval \u2192 srvvl \u2192 svvv \u2192 vvv.\n\n\n\n\n\nSample Input 2jackal\n\n\n\n\n\nSample Output 22\n\nOne solution is: jackal \u2192 aacaa \u2192 aaaa.\n\n\n\n\n\nSample Input 3zzz\n\n\n\n\n\nSample Output 30\n\nAll the characters in s are the same from the beginning.\n\n\n\n\n\nSample Input 4whbrjpjyhsrywlqjxdbrbaomnw\n\n\n\n\n\nSample Output 48\n\nIn 8 operations, he can change s to rrrrrrrrrrrrrrrrrr."}
{"id": "p03688", "problem": "Score : 700 points\n\n\nProblem StatementThere are N cats.\nWe number them from 1 through N.\nEach of the cats wears a hat.\nCat i says: \"there are exactly a_i different colors among the N - 1 hats worn by the cats except me.\"\nDetermine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n1 \u2264 a_i \u2264 N-1\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint Yes if there exists a sequence of colors of the hats that is consistent with the remarks of the cats; print No otherwise.\n\n\n\n\n\n\nSample Input 13\n1 2 2\n\n\n\n\n\nSample Output 1Yes\n\nFor example, if cat 1, 2 and 3 wears red, blue and blue hats, respectively, it is consistent with the remarks of the cats.\n\n\n\n\n\nSample Input 23\n1 1 2\n\n\n\n\n\nSample Output 2No\n\nFrom the remark of cat 1, we can see that cat 2 and 3 wear hats of the same color.\nAlso, from the remark of cat 2, we can see that cat 1 and 3 wear hats of the same color.\nTherefore, cat 1 and 2 wear hats of the same color, which contradicts the remark of cat 3.\n\n\n\n\n\nSample Input 35\n4 3 4 3 4\n\n\n\n\n\nSample Output 3No\n\n\n\n\n\n\nSample Input 43\n2 2 2\n\n\n\n\n\nSample Output 4Yes\n\n\n\n\n\n\nSample Input 54\n2 2 2 2\n\n\n\n\n\nSample Output 5Yes\n\n\n\n\n\n\nSample Input 65\n3 3 3 3 3\n\n\n\n\n\nSample Output 6No"}
{"id": "p03689", "problem": "Score : 700 points\n\n\nProblem StatementYou are given four integers: H, W, h and w (1 \u2264 h \u2264 H, 1 \u2264 w \u2264 W).\nDetermine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive:\n\nThe matrix has H rows and W columns.\nEach element of the matrix is an integer between -10^9 and 10^9 (inclusive).\nThe sum of all the elements of the matrix is positive.\nThe sum of all the elements within every subrectangle with h rows and w columns in the matrix is negative.\n\n\n\n\n\nConstraints\n1 \u2264 h \u2264 H \u2264 500\n1 \u2264 w \u2264 W \u2264 500\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W h w\n\n\n\n\n\nOutputIf there does not exist a matrix that satisfies all of the conditions, print No.\nOtherwise, print Yes in the first line, and print a matrix in the subsequent lines in the following format:\na_{11} ... a_{1W}\n:\na_{H1} ... a_{HW}\n\nHere, a_{ij} represents the (i,\\ j) element of the matrix.\n\n\n\n\n\n\nSample Input 13 3 2 2\n\n\n\n\n\nSample Output 1Yes\n1 1 1\n1 -4 1\n1 1 1\n\nThe sum of all the elements of this matrix is 4, which is positive.\nAlso, in this matrix, there are four subrectangles with 2 rows and 2 columns as shown below. For each of them, the sum of all the elements inside is -1, which is negative.\n\n\n\n\n\n\n\n\nSample Input 22 4 1 2\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 33 4 2 3\n\n\n\n\n\nSample Output 3Yes\n2 -5 8 7\n3 -5 -4 -5\n2 1 -1 7"}
{"id": "p03690", "problem": "Score : 1000 points\n\n\nProblem StatementThere is a sequence of length N: a = (a_1, a_2, ..., a_N).\nHere, each a_i is a non-negative integer.\nSnuke can repeatedly perform the following operation:\n\nLet the XOR of all the elements in a be x. Select an integer i (1 \u2264 i \u2264 N) and replace a_i with x.\n\nSnuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_N).\nHere, each b_i is a non-negative integer.\nDetermine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\na_i and b_i are integers.\n0 \u2264 a_i, b_i < 2^{30}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\nb_1 b_2 ... b_N\n\n\n\n\n\nOutputIf the objective is achievable, print the minimum necessary number of operations.\nOtherwise, print -1 instead.\n\n\n\n\n\n\nSample Input 13\n0 1 2\n3 1 0\n\n\n\n\n\nSample Output 12\n\nAt first, the XOR of all the elements of a is 3.\nIf we replace a_1 with 3, a becomes (3, 1, 2).\nNow, the XOR of all the elements of a is 0.\nIf we replace a_3 with 0, a becomes (3, 1, 0), which matches b.\n\n\n\n\n\nSample Input 23\n0 1 2\n0 1 2\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 32\n1 1\n0 0\n\n\n\n\n\nSample Output 3-1\n\n\n\n\n\n\nSample Input 44\n0 1 2 3\n1 0 3 2\n\n\n\n\n\nSample Output 45"}
{"id": "p03691", "problem": "Score : 1400 points\n\n\nProblem StatementThere are N turkeys.\nWe number them from 1 through N.\nM men will visit here one by one.\nThe i-th man to visit will take the following action:\n\nIf both turkeys x_i and y_i are alive: selects one of them with equal probability, then eats it.\nIf either turkey x_i or y_i is alive (but not both): eats the alive one.\nIf neither turkey x_i nor y_i is alive: does nothing.\n\nFind the number of pairs (i,\\ j) (1 \u2264 i < j \u2264 N) such that the following condition is held:\n\nThe probability of both turkeys i and j being alive after all the men took actions, is greater than 0.\n\n\n\n\n\nConstraints\n2 \u2264 N \u2264 400\n1 \u2264 M \u2264 10^5\n1 \u2264 x_i < y_i \u2264 N\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\n\n\n\nOutputPrint the number of pairs (i,\\ j) (1 \u2264 i < j \u2264 N) such that the condition is held.\n\n\n\n\n\n\nSample Input 13 1\n1 2\n\n\n\n\n\nSample Output 12\n\n(i,\\ j) = (1,\\ 3), (2,\\ 3) satisfy the condition.\n\n\n\n\n\nSample Input 24 3\n1 2\n3 4\n2 3\n\n\n\n\n\nSample Output 21\n\n(i,\\ j) = (1,\\ 4) satisfies the condition.\nBoth turkeys 1 and 4 are alive if:\n\nThe first man eats turkey 2.\nThe second man eats turkey 3.\nThe third man does nothing.\n\n\n\n\n\n\nSample Input 33 2\n1 2\n1 2\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 410 10\n8 9\n2 8\n4 6\n4 9\n7 8\n2 8\n1 8\n3 4\n3 4\n2 7\n\n\n\n\n\nSample Output 45"}
{"id": "p03692", "problem": "Score : 1600 points\n\n\nProblem StatementThere is a directed graph G with N vertices and M edges.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i is directed from x_i to y_i.\nHere, x_i < y_i holds.\nAlso, there are no multiple edges in G.\nConsider selecting a subset of the set of the M edges in G, and removing these edges from G to obtain another graph G'.\nThere are 2^M different possible graphs as G'.\nAlice and Bob play against each other in the following game played on G'.\nFirst, place two pieces on vertices 1 and 2, one on each.\nThen, starting from Alice, Alice and Bob alternately perform the following operation:\n\nSelect an edge i such that there is a piece placed on vertex x_i, and move the piece to vertex y_i (if there are two pieces on vertex x_i, only move one). The two pieces are allowed to be placed on the same vertex.\n\nThe player loses when he/she becomes unable to perform the operation.\nWe assume that both players play optimally.\nAmong the 2^M different possible graphs as G', how many lead to Alice's victory?\nFind the count modulo 10^9+7.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 15\n1 \u2264 M \u2264 N(N-1)/2\n1 \u2264 x_i < y_i \u2264 N\nAll (x_i,\\ y_i) are distinct.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n\n\n\n\nOutputPrint the number of G' that lead to Alice's victory, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 1\n1 2\n\n\n\n\n\nSample Output 11\n\nThe figure below shows the two possible graphs as G'.\nA graph marked with \u25cb leads to Alice's victory, and a graph marked with \u00d7 leads to Bob's victory.\n\n\n\n\n\n\n\n\nSample Input 23 3\n1 2\n1 3\n2 3\n\n\n\n\n\nSample Output 26\n\nThe figure below shows the eight possible graphs as G'.\n\n\n\n\n\n\n\n\nSample Input 34 2\n1 3\n2 4\n\n\n\n\n\nSample Output 32\n\n\n\n\n\n\nSample Input 45 10\n2 4\n3 4\n2 5\n2 3\n1 2\n3 5\n1 3\n1 5\n4 5\n1 4\n\n\n\n\n\nSample Output 4816"}
{"id": "p03693", "problem": "Score : 100 points\n\n\nProblem StatementAtCoDeer has three cards, one red, one green and one blue.\nAn integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.\nWe will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.\nIs this integer a multiple of 4?  \n\n\n\n\nConstraints\n1 \u2264 r, g, b \u2264 9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nr g b\n\n\n\n\n\nOutputIf the three-digit integer is a multiple of 4, print YES (case-sensitive); otherwise, print NO.\n\n\n\n\n\n\nSample Input 14 3 2\n\n\n\n\n\nSample Output 1YES\n\n432 is a multiple of 4, and thus YES should be printed.\n\n\n\n\n\nSample Input 22 3 4\n\n\n\n\n\nSample Output 2NO\n\n234 is not a multiple of 4, and thus NO should be printed."}
{"id": "p03694", "problem": "Score : 200 points\n\n\nProblem StatementIt is only six months until Christmas, and AtCoDeer the reindeer is now planning his travel to deliver gifts.\nThere are N houses along TopCoDeer street. The i-th house is located at coordinate a_i. He has decided to deliver gifts to all these houses.\nFind the minimum distance to be traveled when AtCoDeer can start and end his travel at any positions.  \n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n0 \u2264 a_i \u2264 1000\na_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum distance to be traveled.  \n\n\n\n\n\n\nSample Input 14\n2 3 7 9\n\n\n\n\n\nSample Output 17\n\nThe travel distance of 7 can be achieved by starting at coordinate 9 and traveling straight to coordinate 2.\nIt is not possible to do with a travel distance of less than 7, and thus 7 is the minimum distance to be traveled.  \n\n\n\n\n\nSample Input 28\n3 1 4 1 5 9 2 6\n\n\n\n\n\nSample Output 28\n\nThere may be more than one house at a position."}
{"id": "p03695", "problem": "Score : 300 points\n\n\nProblem StatementIn AtCoder, a person who has participated in a contest receives a color, which corresponds to the person's rating as follows:  \n\nRating 1-399 : gray\nRating 400-799 : brown\nRating 800-1199 : green\nRating 1200-1599 : cyan\nRating 1600-1999 : blue\nRating 2000-2399 : yellow\nRating 2400-2799 : orange\nRating 2800-3199 : red\n\nOther than the above, a person whose rating is 3200 or higher can freely pick his/her color, which can be one of the eight colors above or not.\nCurrently, there are N users who have participated in a contest in AtCoder, and the i-th user has a rating of a_i.\nFind the minimum and maximum possible numbers of different colors of the users.  \n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n1 \u2264 a_i \u2264 4800\na_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum possible number of different colors of the users, and the maximum possible number of different colors, with a space in between.  \n\n\n\n\n\n\nSample Input 14\n2100 2500 2700 2700\n\n\n\n\n\nSample Output 12 2\n\nThe user with rating 2100 is \"yellow\", and the others are \"orange\". There are two different colors.  \n\n\n\n\n\nSample Input 25\n1100 1900 2800 3200 3200\n\n\n\n\n\nSample Output 23 5\n\nThe user with rating 1100 is \"green\", the user with rating 1900 is blue and the user with rating 2800 is \"red\".\nIf the fourth user picks \"red\", and the fifth user picks \"blue\", there are three different colors. This is one possible scenario for the minimum number of colors.\nIf the fourth user picks \"purple\", and the fifth user picks \"black\", there are five different colors. This is one possible scenario for the maximum number of colors.  \n\n\n\n\n\nSample Input 320\n800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990\n\n\n\n\n\nSample Output 31 1\n\nAll the users are \"green\", and thus there is one color."}
{"id": "p03696", "problem": "Score : 400 points\n\n\nProblem StatementYou are given a string S of length N consisting of ( and ). Your task is to insert some number of ( and ) into S to obtain a correct bracket sequence.\nHere, a correct bracket sequence is defined as follows:  \n\n() is a correct bracket sequence.\nIf X is a correct bracket sequence, the concatenation of (, X and ) in this order is also a correct bracket sequence.\nIf X and Y are correct bracket sequences, the concatenation of X and Y in this order is also a correct bracket sequence.\nEvery correct bracket sequence can be derived from the rules above.\n\nFind the shortest correct bracket sequence that can be obtained. If there is more than one such sequence, find the lexicographically smallest one.\n\n\n\n\nConstraints\nThe length of S is N.\n1 \u2264 N \u2264 100\nS consists of ( and ).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nS\n\n\n\n\n\nOutputPrint the lexicographically smallest string among the shortest correct bracket sequences that can be obtained by inserting some number of ( and ) into S.\n\n\n\n\n\n\nSample Input 13\n())\n\n\n\n\n\nSample Output 1(())\n\n\n\n\n\n\nSample Input 26\n)))())\n\n\n\n\n\nSample Output 2(((()))())\n\n\n\n\n\n\nSample Input 38\n))))((((\n\n\n\n\n\nSample Output 3(((())))(((())))"}
{"id": "p03697", "problem": "Score : 100 points\n\n\nProblem StatementYou are given two integers A and B as the input. Output the value of A + B.\nHowever, if A + B is 10 or greater, output error instead.\n\n\n\n\nConstraints\nA and B are integers.\n1 \u2264 A, B \u2264 9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputIf A + B is 10 or greater, print the string error (case-sensitive); otherwise, print the value of A + B.\n\n\n\n\n\n\nSample Input 16 3\n\n\n\n\n\nSample Output 19\n\n\n\n\n\n\nSample Input 26 4\n\n\n\n\n\nSample Output 2error"}
{"id": "p03698", "problem": "Score : 200 points\n\n\nProblem StatementYou are given a string S consisting of lowercase English letters. Determine whether all the characters in S are different.\n\n\n\n\nConstraints\n2 \u2264 |S| \u2264 26, where |S| denotes the length of S.\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf all the characters in S are different, print yes (case-sensitive); otherwise, print no.\n\n\n\n\n\n\nSample Input 1uncopyrightable\n\n\n\n\n\nSample Output 1yes\n\n\n\n\n\n\nSample Input 2different\n\n\n\n\n\nSample Output 2no\n\n\n\n\n\n\nSample Input 3no\n\n\n\n\n\nSample Output 3yes"}
{"id": "p03699", "problem": "Score : 300 points\n\n\nProblem StatementYou are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well.\nHowever, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2264 N \u2264 100\n1 \u2264 s_i \u2264 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\ns_1\ns_2\n:\ns_N\n\n\n\n\n\nOutputPrint the maximum value that can be displayed as your grade.\n\n\n\n\n\n\nSample Input 13\n5\n10\n15\n\n\n\n\n\nSample Output 125\n\nYour grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.\n\n\n\n\n\nSample Input 23\n10\n10\n15\n\n\n\n\n\nSample Output 235\n\nYour grade will be 35 if all the questions are answered correctly, and this grade will be displayed correctly.\n\n\n\n\n\nSample Input 33\n10\n20\n30\n\n\n\n\n\nSample Output 30\n\nRegardless of whether each question is answered correctly or not, your grade will be a multiple of 10 and displayed as 0."}
{"id": "p03700", "problem": "Score : 400 points\n\n\nProblem StatementYou are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below.\nFortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows:\n\nSelect an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds.\n\nAt least how many explosions do you need to cause in order to vanish all the monsters?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2264 N \u2264 10^5\n1 \u2264 B < A \u2264 10^9\n1 \u2264 h_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN A B\nh_1\nh_2\n:\nh_N\n\n\n\n\n\nOutputPrint the minimum number of explosions that needs to be caused in order to vanish all the monsters.\n\n\n\n\n\n\nSample Input 14 5 3\n8\n7\n4\n2\n\n\n\n\n\nSample Output 12\n\nYou can vanish all the monsters in two explosion, as follows:\n\nFirst, cause an explosion centered at the monster with 8 health. The healths of the four monsters become 3, 4, 1 and -1, respectively, and the last monster vanishes.\nSecond, cause an explosion centered at the monster with 4 health remaining. The healths of the three remaining monsters become 0, -1 and -2, respectively, and all the monsters are now vanished.\n\n\n\n\n\n\nSample Input 22 10 4\n20\n20\n\n\n\n\n\nSample Output 24\n\nYou need to cause two explosions centered at each monster, for a total of four.\n\n\n\n\n\nSample Input 35 2 1\n900000000\n900000000\n1000000000\n1000000000\n1000000000\n\n\n\n\n\nSample Output 3800000000"}
{"id": "p03701", "problem": "Score : 300 points\n\n\nProblem StatementYou are taking a computer-based examination. The examination consists of N questions, and the score allocated to the i-th question is s_i. Your answer to each question will be judged as either \"correct\" or \"incorrect\", and your grade will be the sum of the points allocated to questions that are answered correctly. When you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well.\nHowever, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. Otherwise, your grade is displayed correctly. In this situation, what is the maximum value that can be displayed as your grade?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2264 N \u2264 100\n1 \u2264 s_i \u2264 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\ns_1\ns_2\n:\ns_N\n\n\n\n\n\nOutputPrint the maximum value that can be displayed as your grade.\n\n\n\n\n\n\nSample Input 13\n5\n10\n15\n\n\n\n\n\nSample Output 125\n\nYour grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.\n\n\n\n\n\nSample Input 23\n10\n10\n15\n\n\n\n\n\nSample Output 235\n\nYour grade will be 35 if all the questions are answered correctly, and this grade will be displayed correctly.\n\n\n\n\n\nSample Input 33\n10\n20\n30\n\n\n\n\n\nSample Output 30\n\nRegardless of whether each question is answered correctly or not, your grade will be a multiple of 10 and displayed as 0."}
{"id": "p03702", "problem": "Score : 400 points\n\n\nProblem StatementYou are going out for a walk, when you suddenly encounter N monsters. Each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. A monster will vanish immediately when its health drops to 0 or below.\nFortunately, you are a skilled magician, capable of causing explosions that damage monsters. In one explosion, you can damage monsters as follows:\n\nSelect an alive monster, and cause an explosion centered at that monster. The health of the monster at the center of the explosion will decrease by A, and the health of each of the other monsters will decrease by B. Here, A and B are predetermined parameters, and A > B holds.\n\nAt least how many explosions do you need to cause in order to vanish all the monsters?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2264 N \u2264 10^5\n1 \u2264 B < A \u2264 10^9\n1 \u2264 h_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN A B\nh_1\nh_2\n:\nh_N\n\n\n\n\n\nOutputPrint the minimum number of explosions that needs to be caused in order to vanish all the monsters.\n\n\n\n\n\n\nSample Input 14 5 3\n8\n7\n4\n2\n\n\n\n\n\nSample Output 12\n\nYou can vanish all the monsters in two explosion, as follows:\n\nFirst, cause an explosion centered at the monster with 8 health. The healths of the four monsters become 3, 4, 1 and -1, respectively, and the last monster vanishes.\nSecond, cause an explosion centered at the monster with 4 health remaining. The healths of the three remaining monsters become 0, -1 and -2, respectively, and all the monsters are now vanished.\n\n\n\n\n\n\nSample Input 22 10 4\n20\n20\n\n\n\n\n\nSample Output 24\n\nYou need to cause two explosions centered at each monster, for a total of four.\n\n\n\n\n\nSample Input 35 2 1\n900000000\n900000000\n1000000000\n1000000000\n1000000000\n\n\n\n\n\nSample Output 3800000000"}
{"id": "p03703", "problem": "Score : 600 points\n\n\nProblem StatementYou are given an integer sequence of length N, a = {a_1, a_2, \u2026, a_N}, and an integer K.\na has N(N+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, \u2026, a_r} (1 \u2264 l \u2264 r \u2264 N). Among them, how many have an arithmetic mean that is greater than or equal to K?\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2264 N \u2264 2 \\times 10^5\n1 \u2264 K \u2264 10^9\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\na_1\na_2\n:\na_N\n\n\n\n\n\nOutputPrint the number of the non-empty contiguous subsequences with an arithmetic mean that is greater than or equal to K.\n\n\n\n\n\n\nSample Input 13 6\n7\n5\n7\n\n\n\n\n\nSample Output 15\n\nAll the non-empty contiguous subsequences of a are listed below:\n\n{a_1} = {7}\n{a_1, a_2} = {7, 5}\n{a_1, a_2, a_3} = {7, 5, 7}\n{a_2} = {5}\n{a_2, a_3} = {5, 7}\n{a_3} = {7}\n\nTheir means are 7, 6, 19/3, 5, 6 and 7, respectively, and five among them are 6 or greater. Note that {a_1} and {a_3} are indistinguishable by the values of their elements, but we count them individually.\n\n\n\n\n\nSample Input 21 2\n1\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 37 26\n10\n20\n30\n40\n30\n20\n10\n\n\n\n\n\nSample Output 313"}
{"id": "p03704", "problem": "Score : 800 points\n\n\nProblem StatementFor a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). For example, rev(123) = 321 and rev(4000) = 4.\nYou are given a positive integer D. How many positive integers N satisfy rev(N) = N + D?\n\n\n\n\nConstraints\nD is an integer.\n1 \u2264 D < 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nD\n\n\n\n\n\nOutputPrint the number of the positive integers N such that rev(N) = N + D.\n\n\n\n\n\n\nSample Input 163\n\n\n\n\n\nSample Output 12\n\nThere are two positive integers N such that rev(N) = N + 63: N = 18 and 29.\n\n\n\n\n\nSample Input 275\n\n\n\n\n\nSample Output 20\n\nThere are no positive integers N such that rev(N) = N + 75.\n\n\n\n\n\nSample Input 3864197532\n\n\n\n\n\nSample Output 31920"}
{"id": "p03705", "problem": "Score : 200 points\n\n\nProblem StatementSnuke has N integers. Among them, the smallest is A, and the largest is B.\nWe are interested in the sum of those N integers. How many different possible sums there are?\n\n\n\n\nConstraints\n1 \u2264 N,A,B \u2264 10^9\nA and B are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN A B\n\n\n\n\n\nOutputPrint the number of the different possible sums.\n\n\n\n\n\n\nSample Input 14 4 6\n\n\n\n\n\nSample Output 15\n\nThere are five possible sums: 18=4+4+4+6, 19=4+4+5+6, 20=4+5+5+6, 21=4+5+6+6 and 22=4+6+6+6.\n\n\n\n\n\nSample Input 25 4 3\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 31 7 10\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 41 3 3\n\n\n\n\n\nSample Output 41"}
{"id": "p03706", "problem": "Score : 400 points\n\n\nProblem StatementSkenu constructed a building that has N floors. The building has an elevator that stops at every floor.\nThere are buttons to control the elevator, but Skenu thoughtlessly installed only one button on each floor - up or down.\nThis means that, from each floor, one can only go in one direction.\nIf S_i is U, only \"up\" button is installed on the i-th floor and one can only go up; if S_i is D, only \"down\" button is installed on the i-th floor and one can only go down.\nThe residents have no choice but to go to their destination floors via other floors if necessary.\nFind the sum of the following numbers over all ordered pairs of two floors (i,j): the minimum number of times one needs to take the elevator to get to the j-th floor from the i-th floor.\n\n\n\n\nConstraints\n2 \u2264 |S| \u2264 10^5\nS_i is either U or D.\nS_1 is U.\nS_{|S|} is D.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS_1S_2...S_{|S|}\n\n\n\n\n\nOutputPrint the sum of the following numbers over all ordered pairs of two floors (i,j): the minimum number of times one needs to take the elevator to get to the j-th floor from the i-th floor.\n\n\n\n\n\n\nSample Input 1UUD\n\n\n\n\n\nSample Output 17\n\nFrom the 1-st floor, one can get to the 2-nd floor by taking the elevator once.\nFrom the 1-st floor, one can get to the 3-rd floor by taking the elevator once.\nFrom the 2-nd floor, one can get to the 1-st floor by taking the elevator twice.\nFrom the 2-nd floor, one can get to the 3-rd floor by taking the elevator once.\nFrom the 3-rd floor, one can get to the 1-st floor by taking the elevator once.\nFrom the 3-rd floor, one can get to the 2-nd floor by taking the elevator once.\nThe sum of these numbers of times, 7, should be printed.\n\n\n\n\n\nSample Input 2UUDUUDUD\n\n\n\n\n\nSample Output 277"}
{"id": "p03707", "problem": "Score : 700 points\n\n\nProblem StatementNuske has a grid with N rows and M columns of squares. The rows are numbered 1 through N from top to bottom, and the columns are numbered 1 through M from left to right.\nEach square in the grid is painted in either blue or white. If S_{i,j} is 1, the square at the i-th row and j-th column is blue; if S_{i,j} is 0, the square is white.\nFor every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once.\nPhantom Thnook, Nuske's eternal rival, gives Q queries to Nuske. The i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the x_{i,1}-th row, x_{i,2}-th row, y_{i,1}-th column and y_{i,2}-th column is cut out, how many connected components consisting of blue squares there are in the region?\nProcess all the queries.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 2000\n1 \u2264 Q \u2264 200000\nS_{i,j} is either 0 or 1.\nS_{i,j} satisfies the condition explained in the statement.\n1 \u2264 x_{i,1} \u2264 x_{i,2} \u2264 N(1 \u2264 i \u2264 Q)\n1 \u2264 y_{i,1} \u2264 y_{i,2} \u2264 M(1 \u2264 i \u2264 Q)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M Q\nS_{1,1}..S_{1,M}\n:\nS_{N,1}..S_{N,M}\nx_{1,1} y_{i,1} x_{i,2} y_{i,2}\n:\nx_{Q,1} y_{Q,1} x_{Q,2} y_{Q,2}\n\n\n\n\n\nOutputFor each query, print the number of the connected components consisting of blue squares in the region.\n\n\n\n\n\n\nSample Input 13 4 4\n1101\n0110\n1101\n1 1 3 4\n1 1 3 1\n2 2 3 4\n1 2 2 4\n\n\n\n\n\nSample Output 13\n2\n2\n2\n\n\nIn the first query, the whole grid is specified. There are three components consisting of blue squares, and thus 3 should be printed.\nIn the second query, the region within the red frame is specified. There are two components consisting of blue squares, and thus 2 should be printed.\nNote that squares that belong to the same component in the original grid may belong to different components.\n\n\n\n\n\nSample Input 25 5 6\n11010\n01110\n10101\n11101\n01010\n1 1 5 5\n1 2 4 5\n2 3 3 4\n3 3 3 3\n3 1 3 5\n1 1 3 4\n\n\n\n\n\nSample Output 23\n2\n1\n1\n3\n2"}
{"id": "p03708", "problem": "Score : 900 points\n\n\nProblem StatementNukes has an integer that can be represented as the bitwise OR of one or more integers between A and B (inclusive).\nHow many possible candidates of the value of Nukes's integer there are?\n\n\n\n\nConstraints\n1 \u2264 A \u2264 B < 2^{60}\nA and B are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA\nB\n\n\n\n\n\nOutputPrint the number of possible candidates of the value of Nukes's integer.\n\n\n\n\n\n\nSample Input 17\n9\n\n\n\n\n\nSample Output 14\n\nIn this case, A=7 and B=9. There are four integers that can be represented as the bitwise OR of a non-empty subset of {7, 8, 9}: 7, 8, 9 and 15.\n\n\n\n\n\nSample Input 265\n98\n\n\n\n\n\nSample Output 263\n\n\n\n\n\n\nSample Input 3271828182845904523\n314159265358979323\n\n\n\n\n\nSample Output 368833183630578410"}
{"id": "p03709", "problem": "Score : 1200 points\n\n\nProblem StatementTakahashi is an expert of Clone Jutsu, a secret art that creates copies of his body.\nOn a number line, there are N copies of Takahashi, numbered 1 through N.\nThe i-th copy is located at position X_i and starts walking with velocity V_i in the positive direction at time 0.\nKenus is a master of Transformation Jutsu, and not only can he change into a person other than himself, but he can also transform another person into someone else.\nKenus can select some of the copies of Takahashi at time 0, and transform them into copies of Aoki, another Ninja.\nThe walking velocity of a copy does not change when it transforms.\nFrom then on, whenever a copy of Takahashi and a copy of Aoki are at the same coordinate, that copy of Takahashi transforms into a copy of Aoki.\nAmong the 2^N ways to transform some copies of Takahashi into copies of Aoki at time 0, in how many ways will all the copies of Takahashi become copies of Aoki after a sufficiently long time?\nFind the count modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 200000\n1 \u2264 X_i,V_i \u2264 10^9(1 \u2264 i \u2264 N)\nX_i and V_i are integers.\nAll X_i are distinct.\nAll V_i are distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nX_1 V_1\n:\nX_N V_N\n\n\n\n\n\nOutputPrint the number of the ways that cause all the copies of Takahashi to turn into copies of Aoki after a sufficiently long time, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n2 5\n6 1\n3 7\n\n\n\n\n\nSample Output 16\n\nAll copies of Takahashi will turn into copies of Aoki after a sufficiently long time if Kenus transforms one of the following sets of copies of Takahashi into copies of Aoki: (2), (3), (1,2), (1,3), (2,3) and (1,2,3).\n\n\n\n\n\nSample Input 24\n3 7\n2 9\n8 16\n10 8\n\n\n\n\n\nSample Output 29"}
{"id": "p03710", "problem": "Score : 1700 points\n\n\nProblem StatementKenus, the organizer of International Euclidean Olympiad, is seeking a pair of two integers that requires many steps to find its greatest common divisor using the Euclidean algorithm.\nYou are given Q queries. The i-th query is represented as a pair of two integers X_i and Y_i, and asks you the following: among all pairs of two integers (x,y) such that 1 \u2264 x \u2264 X_i and 1 \u2264 y \u2264 Y_i, find the maximum Euclidean step count (defined below), and how many pairs have the maximum step count, modulo 10^9+7.\nProcess all the queries. Here, the Euclidean step count of a pair of two non-negative integers (a,b) is defined as follows:\n\n(a,b) and (b,a) have the same Euclidean step count.\n(0,a) has a Euclidean step count of 0.\nIf a > 0 and a \u2264 b, let p and q be a unique pair of integers such that b=pa+q and 0 \u2264 q < a. Then, the Euclidean step count of (a,b) is the Euclidean step count of (q,a) plus 1.\n\n\n\n\n\nConstraints\n1 \u2264 Q \u2264 3 \u00d7 10^5\n1 \u2264 X_i,Y_i \u2264 10^{18}(1 \u2264 i \u2264 Q)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nQ\nX_1 Y_1\n:\nX_Q Y_Q\n\n\n\n\n\nOutputFor each query, print the maximum Euclidean step count, and the number of the pairs that have the maximum step count, modulo 10^9+7, with a space in between.\n\n\n\n\n\n\nSample Input 13\n4 4\n6 10\n12 11\n\n\n\n\n\nSample Output 12 4\n4 1\n4 7\n\nIn the first query, (2,3), (3,2), (3,4) and (4,3) have a Euclidean step count of 2. No pairs have a step count of more than 2.\nIn the second query, (5,8) has a Euclidean step count of 4.\nIn the third query, (5,8), (8,5), (7,11), (8,11), (11,7), (11,8), (12,7) have a Euclidean step count of 4.\n\n\n\n\n\nSample Input 210\n1 1\n2 2\n5 1000000000000000000\n7 3\n1 334334334334334334\n23847657 23458792534\n111111111 111111111\n7 7\n4 19\n9 10\n\n\n\n\n\nSample Output 21 1\n1 4\n4 600000013\n3 1\n1 993994017\n35 37447\n38 2\n3 6\n3 9\n4 2"}
{"id": "p03711", "problem": "Score : 100 points\n\n\nProblem StatementBased on some criterion, Snuke divided the integers from 1 through 12 into three groups as shown in the figure below.\nGiven two integers x and y (1 \u2264 x < y \u2264 12), determine whether they belong to the same group.\n\n\n\n\n\n\n\nConstraints\nx and y are integers.\n1 \u2264 x < y \u2264 12\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nx y\n\n\n\n\n\nOutputIf x and y belong to the same group, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 11 3\n\n\n\n\n\nSample Output 1Yes\n\n\n\n\n\n\nSample Input 22 4\n\n\n\n\n\nSample Output 2No"}
{"id": "p03712", "problem": "Score : 200 points\n\n\nProblem StatementYou are given a image with a height of H pixels and a width of W pixels.\nEach pixel is represented by a lowercase English letter.\nThe pixel at the i-th row from the top and j-th column from the left is a_{ij}.\nPut a box around this image and output the result. The box should consist of # and have a thickness of 1.\n\n\n\n\nConstraints\n1 \u2264 H, W \u2264 100\na_{ij} is a lowercase English letter.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\na_{11} ... a_{1W}\n:\na_{H1} ... a_{HW}\n\n\n\n\n\nOutputPrint the image surrounded by a box that consists of # and has a thickness of 1.\n\n\n\n\n\n\nSample Input 12 3\nabc\narc\n\n\n\n\n\nSample Output 1#####\n#abc#\n#arc#\n#####\n\n\n\n\n\n\nSample Input 21 1\nz\n\n\n\n\n\nSample Output 2###\n#z#\n###"}
{"id": "p03713", "problem": "Score : 400 points\n\n\nProblem StatementThere is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.\nSnuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}.\n\n\n\n\nConstraints\n2 \u2264 H, W \u2264 10^5\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\n\n\n\n\n\nOutputPrint the minimum possible value of S_{max} - S_{min}.\n\n\n\n\n\n\nSample Input 13 5\n\n\n\n\n\nSample Output 10\n\nIn the division below, S_{max} - S_{min} = 5 - 5 = 0.\n\n\n\n\n\n\n\n\nSample Input 24 5\n\n\n\n\n\nSample Output 22\n\nIn the division below, S_{max} - S_{min} = 8 - 6 = 2.\n\n\n\n\n\n\n\n\nSample Input 35 5\n\n\n\n\n\nSample Output 34\n\nIn the division below, S_{max} - S_{min} = 10 - 6 = 4.\n\n\n\n\n\n\n\n\nSample Input 4100000 2\n\n\n\n\n\nSample Output 41\n\n\n\n\n\n\nSample Input 5100000 100000\n\n\n\n\n\nSample Output 550000"}
{"id": "p03714", "problem": "Score : 500 points\n\n\nProblem StatementLet N be a positive integer.\nThere is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a').\nFind the maximum possible score of a'.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\nPartial Score\nIn the test set worth 300 points, N \u2264 1000.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{3N}\n\n\n\n\n\nOutputPrint the maximum possible score of a'.\n\n\n\n\n\n\nSample Input 12\n3 1 4 1 5 9\n\n\n\n\n\nSample Output 11\n\nWhen a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1.\n\n\n\n\n\nSample Input 21\n1 2 3\n\n\n\n\n\nSample Output 2-1\n\nFor example, when a_1 are removed, a' will be (2, 3), which has a score of 2 - 3 = -1.\n\n\n\n\n\nSample Input 33\n8 2 2 7 4 6 5 3 8\n\n\n\n\n\nSample Output 35\n\nFor example, when a_2, a_3 and a_9 are removed, a' will be (8, 7, 4, 6, 5, 3), which has a score of (8 + 7 + 4) - (6 + 5 + 3) = 5."}
{"id": "p03715", "problem": "Score : 400 points\n\n\nProblem StatementThere is a bar of chocolate with a height of H blocks and a width of W blocks.\nSnuke is dividing this bar into exactly three pieces.\nHe can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle.\nSnuke is trying to divide the bar as evenly as possible.\nMore specifically, he is trying to minimize S_{max} - S_{min}, where S_{max} is the area (the number of blocks contained) of the largest piece, and S_{min} is the area of the smallest piece.\nFind the minimum possible value of S_{max} - S_{min}.\n\n\n\n\nConstraints\n2 \u2264 H, W \u2264 10^5\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\n\n\n\n\n\nOutputPrint the minimum possible value of S_{max} - S_{min}.\n\n\n\n\n\n\nSample Input 13 5\n\n\n\n\n\nSample Output 10\n\nIn the division below, S_{max} - S_{min} = 5 - 5 = 0.\n\n\n\n\n\n\n\n\nSample Input 24 5\n\n\n\n\n\nSample Output 22\n\nIn the division below, S_{max} - S_{min} = 8 - 6 = 2.\n\n\n\n\n\n\n\n\nSample Input 35 5\n\n\n\n\n\nSample Output 34\n\nIn the division below, S_{max} - S_{min} = 10 - 6 = 4.\n\n\n\n\n\n\n\n\nSample Input 4100000 2\n\n\n\n\n\nSample Output 41\n\n\n\n\n\n\nSample Input 5100000 100000\n\n\n\n\n\nSample Output 550000"}
{"id": "p03716", "problem": "Score : 500 points\n\n\nProblem StatementLet N be a positive integer.\nThere is a numerical sequence of length 3N, a = (a_1, a_2, ..., a_{3N}).\nSnuke is constructing a new sequence of length 2N, a', by removing exactly N elements from a without changing the order of the remaining elements.\nHere, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a').\nFind the maximum possible score of a'.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 10^9\n\n\n\n\n\nPartial Score\nIn the test set worth 300 points, N \u2264 1000.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{3N}\n\n\n\n\n\nOutputPrint the maximum possible score of a'.\n\n\n\n\n\n\nSample Input 12\n3 1 4 1 5 9\n\n\n\n\n\nSample Output 11\n\nWhen a_2 and a_6 are removed, a' will be (3, 4, 1, 5), which has a score of (3 + 4) - (1 + 5) = 1.\n\n\n\n\n\nSample Input 21\n1 2 3\n\n\n\n\n\nSample Output 2-1\n\nFor example, when a_1 are removed, a' will be (2, 3), which has a score of 2 - 3 = -1.\n\n\n\n\n\nSample Input 33\n8 2 2 7 4 6 5 3 8\n\n\n\n\n\nSample Output 35\n\nFor example, when a_2, a_3 and a_9 are removed, a' will be (8, 7, 4, 6, 5, 3), which has a score of (8 + 7 + 4) - (6 + 5 + 3) = 5."}
{"id": "p03717", "problem": "Score : 800 points\n\n\nProblem StatementThere are N squares arranged in a row.\nThe squares are numbered 1, 2, ..., N, from left to right.\nSnuke is painting each square in red, green or blue.\nAccording to his aesthetic sense, the following M conditions must all be satisfied.\nThe i-th condition is:\n\nThere are exactly x_i different colors among squares l_i, l_i + 1, ..., r_i.\n\nIn how many ways can the squares be painted to satisfy all the conditions?\nFind the count modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 300\n1 \u2264 M \u2264 300\n1 \u2264 l_i \u2264 r_i \u2264 N\n1 \u2264 x_i \u2264 3\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nl_1 r_1 x_1\nl_2 r_2 x_2\n:\nl_M r_M x_M\n\n\n\n\n\nOutputPrint the number of ways to paint the squares to satisfy all the conditions, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 1\n1 3 3\n\n\n\n\n\nSample Output 16\n\nThe six ways are:\n\nRGB\nRBG\nGRB\nGBR\nBRG\nBGR\n\nwhere R, G and B correspond to red, green and blue squares, respectively.\n\n\n\n\n\nSample Input 24 2\n1 3 1\n2 4 2\n\n\n\n\n\nSample Output 26\n\nThe six ways are:\n\nRRRG\nRRRB\nGGGR\nGGGB\nBBBR\nBBBG\n\n\n\n\n\n\nSample Input 31 3\n1 1 1\n1 1 2\n1 1 3\n\n\n\n\n\nSample Output 30\n\nThere are zero ways.\n\n\n\n\n\nSample Input 48 10\n2 6 2\n5 5 1\n3 5 2\n4 7 3\n4 4 1\n2 3 1\n7 7 1\n1 5 2\n1 7 3\n3 4 2\n\n\n\n\n\nSample Output 4108"}
{"id": "p03718", "problem": "Score : 800 points\n\n\nProblem StatementThere is a pond with a rectangular shape.\nThe pond is divided into a grid with H rows and W columns of squares.\nWe will denote the square at the i-th row from the top and j-th column from the left by (i,\\ j).\nSome of the squares in the pond contains a lotus leaf floating on the water.\nOn one of those leaves, S, there is a frog trying to get to another leaf T.\nThe state of square (i,\\ j) is given to you by a character a_{ij}, as follows:\n\n. : A square without a leaf.\no : A square with a leaf floating on the water.\nS : A square with the leaf S.\nT : A square with the leaf T.\n\nThe frog will repeatedly perform the following action to get to the leaf T: \"jump to a leaf that is in the same row or the same column as the leaf where the frog is currently located.\"\nSnuke is trying to remove some of the leaves, other than S and T, so that the frog cannot get to the leaf T.\nDetermine whether this objective is achievable. If it is achievable, find the minimum necessary number of leaves to remove.\n\n\n\n\nConstraints\n2 \u2264 H, W \u2264 100\na_{ij} is ., o, S or T.\nThere is exactly one S among a_{ij}.\nThere is exactly one T among a_{ij}.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W\na_{11} ... a_{1W}\n:\na_{H1} ... a_{HW}\n\n\n\n\n\nOutputIf the objective is achievable, print the minimum necessary number of leaves to remove.\nOtherwise, print -1 instead.\n\n\n\n\n\n\nSample Input 13 3\nS.o\n.o.\no.T\n\n\n\n\n\nSample Output 12\n\nRemove the upper-right and lower-left leaves.\n\n\n\n\n\nSample Input 23 4\nS...\n.oo.\n...T\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 34 3\n.S.\n.o.\n.o.\n.T.\n\n\n\n\n\nSample Output 3-1\n\n\n\n\n\n\nSample Input 410 10\n.o...o..o.\n....o.....\n....oo.oo.\n..oooo..o.\n....oo....\n..o..o....\no..o....So\no....T....\n....o.....\n........oo\n\n\n\n\n\nSample Output 45"}
{"id": "p03719", "problem": "Score : 100 points\n\n\nProblem StatementYou are given three integers A, B and C.\nDetermine whether C is not less than A and not greater than B.\n\n\n\n\nConstraints\n-100\u2264A,B,C\u2264100 \nA, B and C are all integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nA B C\n\n\n\n\n\nOutputIf the condition is satisfied, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 11 3 2\n\n\n\n\n\nSample Output 1Yes\n\nC=2 is not less than A=1 and not greater than B=3, and thus the output should be Yes.\n\n\n\n\n\nSample Input 26 5 4\n\n\n\n\n\nSample Output 2No\n\nC=4 is less than A=6, and thus the output should be No.\n\n\n\n\n\nSample Input 32 2 2\n\n\n\n\n\nSample Output 3Yes"}
{"id": "p03720", "problem": "Score : 200 points\n\n\nProblem StatementThere are N cities and M roads.\nThe i-th road (1\u2264i\u2264M) connects two cities a_i and b_i (1\u2264a_i,b_i\u2264N) bidirectionally.\nThere may be more than one road that connects the same pair of two cities.\nFor each city, how many roads are connected to the city?\n\n\n\n\nConstraints\n2\u2264N,M\u226450\n1\u2264a_i,b_i\u2264N\na_i \u2260 b_i\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN M\na_1 b_1\n:  \na_M b_M\n\n\n\n\n\nOutputPrint the answer in N lines.\nIn the i-th line (1\u2264i\u2264N), print the number of roads connected to city i.\n\n\n\n\n\n\nSample Input 14 3\n1 2\n2 3\n1 4\n\n\n\n\n\nSample Output 12\n2\n1\n1\n\n\nCity 1 is connected to the 1-st and 3-rd roads.\nCity 2 is connected to the 1-st and 2-nd roads.\nCity 3 is connected to the 2-nd road.\nCity 4 is connected to the 3-rd road.\n\n\n\n\n\n\nSample Input 22 5\n1 2\n2 1\n1 2\n2 1\n1 2\n\n\n\n\n\nSample Output 25\n5\n\n\n\n\n\n\nSample Input 38 8\n1 2\n3 4\n1 5\n2 8\n3 7\n5 2\n4 1\n6 8\n\n\n\n\n\nSample Output 33\n3\n2\n2\n2\n1\n1\n2"}
{"id": "p03721", "problem": "Score : 300 points\n\n\nProblem StatementThere is an empty array.\nThe following N operations will be performed to insert integers into the array.\nIn the i-th operation (1\u2264i\u2264N), b_i copies of an integer a_i are inserted into the array.\nFind the K-th smallest integer in the array after the N operations.\nFor example, the 4-th smallest integer in the array \\{1,2,2,3,3,3\\} is 3.\n\n\n\n\nConstraints\n1\u2264N\u226410^5 \n1\u2264a_i,b_i\u226410^5 \n1\u2264K\u2264b_1\u2026+\u2026b_n\nAll input values are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN K\na_1 b_1\n:  \na_N b_N\n\n\n\n\n\nOutputPrint the K-th smallest integer in the array after the N operations.  \n\n\n\n\n\n\nSample Input 13 4\n1 1\n2 2\n3 3\n\n\n\n\n\nSample Output 13\n\nThe resulting array is the same as the one in the problem statement.\n\n\n\n\n\nSample Input 210 500000\n1 100000\n1 100000\n1 100000\n1 100000\n1 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000\n\n\n\n\n\nSample Output 21"}
{"id": "p03722", "problem": "Score : 400 points\n\n\nProblem StatementThere is a directed graph with N vertices and M edges.\nThe i-th edge (1\u2264i\u2264M) points from vertex a_i to vertex b_i, and has a weight c_i.\nWe will play the following single-player game using this graph and a piece.\nInitially, the piece is placed at vertex 1, and the score of the player is set to 0.\nThe player can move the piece as follows:\n\nWhen the piece is placed at vertex a_i, move the piece along the i-th edge to vertex b_i. After this move, the score of the player is increased by c_i.\n\nThe player can end the game only when the piece is placed at vertex N.\nThe given graph guarantees that it is possible to traverse from vertex 1 to vertex N.\nWhen the player acts optimally to maximize the score at the end of the game, what will the score be?\nIf it is possible to increase the score indefinitely, print inf.\n\n\n\n\nConstraints\n2\u2264N\u22641000 \n1\u2264M\u2264min(N(N-1),2000) \n1\u2264a_i,b_i\u2264N (1\u2264i\u2264M) \na_i\u2260b_i (1\u2264i\u2264M) \na_i\u2260a_j or b_i\u2260b_j (1\u2264i<j\u2264M) \n-10^9\u2264c_i\u226410^9 (1\u2264i\u2264M)\nc_i is an integer.\nIn the given graph, there exists a path from vertex 1 to vertex N.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:  \nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n\n\n\n\nOutputPrint the maximum possible score at the end of the game, if it is finite. If it is possible to increase the score indefinitely, print inf.  \n\n\n\n\n\n\nSample Input 13 3\n1 2 4\n2 3 3\n1 3 5\n\n\n\n\n\nSample Output 17\n\nThere are two ways to move the piece to vertex N=3:\n\nvertex 1 \u2192 vertex 2 \u2192 vertex 3 : score 4+3=7\nvertex 1 \u2192 vertex 3 : score 5\n\nThus, the maximum possible score at the end of the game is 7.\n\n\n\n\n\nSample Input 22 2\n1 2 1\n2 1 1\n\n\n\n\n\nSample Output 2inf\n\nIt is possible to increase the score indefinitely by alternating between vertex 1 and 2.\n\n\n\n\n\nSample Input 36 5\n1 2 -1000000000\n2 3 -1000000000\n3 4 -1000000000\n4 5 -1000000000\n5 6 -1000000000\n\n\n\n\n\nSample Output 3-5000000000"}
{"id": "p03723", "problem": "Score : 300 points\n\n\nProblem StatementTakahashi, Aoki and Snuke love cookies. They have A, B and C cookies, respectively. Now, they will exchange those cookies by repeating the action below:\n\nEach person simultaneously divides his cookies in half and gives one half to each of the other two persons.\n\nThis action will be repeated until there is a person with odd number of cookies in hand.\nHow many times will they repeat this action?\nNote that the answer may not be finite.\n\n\n\n\nConstraints\n1 \u2264 A,B,C \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C\n\n\n\n\n\nOutputPrint the number of times the action will be performed by the three people, if this number is finite.\nIf it is infinite, print -1 instead.\n\n\n\n\n\n\nSample Input 14 12 20\n\n\n\n\n\nSample Output 13\n\nInitially, Takahashi, Aoki and Snuke have 4, 12 and 20 cookies. Then,\n\nAfter the first action, they have 16, 12 and 8.\nAfter the second action, they have 10, 12 and 14.\nAfter the third action, they have 13, 12 and 11.\n\nNow, Takahashi and Snuke have odd number of cookies, and therefore the answer is 3.\n\n\n\n\n\nSample Input 214 14 14\n\n\n\n\n\nSample Output 2-1\n\n\n\n\n\n\nSample Input 3454 414 444\n\n\n\n\n\nSample Output 31"}
{"id": "p03724", "problem": "Score : 500 points\n\n\nProblem StatementTakahashi is not good at problems about trees in programming contests, and Aoki is helping him practice.\nFirst, Takahashi created a tree with N vertices numbered 1 through N, and wrote 0 at each edge.\nThen, Aoki gave him M queries. The i-th of them is as follows:\n\nIncrement the number written at each edge along the path connecting vertices a_i and b_i, by one.\n\nAfter Takahashi executed all of the queries, he told Aoki that, for every edge, the written number became an even number.\nHowever, Aoki forgot to confirm that the graph Takahashi created was actually a tree, and it is possible that Takahashi made a mistake in creating a tree or executing queries.\nDetermine whether there exists a tree that has the property mentioned by Takahashi.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n1 \u2264 M \u2264 10^5\n1 \u2264 a_i,b_i \u2264 N\na_i \u2260 b_i\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\na_1 b_1\n:\na_M b_M\n\n\n\n\n\nOutputPrint YES if there exists a tree that has the property mentioned by Takahashi; print NO otherwise.\n\n\n\n\n\n\nSample Input 14 4\n1 2\n2 4\n1 3\n3 4\n\n\n\n\n\nSample Output 1YES\n\nFor example, Takahashi's graph has the property mentioned by him if it has the following edges: 1-2, 1-3 and 1-4.\nIn this case, the number written at every edge will become 2.\n\n\n\n\n\nSample Input 25 5\n1 2\n3 5\n5 1\n3 4\n2 3\n\n\n\n\n\nSample Output 2NO"}
{"id": "p03725", "problem": "Score : 700 points\n\n\nProblem StatementTakahashi is locked within a building.\nThis building consists of H\u00d7W rooms, arranged in H rows and W columns.\nWe will denote the room at the i-th row and j-th column as (i,j). The state of this room is represented by a character A_{i,j}. If A_{i,j}= #, the room is locked and cannot be entered; if A_{i,j}= ., the room is not locked and can be freely entered.\nTakahashi is currently at the room where A_{i,j}= S, which can also be freely entered.\nEach room in the 1-st row, 1-st column, H-th row or W-th column, has an exit.\nEach of the other rooms (i,j) is connected to four rooms: (i-1,j), (i+1,j), (i,j-1) and (i,j+1).\nTakahashi will use his magic to get out of the building. In one cast, he can do the following:\n\nMove to an adjacent room at most K times, possibly zero. Here, locked rooms cannot be entered.\nThen, select and unlock at most K locked rooms, possibly zero. Those rooms will remain unlocked from then on.\n\nHis objective is to reach a room with an exit. Find the minimum necessary number of casts to do so.\nIt is guaranteed that Takahashi is initially at a room without an exit.\n\n\n\n\nConstraints\n3 \u2264 H \u2264 800\n3 \u2264 W \u2264 800\n1 \u2264 K \u2264 H\u00d7W\nEach A_{i,j} is # , .  or S.\nThere uniquely exists (i,j) such that A_{i,j}= S, and it satisfies 2 \u2264 i \u2264 H-1 and 2 \u2264 j \u2264 W-1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nH W K\nA_{1,1}A_{1,2}...A_{1,W}\n:\nA_{H,1}A_{H,2}...A_{H,W}\n\n\n\n\n\nOutputPrint the minimum necessary number of casts.\n\n\n\n\n\n\nSample Input 13 3 3\n#.#\n#S.\n###\n\n\n\n\n\nSample Output 11\n\nTakahashi can move to room (1,2) in one cast.\n\n\n\n\n\nSample Input 23 3 3\n###\n#S#\n###\n\n\n\n\n\nSample Output 22\n\nTakahashi cannot move in the first cast, but can unlock room (1,2).\nThen, he can move to room (1,2) in the next cast, achieving the objective in two casts.\n\n\n\n\n\nSample Input 37 7 2\n#######\n#######\n##...##\n###S###\n##.#.##\n###.###\n#######\n\n\n\n\n\nSample Output 32"}
{"id": "p03726", "problem": "Score : 900 points\n\n\nProblem StatementThere is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nInitially, each vertex is uncolored.\nTakahashi and Aoki is playing a game by painting the vertices. In this game, they alternately perform the following operation, starting from Takahashi:\n\nSelect a vertex that is not painted yet.\nIf it is Takahashi who is performing this operation, paint the vertex white; paint it black if it is Aoki.\n\nThen, after all the vertices are colored, the following procedure takes place:\n\nRepaint every white vertex that is adjacent to a black vertex, in black.\n\nNote that all such white vertices are repainted simultaneously, not one at a time.\nIf there are still one or more white vertices remaining, Takahashi wins; if all the vertices are now black, Aoki wins.\nDetermine the winner of the game, assuming that both persons play optimally.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n1 \u2264 a_i,b_i \u2264 N\na_i \u2260 b_i\nThe input graph is a tree.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputPrint First if Takahashi wins; print Second if Aoki wins.\n\n\n\n\n\n\nSample Input 13\n1 2\n2 3\n\n\n\n\n\nSample Output 1First\n\nBelow is a possible progress of the game:\n\nFirst, Takahashi paint vertex 2 white.\nThen, Aoki paint vertex 1 black.\nLastly, Takahashi paint vertex 3 white.\n\nIn this case, the colors of vertices 1, 2 and 3 after the final procedure are black, black and white, resulting in Takahashi's victory.\n\n\n\n\n\nSample Input 24\n1 2\n2 3\n2 4\n\n\n\n\n\nSample Output 2First\n\n\n\n\n\n\nSample Input 36\n1 2\n2 3\n3 4\n2 5\n5 6\n\n\n\n\n\nSample Output 3Second"}
{"id": "p03727", "problem": "Score : 1400 points\n\n\nProblem StatementThere is a tree with N vertices numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nInitially, each edge is painted blue.\nTakahashi will convert this blue tree into a red tree, by performing the following operation N-1 times:\n\nSelect a simple path that consists of only blue edges, and remove one of those edges.\nThen, span a new red edge between the two endpoints of the selected path.\n\nHis objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i.\nDetermine whether this is achievable.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n1 \u2264 a_i,b_i,c_i,d_i \u2264 N\na_i \u2260 b_i\nc_i \u2260 d_i\nBoth input graphs are trees.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\n\n\n\n\nOutputPrint YES if the objective is achievable; print NO otherwise.\n\n\n\n\n\n\nSample Input 13\n1 2\n2 3\n1 3\n3 2\n\n\n\n\n\nSample Output 1YES\n\nThe objective is achievable, as below:\n\nFirst, select the path connecting vertices 1 and 3, and remove a blue edge 1-2. Then, span a new red edge 1-3.\nNext, select the path connecting vertices 2 and 3, and remove a blue edge 2-3. Then, span a new red edge 2-3.\n\n\n\n\n\n\nSample Input 25\n1 2\n2 3\n3 4\n4 5\n3 4\n2 4\n1 4\n1 5\n\n\n\n\n\nSample Output 2YES\n\n\n\n\n\n\nSample Input 36\n1 2\n3 5\n4 6\n1 6\n5 1\n5 3\n1 4\n2 6\n4 3\n5 6\n\n\n\n\n\nSample Output 3NO"}
{"id": "p03728", "problem": "Score : 2400 points\n\n\nProblem StatementTakahashi loves sorting.\nHe has a permutation (p_1,p_2,...,p_N) of the integers from 1 through N. Now, he will repeat the following operation until the permutation becomes (1,2,...,N):\n\nFirst, we will define high and low elements in the permutation, as follows. The i-th element in the permutation is high if the maximum element between the 1-st and i-th elements, inclusive, is the i-th element itself, and otherwise the i-th element is low.\nThen, let a_1,a_2,...,a_k be the values of the high elements, and b_1,b_2,...,b_{N-k} be the values of the low elements in the current permutation, in the order they appear in it.\nLastly, rearrange the permutation into (b_1,b_2,...,b_{N-k},a_1,a_2,...,a_k).\n\nHow many operations are necessary until the permutation is sorted?\n\n\n\n\nConstraints\n1 \u2264 N \u2264 2\u00d710^5\n(p_1,p_2,...,p_N) is a permutation of the integers from 1 through N.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\np_1 p_2 ... p_N\n\n\n\n\n\nOutputPrint the number of operations that are necessary until the permutation is sorted.\n\n\n\n\n\n\nSample Input 15\n3 5 1 2 4\n\n\n\n\n\nSample Output 13\n\nThe initial permutation is (3,5,1,2,4), and each operation changes it as follows:\n\nIn the first operation, the 1-st and 2-nd elements are high, and the 3-rd, 4-th and 5-th are low. The permutation becomes: (1,2,4,3,5).\nIn the second operation, the 1-st, 2-nd, 3-rd and 5-th elements are high, and the 4-th is low. The permutation becomes: (3,1,2,4,5).\nIn the third operation, the 1-st, 4-th and 5-th elements are high, and the 2-nd and 3-rd and 5-th are low. The permutation becomes: (1,2,3,4,5).\n\n\n\n\n\n\nSample Input 25\n5 4 3 2 1\n\n\n\n\n\nSample Output 24\n\n\n\n\n\n\nSample Input 310\n2 10 5 7 3 6 4 9 8 1\n\n\n\n\n\nSample Output 36"}
{"id": "p03729", "problem": "Score : 100 points\n\n\nProblem StatementYou are given three strings A, B and C. Check whether they form a word chain.\nMore formally, determine whether both of the following are true:\n\nThe last character in A and the initial character in B are the same.\nThe last character in B and the initial character in C are the same.\n\nIf both are true, print YES. Otherwise, print NO.\n\n\n\n\nConstraints\nA, B and C are all composed of lowercase English letters (a - z).\n1 \u2264 |A|, |B|, |C| \u2264 10, where |A|, |B| and |C| are the lengths of A, B and C, respectively.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C\n\n\n\n\n\nOutputPrint YES or NO.\n\n\n\n\n\n\nSample Input 1rng gorilla apple\n\n\n\n\n\nSample Output 1YES\n\nThey form a word chain.\n\n\n\n\n\nSample Input 2yakiniku unagi sushi\n\n\n\n\n\nSample Output 2NO\n\nA and B form a word chain, but B and C do not.\n\n\n\n\n\nSample Input 3a a a\n\n\n\n\n\nSample Output 3YES\n\n\n\n\n\n\nSample Input 4aaaaaaaaab aaaaaaaaaa aaaaaaaaab\n\n\n\n\n\nSample Output 4NO"}
{"id": "p03730", "problem": "Score : 200 points\n\n\nProblem StatementWe ask you to select some number of positive integers, and calculate the sum of them.\nIt is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer.\nYour objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible.\nIf the objective is achievable, print YES. Otherwise, print NO.\n\n\n\n\nConstraints\n1 \u2264 A \u2264 100\n1 \u2264 B \u2264 100\n0 \u2264 C < B\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C\n\n\n\n\n\nOutputPrint YES or NO.\n\n\n\n\n\n\nSample Input 17 5 1\n\n\n\n\n\nSample Output 1YES\n\nFor example, if you select 7 and 14, the sum 21 is congruent to 1 modulo 5.\n\n\n\n\n\nSample Input 22 2 1\n\n\n\n\n\nSample Output 2NO\n\nThe sum of even numbers, no matter how many, is never odd.\n\n\n\n\n\nSample Input 31 100 97\n\n\n\n\n\nSample Output 3YES\n\nYou can select 97, since you may select multiples of 1, that is, all integers.\n\n\n\n\n\nSample Input 440 98 58\n\n\n\n\n\nSample Output 4YES\n\n\n\n\n\n\nSample Input 577 42 36\n\n\n\n\n\nSample Output 5NO"}
{"id": "p03731", "problem": "Score : 300 points\n\n\nProblem StatementIn a public bath, there is a shower which emits water for T seconds when the switch is pushed.\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds.\nN people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it.\nHow long will the shower emit water in total?\n\n\n\n\nConstraints\n1 \u2264 N \u2264 200,000\n1 \u2264 T \u2264 10^9\n0 = t_1 < t_2 < t_3 < , ..., < t_{N-1} < t_N \u2264 10^9\nT and each t_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN T\nt_1 t_2 ... t_N\n\n\n\n\n\nOutputAssume that the shower will emit water for a total of X seconds. Print X.\n\n\n\n\n\n\nSample Input 12 4\n0 3\n\n\n\n\n\nSample Output 17\n\nThree seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds.\n\n\n\n\n\nSample Input 22 4\n0 5\n\n\n\n\n\nSample Output 28\n\nOne second after the shower stops emission of water triggered by the first person, the switch is pushed again.\n\n\n\n\n\nSample Input 34 1000000000\n0 1000 1000000 1000000000\n\n\n\n\n\nSample Output 32000000000\n\n\n\n\n\n\nSample Input 41 1\n0\n\n\n\n\n\nSample Output 41\n\n\n\n\n\n\nSample Input 59 10\n0 3 5 7 100 110 200 300 311\n\n\n\n\n\nSample Output 567"}
{"id": "p03732", "problem": "Score : 400 points\n\n\nProblem StatementYou have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i.\nYou will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W.\nYour objective is to maximize the total value of the selected items.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n1 \u2264 W \u2264 10^9\n1 \u2264 w_i \u2264 10^9\nFor each i = 2,3,...,N, w_1 \u2264 w_i \u2264 w_1 + 3.\n1 \u2264 v_i \u2264 10^7\nW, each w_i and v_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN W\nw_1 v_1\nw_2 v_2\n:\nw_N v_N\n\n\n\n\n\nOutputPrint the maximum possible total value of the selected items.\n\n\n\n\n\n\nSample Input 14 6\n2 1\n3 4\n4 10\n3 4\n\n\n\n\n\nSample Output 111\n\nThe first and third items should be selected.\n\n\n\n\n\nSample Input 24 6\n2 1\n3 7\n4 10\n3 6\n\n\n\n\n\nSample Output 213\n\nThe second and fourth items should be selected.\n\n\n\n\n\nSample Input 34 10\n1 100\n1 100\n1 100\n1 100\n\n\n\n\n\nSample Output 3400\n\nYou can take everything.\n\n\n\n\n\nSample Input 44 1\n10 100\n10 100\n10 100\n10 100\n\n\n\n\n\nSample Output 40\n\nYou can take nothing."}
{"id": "p03733", "problem": "Score : 300 points\n\n\nProblem StatementIn a public bath, there is a shower which emits water for T seconds when the switch is pushed.\nIf the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for T seconds.\nNote that it does not mean that the shower emits water for T additional seconds.\nN people will push the switch while passing by the shower.\nThe i-th person will push the switch t_i seconds after the first person pushes it.\nHow long will the shower emit water in total?\n\n\n\n\nConstraints\n1 \u2264 N \u2264 200,000\n1 \u2264 T \u2264 10^9\n0 = t_1 < t_2 < t_3 < , ..., < t_{N-1} < t_N \u2264 10^9\nT and each t_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN T\nt_1 t_2 ... t_N\n\n\n\n\n\nOutputAssume that the shower will emit water for a total of X seconds. Print X.\n\n\n\n\n\n\nSample Input 12 4\n0 3\n\n\n\n\n\nSample Output 17\n\nThree seconds after the first person pushes the water, the switch is pushed again and the shower emits water for four more seconds, for a total of seven seconds.\n\n\n\n\n\nSample Input 22 4\n0 5\n\n\n\n\n\nSample Output 28\n\nOne second after the shower stops emission of water triggered by the first person, the switch is pushed again.\n\n\n\n\n\nSample Input 34 1000000000\n0 1000 1000000 1000000000\n\n\n\n\n\nSample Output 32000000000\n\n\n\n\n\n\nSample Input 41 1\n0\n\n\n\n\n\nSample Output 41\n\n\n\n\n\n\nSample Input 59 10\n0 3 5 7 100 110 200 300 311\n\n\n\n\n\nSample Output 567"}
{"id": "p03734", "problem": "Score : 400 points\n\n\nProblem StatementYou have N items and a bag of strength W.\nThe i-th item has a weight of w_i and a value of v_i.\nYou will select some of the items and put them in the bag.\nHere, the total weight of the selected items needs to be at most W.\nYour objective is to maximize the total value of the selected items.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n1 \u2264 W \u2264 10^9\n1 \u2264 w_i \u2264 10^9\nFor each i = 2,3,...,N, w_1 \u2264 w_i \u2264 w_1 + 3.\n1 \u2264 v_i \u2264 10^7\nW, each w_i and v_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN W\nw_1 v_1\nw_2 v_2\n:\nw_N v_N\n\n\n\n\n\nOutputPrint the maximum possible total value of the selected items.\n\n\n\n\n\n\nSample Input 14 6\n2 1\n3 4\n4 10\n3 4\n\n\n\n\n\nSample Output 111\n\nThe first and third items should be selected.\n\n\n\n\n\nSample Input 24 6\n2 1\n3 7\n4 10\n3 6\n\n\n\n\n\nSample Output 213\n\nThe second and fourth items should be selected.\n\n\n\n\n\nSample Input 34 10\n1 100\n1 100\n1 100\n1 100\n\n\n\n\n\nSample Output 3400\n\nYou can take everything.\n\n\n\n\n\nSample Input 44 1\n10 100\n10 100\n10 100\n10 100\n\n\n\n\n\nSample Output 40\n\nYou can take nothing."}
{"id": "p03735", "problem": "Score : 700 points\n\n\nProblem StatementThere are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively.\nFor each of these bags, you will paint one of the balls red, and paint the other blue.\nAfterwards, the 2N balls will be classified according to color.\nThen, we will define the following:\n\nR_{max}: the maximum integer written on a ball painted in red\nR_{min}: the minimum integer written on a ball painted in red\nB_{max}: the maximum integer written on a ball painted in blue\nB_{min}: the minimum integer written on a ball painted in blue\n\nFind the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).\n\n\n\n\nConstraints\n1 \u2264 N \u2264 200,000\n1 \u2264 x_i, y_i \u2264 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the minimum possible value.\n\n\n\n\n\n\nSample Input 13\n1 2\n3 4\n5 6\n\n\n\n\n\nSample Output 115\n\nThe optimal solution is to paint the balls with x_1, x_2, y_3 red, and paint the balls with y_1, y_2, x_3 blue.\n\n\n\n\n\nSample Input 23\n1010 10\n1000 1\n20 1020\n\n\n\n\n\nSample Output 2380\n\n\n\n\n\n\nSample Input 32\n1 1\n1000000000 1000000000\n\n\n\n\n\nSample Output 3999999998000000001"}
{"id": "p03736", "problem": "Score : 900 points\n\n\nProblem StatementThere are N squares in a row. The squares are numbered 1, 2, ..., N from left to right.\nYou have two pieces, initially placed on square A and B, respectively.\nYou will be asked to process Q queries of the following kind, in the order received:\n\nGiven an integer x_i, move one of the two pieces of your choice to square x_i.\n\nHere, it takes you one second to move a piece one square.\nThat is, the time it takes to move a piece from square X to Y is |X-Y| seconds.\nYour objective is to process all the queries in the shortest possible time.\nYou may only move the pieces in response to queries, and you may not move both pieces at the same time.\nAlso, it is not allowed to rearrange the order in which queries are given.\nIt is, however, allowed to have both pieces in the same square at the same time.\n\n\n\n\nConstraints\n1 \u2264 N, Q \u2264 200,000\n1 \u2264 A, B \u2264 N\n1 \u2264 x_i \u2264 N\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN Q A B\nx_1 x_2 ... x_Q\n\n\n\n\n\nOutputLet the shortest possible time to process all the queries be X seconds. Print X.\n\n\n\n\n\n\nSample Input 18 3 1 8\n3 5 1\n\n\n\n\n\nSample Output 17\n\nAll the queries can be processed in seven seconds, by:\n\nmoving the piece at square 1 to 3\nmoving the piece at square 8 to 5\nmoving the piece at square 3 to 1\n\n\n\n\n\n\nSample Input 29 2 1 9\n5 1\n\n\n\n\n\nSample Output 24\n\nThe piece at square 9 should be moved first.\n\n\n\n\n\nSample Input 39 2 1 9\n5 9\n\n\n\n\n\nSample Output 34\n\nThe piece at square 1 should be moved first.\n\n\n\n\n\nSample Input 411 16 8 1\n1 1 5 1 11 4 5 2 5 3 3 3 5 5 6 7\n\n\n\n\n\nSample Output 421"}
{"id": "p03737", "problem": "Score : 100 points\n\n\nProblem StatementYou are given three words s_1, s_2 and s_3, each composed of lowercase English letters, with spaces in between.\nPrint the acronym formed from the uppercased initial letters of the words.\n\n\n\n\nConstraints\ns_1, s_2 and s_3 are composed of lowercase English letters.\n1 \u2264 |s_i| \u2264 10 (1\u2264i\u22643)\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\ns_1 s_2 s_3\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 1atcoder beginner contest\n\n\n\n\n\nSample Output 1ABC\n\nThe initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.\n\n\n\n\n\nSample Input 2resident register number\n\n\n\n\n\nSample Output 2RRN\n\n\n\n\n\n\nSample Input 3k nearest neighbor\n\n\n\n\n\nSample Output 3KNN\n\n\n\n\n\n\nSample Input 4async layered coding\n\n\n\n\n\nSample Output 4ALC"}
{"id": "p03738", "problem": "Score : 200 points\n\n\nProblem StatementYou are given two positive integers A and B. Compare the magnitudes of these numbers.\n\n\n\n\nConstraints\n1 \u2264 A, B \u2264 10^{100}\nNeither A nor B begins with a 0.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA\nB\n\n\n\n\n\nOutputPrint GREATER if A>B, LESS if A<B and EQUAL if A=B.\n\n\n\n\n\n\nSample Input 136\n24\n\n\n\n\n\nSample Output 1GREATER\n\nSince 36>24, print GREATER.\n\n\n\n\n\nSample Input 2850\n3777\n\n\n\n\n\nSample Output 2LESS\n\n\n\n\n\n\nSample Input 39720246\n22516266\n\n\n\n\n\nSample Output 3LESS\n\n\n\n\n\n\nSample Input 4123456789012345678901234567890\n234567890123456789012345678901\n\n\n\n\n\nSample Output 4LESS"}
{"id": "p03739", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one.\nAt least how many operations are necessary to satisfy the following conditions?\n\nFor every i (1\u2264i\u2264n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1\u2264i\u2264n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.\n\n\n\n\n\nConstraints\n2 \u2264 n \u2264 10^5\n|a_i| \u2264 10^9\nEach a_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_n\n\n\n\n\n\nOutputPrint the minimum necessary count of operations.\n\n\n\n\n\n\nSample Input 14\n1 -3 1 0\n\n\n\n\n\nSample Output 14\n\nFor example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions.\n\n\n\n\n\nSample Input 25\n3 -6 4 -5 7\n\n\n\n\n\nSample Output 20\n\nThe given sequence already satisfies the conditions.\n\n\n\n\n\nSample Input 36\n-1 4 3 2 -5 4\n\n\n\n\n\nSample Output 38"}
{"id": "p03740", "problem": "Score : 500 points\n\n\nProblem StatementAlice and Brown loves games. Today, they will play the following game.\nIn this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice:\n\nTake 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1\u2264i) can be freely chosen as long as there is a sufficient number of stones in the pile.\n\nThe player who becomes unable to perform the operation, loses the game.\nGiven X and Y, determine the winner of the game, assuming that both players play optimally.\n\n\n\n\nConstraints\n0 \u2264 X, Y \u2264 10^{18}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX Y\n\n\n\n\n\nOutputPrint the winner: either Alice or Brown.\n\n\n\n\n\n\nSample Input 12 1\n\n\n\n\n\nSample Output 1Brown\n\nAlice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory.\n\n\n\n\n\nSample Input 25 0\n\n\n\n\n\nSample Output 2Alice\n\n\n\n\n\n\nSample Input 30 0\n\n\n\n\n\nSample Output 3Brown\n\n\n\n\n\n\nSample Input 44 8\n\n\n\n\n\nSample Output 4Alice"}
{"id": "p03741", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one.\nAt least how many operations are necessary to satisfy the following conditions?\n\nFor every i (1\u2264i\u2264n), the sum of the terms from the 1-st through i-th term is not zero.\nFor every i (1\u2264i\u2264n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.\n\n\n\n\n\nConstraints\n2 \u2264 n \u2264 10^5\n|a_i| \u2264 10^9\nEach a_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_n\n\n\n\n\n\nOutputPrint the minimum necessary count of operations.\n\n\n\n\n\n\nSample Input 14\n1 -3 1 0\n\n\n\n\n\nSample Output 14\n\nFor example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions.\n\n\n\n\n\nSample Input 25\n3 -6 4 -5 7\n\n\n\n\n\nSample Output 20\n\nThe given sequence already satisfies the conditions.\n\n\n\n\n\nSample Input 36\n-1 4 3 2 -5 4\n\n\n\n\n\nSample Output 38"}
{"id": "p03742", "problem": "Score : 500 points\n\n\nProblem StatementAlice and Brown loves games. Today, they will play the following game.\nIn this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice:\n\nTake 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1\u2264i) can be freely chosen as long as there is a sufficient number of stones in the pile.\n\nThe player who becomes unable to perform the operation, loses the game.\nGiven X and Y, determine the winner of the game, assuming that both players play optimally.\n\n\n\n\nConstraints\n0 \u2264 X, Y \u2264 10^{18}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX Y\n\n\n\n\n\nOutputPrint the winner: either Alice or Brown.\n\n\n\n\n\n\nSample Input 12 1\n\n\n\n\n\nSample Output 1Brown\n\nAlice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory.\n\n\n\n\n\nSample Input 25 0\n\n\n\n\n\nSample Output 2Alice\n\n\n\n\n\n\nSample Input 30 0\n\n\n\n\n\nSample Output 3Brown\n\n\n\n\n\n\nSample Input 44 8\n\n\n\n\n\nSample Output 4Alice"}
{"id": "p03743", "problem": "Score : 900 points\n\n\nProblem StatementAlice lives on a line. Today, she will travel to some place in a mysterious vehicle.\nInitially, the distance between Alice and her destination is D. When she input a number x to the vehicle, it will travel in the direction of the destination by a distance of x if this move would shorten the distance between the vehicle and the destination, and it will stay at its position otherwise. Note that the vehicle may go past the destination when the distance between the vehicle and the destination is less than x.\nAlice made a list of N numbers. The i-th number in this list is d_i. She will insert these numbers to the vehicle one by one.\nHowever, a mischievous witch appeared. She is thinking of rewriting one number in the list so that Alice will not reach the destination after N moves.\nShe has Q plans to do this, as follows:\n\nRewrite only the q_i-th number in the list with some integer so that Alice will not reach the destination.\n\nWrite a program to determine whether each plan is feasible.\n\n\n\n\nConstraints\n1\u2264 N \u2264 5*10^5\n1\u2264 Q \u2264 5*10^5\n1\u2264 D \u2264 10^9\n1\u2264 d_i \u2264 10^9(1\u2264i\u2264N)\n1\u2264 q_i \u2264 N(1\u2264i\u2264Q)\nD and each d_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN D\nd_1 d_2 ... d_N\nQ\nq_1 q_2 ... q_Q\n\n\n\n\n\nOutputPrint Q lines. The i-th line should contain YES if the i-th plan is feasible, and NO otherwise.\n\n\n\n\n\n\nSample Input 14 10\n3 4 3 3\n2\n4 3\n\n\n\n\n\nSample Output 1NO\nYES\n\nFor the first plan, Alice will already arrive at the destination by the first three moves, and therefore the answer is NO.\nFor the second plan, rewriting the third number in the list with 5 will prevent Alice from reaching the destination as shown in the following figure, and thus the answer is YES.\n\n\n\n\n\n\nSample Input 25 9\n4 4 2 3 2\n5\n1 4 2 3 5\n\n\n\n\n\nSample Output 2YES\nYES\nYES\nYES\nYES\n\nAlice will not reach the destination as it is, and therefore all the plans are feasible.\n\n\n\n\n\nSample Input 36 15\n4 3 5 4 2 1\n6\n1 2 3 4 5 6\n\n\n\n\n\nSample Output 3NO\nNO\nYES\nNO\nNO\nYES"}
{"id": "p03744", "problem": "Score : 900 points\n\n\nProblem StatementYou are in charge of controlling a dam. The dam can store at most L liters of water. Initially, the dam is empty. Some amount of water flows into the dam every morning, and any amount of water may be discharged every night, but this amount needs to be set so that no water overflows the dam the next morning.\nIt is known that v_i liters of water at t_i degrees Celsius will flow into the dam on the morning of the i-th day.\nYou are wondering about the maximum possible temperature of water in the dam at noon of each day, under the condition that there needs to be exactly L liters of water in the dam at that time. For each i, find the maximum possible temperature of water in the dam at noon of the i-th day. Here, consider each maximization separately, that is, the amount of water discharged for the maximization of the temperature on the i-th day, may be different from the amount of water discharged for the maximization of the temperature on the j-th day (j\u2260i).\nAlso, assume that the temperature of water is not affected by anything but new water that flows into the dam. That is, when V_1 liters of water at T_1 degrees Celsius and V_2 liters of water at T_2 degrees Celsius are mixed together, they will become V_1+V_2 liters of water at \\frac{T_1*V_1+T_2*V_2}{V_1+V_2} degrees Celsius, and the volume and temperature of water are not affected by any other factors.\n\n\n\n\nConstraints\n1\u2264 N \u2264 5*10^5\n1\u2264 L \u2264 10^9\n0\u2264 t_i \u2264 10^9(1\u2264i\u2264N)\n1\u2264 v_i \u2264 L(1\u2264i\u2264N)\nv_1 = L\nL, each t_i and v_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN L\nt_1 v_1\nt_2 v_2\n:\nt_N v_N\n\n\n\n\n\nOutputPrint N lines. The i-th line should contain the maximum temperature such that it is possible to store L liters of water at that temperature in the dam at noon of the i-th day.\nEach of these values is accepted if the absolute or relative error is at most 10^{-6}.\n\n\n\n\n\n\nSample Input 13 10\n10 10\n20 5\n4 3\n\n\n\n\n\nSample Output 110.0000000\n15.0000000\n13.2000000\n\n\n\nOn the first day, the temperature of water in the dam is always 10 degrees: the temperature of the only water that flows into the dam on the first day.\n\n\n10 liters of water at 15 degrees of Celsius can be stored on the second day, by discharging 5 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second day.\n\n\n10 liters of water at 13.2 degrees of Celsius can be stored on the third day, by discharging 8 liters of water on the night of the first day, and mix the remaining water with the water that flows into the dam on the second and third days.\n\n\n\n\n\n\n\nSample Input 24 15\n0 15\n2 5\n3 6\n4 4\n\n\n\n\n\nSample Output 20.0000000\n0.6666667\n1.8666667\n2.9333333\n\n\n\n\n\n\nSample Input 34 15\n1000000000 15\n9 5\n8 6\n7 4\n\n\n\n\n\nSample Output 31000000000.0000000\n666666669.6666666\n400000005.0000000\n293333338.8666667\n\nAlthough the temperature of water may exceed 100 degrees Celsius, we assume that water does not vaporize."}
{"id": "p03745", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an array A of length N.\nYour task is to divide it into several contiguous subarrays.\nHere, all subarrays obtained must be sorted in either non-decreasing or non-increasing order.\nAt least how many subarrays do you need to divide A into?\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq A_i \\leq 10^9\nEach A_i is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the minimum possible number of subarrays after division of A.\n\n\n\n\n\n\nSample Input 16\n1 2 3 2 2 1\n\n\n\n\n\nSample Output 12\n\nOne optimal solution is to divide the array into [1,2,3] and [2,2,1].\n\n\n\n\n\nSample Input 29\n1 2 1 2 1 2 1 2 1\n\n\n\n\n\nSample Output 25\n\n\n\n\n\n\nSample Input 37\n1 2 3 2 1 999999999 1000000000\n\n\n\n\n\nSample Output 33"}
{"id": "p03746", "problem": "Score : 500 points\n\n\nProblem StatementYou are given a connected undirected simple graph, which has N vertices and M edges.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i connects vertices A_i and B_i.\nYour task is to find a path that satisfies the following conditions:\n\nThe path traverses two or more vertices.\nThe path does not traverse the same vertex more than once.\nA vertex directly connected to at least one of the endpoints of the path, is always contained in the path.\n\nIt can be proved that such a path always exists.\nAlso, if there are more than one solution, any of them will be accepted.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq M \\leq 10^5\n1 \\leq A_i < B_i \\leq N\nThe given graph is connected and simple (that is, for every pair of vertices, there is at most one edge that directly connects them).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nA_1 B_1\nA_2 B_2\n:\nA_M B_M\n\n\n\n\n\nOutputFind one path that satisfies the conditions, and print it in the following format.\nIn the first line, print the count of the vertices contained in the path.\nIn the second line, print a space-separated list of the indices of the vertices, in order of appearance in the path.\n\n\n\n\n\n\nSample Input 15 6\n1 3\n1 4\n2 3\n1 5\n3 5\n2 4\n\n\n\n\n\nSample Output 14\n2 3 1 4\n\nThere are two vertices directly connected to vertex 2: vertices 3 and 4.\nThere are also two vertices directly connected to vertex 4: vertices 1 and 2.\nHence, the path 2 \u2192 3 \u2192 1 \u2192 4 satisfies the conditions.\n\n\n\n\n\nSample Input 27 8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n3 5\n2 6\n\n\n\n\n\nSample Output 27\n1 2 3 4 5 6 7"}
{"id": "p03747", "problem": "Score : 700 points\n\n\nProblem StatementThere is a circle with a circumference of L.\nEach point on the circumference has a coordinate value, which represents the arc length from a certain reference point clockwise to the point.\nOn this circumference, there are N ants.\nThese ants are numbered 1 through N in order of increasing coordinate, and ant i is at coordinate X_i.\nThe N ants have just started walking.\nFor each ant i, you are given the initial direction W_i. Ant i is initially walking clockwise if W_i is 1; counterclockwise if W_i is 2.\nEvery ant walks at a constant speed of 1 per second.\nSometimes, two ants bump into each other.\nEach of these two ants will then turn around and start walking in the opposite direction.\nFor each ant, find its position after T seconds.\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 10^5\n1 \\leq L \\leq 10^9\n1 \\leq T \\leq 10^9\n0 \\leq X_1 < X_2 < ... < X_N \\leq L - 1\n1 \\leq W_i \\leq 2\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN L T\nX_1 W_1\nX_2 W_2\n:\nX_N W_N\n\n\n\n\n\nOutputPrint N lines.\nThe i-th line should contain the coordinate of ant i after T seconds. Here, each coordinate must be between 0 and L-1, inclusive.\n\n\n\n\n\n\nSample Input 13 8 3\n0 1\n3 2\n6 1\n\n\n\n\n\nSample Output 11\n3\n0\n\n1.5 seconds after the ants start walking, ant 1 and 2 bump into each other at coordinate 1.5.\n1 second after that, ant 1 and 3 bump into each other at coordinate 0.5.\n0.5 seconds after that, that is, 3 seconds after the ants start walking, ants 1, 2 and 3 are at coordinates 1, 3 and 0, respectively.\n\n\n\n\n\nSample Input 24 20 9\n7 2\n9 1\n12 1\n18 1\n\n\n\n\n\nSample Output 27\n18\n18\n1"}
{"id": "p03748", "problem": "Score : 900 points\n\n\nProblem StatementJoisino has a lot of red and blue bricks and a large box.\nShe will build a tower of these bricks in the following manner.\nFirst, she will pick a total of N bricks and put them into the box.\nHere, there may be any number of bricks of each color in the box, as long as there are N bricks in total.\nParticularly, there may be zero red bricks or zero blue bricks.\nThen, she will repeat an operation M times, which consists of the following three steps:\n\nTake out an arbitrary brick from the box.\nPut one red brick and one blue brick into the box.\nTake out another arbitrary brick from the box.\n\nAfter the M operations, Joisino will build a tower by stacking the 2 \\times M bricks removed from the box, in the order they are taken out.\nShe is interested in the following question: how many different sequences of colors of these 2 \\times M bricks are possible?\nWrite a program to find the answer.\nSince it can be extremely large, print the count modulo 10^9+7.\n\n\n\n\nConstraints\n1 \\leq N \\leq 3000\n1 \\leq M \\leq 3000\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the count of the different possible sequences of colors of 2 \\times M bricks that will be stacked, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 3\n\n\n\n\n\nSample Output 156\n\nA total of six bricks will be removed from the box. The only impossible sequences of colors of these bricks are the ones where the colors of the second, third, fourth and fifth bricks are all the same. Therefore, there are 2^6 - 2 \\times 2 \\times 2 = 56 possible sequences of colors.\n\n\n\n\n\nSample Input 21000 10\n\n\n\n\n\nSample Output 21048576\n\n\n\n\n\n\nSample Input 31000 3000\n\n\n\n\n\nSample Output 3693347555"}
{"id": "p03749", "problem": "Score : 1600 points\n\n\nProblem StatementJoisino has a bar of length N, which has M marks on it.\nThe distance from the left end of the bar to the i-th mark is X_i.\nShe will place several squares on this bar.\nHere, the following conditions must be met:\n\nOnly squares with integral length sides can be placed.\nEach square must be placed so that its bottom side touches the bar.\nThe bar must be completely covered by squares.\nThat is, no square may stick out of the bar, and no part of the bar may be left uncovered.\nThe boundary line of two squares may not be directly above a mark.\n\n\n\nExamples of arrangements that satisfy/violate the conditions\n\nThe beauty of an arrangement of squares is defined as the product of the areas of all the squares placed.\nJoisino is interested in the sum of the beauty over all possible arrangements that satisfy the conditions.\nWrite a program to find it.\nSince it can be extremely large, print the sum modulo 10^9+7.\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 10^9\n0 \\leq M \\leq 10^5\n1 \\leq X_1 < X_2 < ... < X_{M-1} < X_M \\leq N-1\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\nX_1 X_2 ... X_{M-1} X_M\n\n\n\n\n\nOutputPrint the sum of the beauty over all possible arrangements that satisfy the conditions, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 1\n2\n\n\n\n\n\nSample Output 113\n\nThere are two possible arrangements:\n\nPlace a square of side length 1 to the left, and place another square of side length 2 to the right\nPlace a square of side length 3\n\nThe sum of the beauty of these arrangements is (1 \\times 1 \\times 2 \\times 2) + (3 \\times 3) = 13.\n\n\n\n\n\nSample Input 25 2\n2 3\n\n\n\n\n\nSample Output 266\n\n\n\n\n\n\nSample Input 310 9\n1 2 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 3100\n\n\n\n\n\n\nSample Input 41000000000 0\n\n\n\n\n\n\nSample Output 4693316425"}
{"id": "p03750", "problem": "Score : 2000 points\n\n\nProblem StatementThere are N cards. The two sides of each of these cards are distinguishable.\nThe i-th of these cards has an integer A_i printed on the front side, and another integer B_i printed on the back side.\nWe will call the deck of these cards X.\nThere are also N+1 cards of another kind.\nThe i-th of these cards has an integer C_i printed on the front side, and nothing is printed on the back side.\nWe will call this another deck of cards Y.\nYou will play Q rounds of a game.\nEach of these rounds is played independently.\nIn the i-th round, you are given a new card. The two sides of this card are distinguishable.\nIt has an integer D_i printed on the front side, and another integer E_i printed on the back side.\nA new deck of cards Z is created by adding this card to X.\nThen, you are asked to form N+1 pairs of cards, each consisting of one card from Z and one card from Y.\nEach card must belong to exactly one of the pairs.\nAdditionally, for each card from Z, you need to specify which side to use.\nFor each pair, the following condition must be met:\n\n(The integer printed on the used side of the card from Z)  \\leq  (The integer printed on the card from Y)\n\nIf it is not possible to satisfy this condition regardless of how the pairs are formed and which sides are used, the score for the round will be -1.\nOtherwise, the score for the round will be the count of the cards from Z whose front side is used.\nFind the maximum possible score for each round.\n\n\n\n\nConstraints\nAll input values are integers.\n1 \\leq N \\leq 10^5\n1 \\leq Q \\leq 10^5\n1 \\leq A_i ,B_i ,C_i ,D_i ,E_i \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\nC_1 C_2 .. C_{N+1}\nQ\nD_1 E_1\nD_2 E_2\n:\nD_Q E_Q\n\n\n\n\n\nOutputFor each round, print the maximum possible score in its own line.\n\n\n\n\n\n\nSample Input 13\n4 1\n5 3\n3 1\n1 2 3 4\n3\n5 4\n4 3\n2 3\n\n\n\n\n\nSample Output 10\n1\n2\n\nFor example, in the third round, the cards in Z are (4,1),(5,3),(3,1),(2,3).\nThe score of 2 can be obtained by using front, back, back and front sides of them, and pair them with the fourth, third, first and second cards in Y, respectively.\nIt is not possible to obtain a score of 3 or greater, and thus the answer is 2.\n\n\n\n\n\nSample Input 25\n7 1\n9 7\n13 13\n11 8\n12 9\n16 7 8 6 9 11\n7\n6 11\n7 10\n9 3\n12 9\n18 16\n8 9\n10 15\n\n\n\n\n\nSample Output 24\n3\n3\n1\n-1\n3\n2\n\n\n\n\n\n\nSample Input 39\n89 67\n37 14\n6 1\n42 25\n61 22\n23 1\n63 60\n93 62\n14 2\n67 96 26 17 1 62 56 92 13 38\n11\n93 97\n17 93\n61 57\n88 62\n98 29\n49 1\n5 1\n1 77\n34 1\n63 27\n22 66\n\n\n\n\n\nSample Output 37\n9\n8\n7\n7\n9\n9\n10\n9\n7\n9"}
{"id": "p03751", "problem": "Max Score: 250 Points \n\nProblem Statement\n\t\t\t\t\tMr.X, who the handle name is T, looked at the list which written N handle names, S_1, S_2, ..., S_N. \n\t\t\t\t\tBut he couldn't see some parts of the list. Invisible part is denoted ?. \n\n\t\t\t\t\tPlease calculate all possible index of the handle name of Mr.X when you sort N+1 handle names (S_1, S_2, ..., S_N and T) in lexicographical order. \n\t\t\t\t\tNote: If there are pair of people with same handle name, either one may come first. \n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format.\n\nN\nS_1\nS_2\n :\nS_N\nT\n\n\n\n\n\nOutput\n\nCalculate the possible index and print in sorted order. The output should be separated with a space. Don't print a space after last number.\nPut a line break in the end.\n\n\n\nConstraints\n\n1 \u2264 N \u2264 10000\n1 \u2264 |S_i|, |T| \u2264 20 (|A| is the length of A.)\nS_i consists from lower-case alphabet and ?.\nT consists from lower-case alphabet.\n\n\n\nScoring\nSubtask 1 [ 130 points ]\n\nThere are no ?'s.\n\nSubtask 2 [ 120 points ]\n\nThere are no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n2\ntourist\npetr\ne\n\n\n\n\n\nSample Output 1\n\n1\n\n\n\n\n\n\t\t\t\t\tThere are no invisible part, so there are only one possibility.\n\t\t\t\t\tThe sorted handle names are e, petr, tourist, so e comes first.\n\n\n\nSample Input 2\n\n2\n?o?r?s?\n?et?\ne"}
{"id": "p03752", "problem": "Max Score: 350 Points \n\nProblem Statement\n\t\t\t\t\tThere are N buildings along the line. The i-th building from the left is colored in color i, and its height is currently a_i meters. \n\t\t\t\t\tChokudai is a mayor of the city, and he loves colorful thigs. And now he wants to see at least K buildings from the left. \n\n\t\t\t\t\tYou can increase height of buildings, but it costs 1 yens to increase 1 meters. It means you cannot make building that height is not integer. \n\t\t\t\t\tYou cannot decrease height of buildings. \n\t\t\t\t\tCalculate the minimum cost of satisfying Chokudai's objective. \n\t\t\t\t\tNote: \"Building i can see from the left\" means there are no j exists that (height of building j) \u2265 (height of building i) and j < i. \n\n\n\n\n\nInput Format\n\nN K\na_1 a_2 a_3 ... a_N\n\n\n\n\n\nOutput Format\n\t\t\t\t\t\tPrint the minimum cost in one line. In the end put a line break.\n\n\nConstraints\n\n1 \u2264 K \u2264 N \u2264 15\n1 \u2264 a_i \u2264 10^9\n\n\n\nScoring\n\t\t\t\t\t\tSubtask 1 [120 points] \n\nN = K\n\n\t\t\t\t\t\tSubtask 2 [90 points] \n\nN \u2264 5\na_i \u2264 7\n\n\t\t\t\t\t\tSubtask 3 [140 points] \n\nThere are no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n5 5\n3949 3774 3598 3469 3424\n\n\n\nSample Output 1\n\n1541\n\n\t\t\t\t\tThe optimal solution is (height of buildings from the left) = [3949, 3950, 3951, 3952, 3953].\n\n\n\n\nSample Input 2\n\n5 3\n7 4 2 6 4\n\n\n\nSample Output 2\n\n7\n\n\t\t\t\t\tThe optimal solution is (height of buildings from the left) = [7, 8, 2, 9, 4]."}
{"id": "p03753", "problem": "Max Score: 500 Points \n\nProblem Statement\n\t\t\t\t\tWe have a grid with n rows and 7 columns. We call it a calendar. The cell at i-th row and j-th column is denoted (i, j). \n\n\n\n\t\t\t\t\tInitially, each cell at (i, j) contains the integer 7i + j - 8, and each cell is white. \n\n\t\t\t\t\tSnuke likes painting, so he decided integer m, and did q operations with a calendar. \n\t\t\t\t\t\u30fbIn i-th operation, he paint black on the cell in which an integer is written such remainder of dividing by m is a_i. \n\n\t\t\t\t\tPlease count the number of connected white parts. \n\t\t\t\t\tNote that if two adjacent cells are white, the cells belong to the same connected part. \n\n\n\n\n\nInput Format\n\t\t\t\t\t\tThe input format is following:\n\nn m q\na_1 a_2 ... a_q\n\n\n\n\n\nOutput Format\n\t\t\t\t\t\tPrint the number of connected part in one line.\n\n\nConstraints\n\nn \u2264 10^{12}\n7n is divisible by m.\n1 \u2264 q \u2264 m \u2264 10^5\n0 \u2264 a_1 < a_2 < ... < a_q < m\n\n\n\nScoring\n\t\t\t\t\t\tSubtask 1 [100 points] \n\nn \u2264 100000.\n\n\t\t\t\t\t\tSubtask 2 [90 points] \n\nm is divisible by 7.\na_{i + 1} - a_i = 1.\n\n\t\t\t\t\t\tSubtask 3 [200 points] \n\nm is divisible by 7.\n\n\t\t\t\t\t\tSubtask 4 [110 points] \n\nThere are no additional constraints.\n\n\n\n\n\nSample Input 1\n\n7 7 3\n1 3 5\n\n\n\n\n\nSample Output 1\n\n4\n\n\t\t\t\t\t\tThe calendar looks like this: \n\n\n\n\n\n\n\n\nSample Input 2\n\n10 14 8\n5 6 7 8 9 10 11 12\n\n\n\n\n\nSample Output 2\n\n10\n\n\t\t\t\t\t\tThe calendar looks like this:"}
{"id": "p03754", "problem": "Max Score: $800$ Points \n\nProblem Statement\n\t\t\t\t\tThere is an undirected connected graph with $N$ vertices and $N-1$ edges. The i-th edge connects u_i and v_i.\n\n\t\t\t\t\tE869120 the coder moves in the graph as follows:\n\nHe move to adjacent vertex, but he can't a visit vertex two or more times.\nHe ends move when there is no way to move.\nOtherwise, he moves randomly. (equal probability) If he has $p$ way to move this turn, he choose each vertex with $1/p$ probability.\n\n\n\n\n\n\t\t\t\t\tCalculate the expected value of the number of turns, when E869120 starts from vertex i, for all i (1 \u2264 i \u2264 N). \n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format. \n\n\nN\nu_1 v_1\nu_2 v_2\n :\nu_{N-1} v_{N-1}\n\n\n\n\n\nOutput\n\t\t\t\t\t\tIn i-th (1 \u2264 i \u2264 N) line, print the expected vaule of the number of turns E869120 moves.\n\t\t\t\t\t\tThe relative error or absolute error of output should be within 10^{-6}. \n\n\nConstraints\n\n$1 \\le N \\le 150,000$\nThe graph is connected.\n\n\n\nSubtasks\nSubtask 1 [ $190$ points ]\n\nThere is no vertex which degree is more than 2.\nThis means the graph looks like a list.\n\n\nSubtask 2 [ $220$ points ]\n\n1 \u2264 N \u2264 1000.\n\n\nSubtask 3 [ $390$ points ]\n\nThere are no additional constraints.\n\n\n\n\n\n\n\nSample Input 1\n\n4\n1 2\n2 3\n2 4\n\n\n\n\n\nSample Output 1\n\n2.0\n1.0\n2.0\n2.0\n\n\n\n\nSample Input 2\n\n4\n1 2\n2 4\n4 3"}
{"id": "p03755", "problem": "Max Score: 1000 Points \n\nProblem Statement\n\t\t\t\t\tThere is a railroad company in Atcoder Kingdom, \"Atcoder Railroad\". \n\t\t\t\t\tThere are N + 1 stations numbered 0, 1, 2, ..., N along a railway. \n\t\t\t\t\tCurrently, two kinds of train are operated, local and express. \n\t\t\t\t\tA local train stops at every station, and it takes one minute from station i to i + 1, and vice versa. \n\t\t\t\t\tAn express train only stops at station S_0, S_1, S_2, ..., S_{K-1} (0 = S_0 < S_1 < S_2 < ... < S_{K-1} = N). It takes one minute from station S_i to S_{i + 1}, and vice versa. \n\t\t\t\t\tBut the president of Atcoder Railroad, Semiexp said it is not very convenient so he planned to operate one more kind of train, \"semi-express\". \n\t\t\t\t\tThe stations where the semi-express stops (This is T_0, T_1, T_2, ..., T_{L-1}, 0 = T_0 < T_1 < T_2 < ... < T_{L-1} = N) have to follow following conditions: \n\t\t\t\t\tFrom station T_i to T_{i+1} takes 1 minutes, and vice versa. \n\nThe center of Atcoder Kingdom is station 0, and you have to be able to go to station i atmost X minutes.\nIf the express stops at the station, semi-express should stops at the station.\n\n\t\t\t\t\tPrint the number of ways of the set of the station where semi-express stops (sequence T). \n\t\t\t\t\tSince the answer can be large, print the number modulo 10^9 + 7. \n\n\n\n\n\nInput Format\n\nN K X\nS_0 S_1 S_2 ... S_{K-1}\n\n\n\n\n\nOutput Format\n\t\t\t\t\t\tPrint the number of ways of the set of the station where semi-express stops, mod 10^9 + 7 in one line. \n\t\t\t\t\t\tPrint \\n (line break) in the end. \n\n\nConstraints\n\n2 \u2264 K \u2264 2500.\n1 \u2264 X \u2264 2500.\nS_0 = 0, S_{K-1} = N.\n1 \u2264 S_{i + 1} - S_i \u2264 10000.\n\n\n\nScoring\n\t\t\t\t\t\tSubtask 1 [120 points] \n\nN, K, X \u2264 15.\n\n\t\t\t\t\t\tSubtask 2 [90 points] \n\nK, X \u2264 15.\nS_{i + 1} - S_i \u2264 15.\n\n\t\t\t\t\t\tSubtask 3 [260 points] \n\nK, X \u2264 40.\nS_{i + 1} - S_i \u2264 40.\n\n\t\t\t\t\t\tSubtask 4 [160 points] \n\nK, X \u2264 300.\nS_{i + 1} - S_i \u2264 300.\n\n\t\t\t\t\t\tSubtask 5 [370 points] \n\nThere are no additional constraints.\n\n\n\n\n\nSample Input 1\n\n7 2 3\n0 7\n\n\n\nSample Output 1\n\n55\n\n\t\t\t\t\t\tThe set of trains that stops station 0 and 7, and can't satisfy the condition is: \n[0, 7], [0, 1, 7], [0, 1, 2, 7], [0, 1, 6, 7], [0, 1, 2, 6, 7], [0, 1, 2, 3, 6, 7], [0, 1, 2, 5, 6, 7], [0, 1, 2, 3, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], 9 ways.\n\t\t\t\t\t\tTherefore, the number of ways is 2^6 - 9 = 55."}
{"id": "p03756", "problem": "Max Score: 1150 Points \nTask statement was updated.\n\nProblem Statement\n\t\t\t\t\tThere is a grid which size is $H \\times W$. the upper-left cell is $(1,1)$ and the lower-right cell is $(H,W)$.\n\t\t\t\t\tThere is $N$ arrows. Arrow which start point is $(a_i,b_i)$ of direction is $c_i$, and size is $d_i$. ($d_i$ may be negative)\n\t\t\t\t\tIt is guaranteed that there are no two arrow which start point is same.\n\n\t\t\t\t\tSothe want to move from cell $(sx,sy)$ to cell $(gx,gy)$ with arrows.\n\t\t\t\t\tBut it may not possible to move to goal in initial grid.\n\t\t\t\t\tSo, Snuke decided to change some arrows.\n\n\n\n\n\t\t\t\t\tSothe can change each arrow as follows:\n\nHe can't change the start point of this arrow.\nIt costs $e_i$ if he change the direction of this arrow.\nIt costs $f \\times |d_i-G|$ if he change d_i to $G$.\n\n\n\n\n\t\t\t\t\tHe can't add or erase arrows.\n\n\t\t\t\t\tPlease calculate the minimum cost that he can move to $(gx,gy)$. If he can't move to goal, please output '-1'.\n\t\t\t\t\tNote: Arrows are directed, and he can't turn in the middle of the arrow.\n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format. \n\n\nH W N f\nsx sy gx gy\na_1 b_1 c_1 d_1 e_1\na_2 b_2 c_2 d_2 e_2\n :   :   :\na_N b_N c_N d_N e_N\n\n\n\n\n\nOutput\n\nPlease output a single integer: The minimum cost to clear this puzzle.\nIf you can't achieve the objective, print -1.\nPrint \\n (line break) in the end.\n\n\n\nConstraints\n\n$1 \\le H,W \\le 100000$\n$1 \\le N \\le 70000$\n$1 \\le f,e_i \\le 1000000$\n$1 \\le d_i \\le 100000$\n$1 \\le a_i,sx,tx \\le H$\n$1 \\le b_i,sy,ty \\le W$\n$c_i$ is N, E, S, or W, which means North, East, South, West.\n\n\n\nSubtasks\nSubtask 1 [ 190 points ]\n\n$H=1$\n$W \\le 600$\n\nSubtask 2 [ 170 points ]\n\n$H,W \\le 80$\n\nSubtask 3 [ 360 points ]\n\n$H,W \\le 600$\n\nSubtask 4 [ 430 points ]\n\nThere is no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n4 4 2 2\n1 1 2 2\n1 1 E 1 1\n1 2 E 2 2\n\n\n\n\n\nSample Output 1\n\n4\n\n\n\n\n\n\n\n\nSample Input 2\n\n1 4 2 10\n1 1 1 4\n1 1 E 1 4\n1 3 W 1 4\n\n\n\n\n\nSample Output 2\n\n14\n\n\n\n\n\nSample Input 3\n\n1 8 4 9\n1 3 1 6\n1 1 E 7 2\n1 8 W 7 5\n1 3 W 2 5\n1 6 E 2 8\n\n\n\n\n\nSample Output 3\n\n14\n\n\n\n\nSample Input 4\n\n5 5 7 10\n1 2 4 5\n1 2 E 2 6\n2 3 S 2 7\n3 1 N 1 8\n3 2 W 1 10\n4 1 E 4 12\n5 5 N 3 13\n5 1 E 2 14"}
{"id": "p03757", "problem": "Max Score: 1450 Points \n\nProblem Statement\n\t\t\t\t\tThere are N workers in Atcoder company. Each worker is numbered 0 through N - 1, and the boss for worker i is p_i like a tree structure and the salary is currently a_i. (p_i < i, especially p_0 = -1 because worker 0 is a president) \n\t\t\t\t\tIn atcoder, the boss of boss of boss of ... (repeated k times) worker i called \"k-th upper boss\", and \"k-th lower subordinate\" called for vice versa. \n\n\t\t\t\t\tYou have to process Q queries for Atcoder: \n\nQuery 1: You are given v_i, d_i, x_i. Increase the salary of worker v_i, and all j-th (1 \u2264 j \u2264 d_i) lower subordinates by x_i.\nQuery 2: You are given v_i, d_i. Calculate the sum of salary of worker v_i and all j-th (1 \u2264 j \u2264 d_i) lower subordinates.\nQuery 3: You are given pr_i, ar_i. Now Atcoder has a new worker c! (c is the current number of workers) The boss is pr_i, and the first salary is ar_i.\n\n\t\t\t\t\tProcess all queries!!! \n\n\n\n\n\nInput Format\n\t\t\t\t\t\tLet the i-th query query_i, the input format is following:\n\nN Q\np_0 a_0\np_1 a_1\n :   :\np_{N - 1} a_{N - 1}\nquery_0\nquery_1\n :   :\nquery_{Q - 1}\n\n\t\t\t\t\t\tTHe format of query_i is one of the three format:\n\n1 v_i d_i x_i\n\n\n2 v_i d_i\n\n\n3 pr_i ar_i\n\n\n\n\n\nOutput Format\n\t\t\t\t\t\tPrint the result in one line for each query 2.\n\n\nConstraints\n\nN \u2264 400000\nQ \u2264 50000\np_i < i for all valid i.\nIn each question 1 or 2, worker v_i exists.\nd_i \u2264 400000\n0 \u2264 a_i, x_i \u2264 1000\n\n\n\nScoring\n\t\t\t\t\t\tSubtask 1 [170 points] \n\nN, Q \u2264 5000\n\n\t\t\t\t\t\tSubtask 2 [310 points] \n\np_i + 1 = i for all valid i.\n\n\t\t\t\t\t\tSubtask 3 [380 points] \n\nThere are no query 3.\n\n\t\t\t\t\t\tSubtask 4 [590 points] \n\nThere are no additional constraints.\n\n\n\n\n\nSample Input 1\n\n6 7\n-1 6\n0 5\n0 4\n2 3\n2 2\n1 1\n2 0 1\n1 0 2 1\n2 2 1\n3 3 3\n2 0 3\n3 3 4\n2 1 1\n\n\n\nSample Output 1\n\n15\n12\n30\n8\n\n\n\n\n\n\nSample Input 2\n\n7 9\n-1 1\n0 5\n0 7\n0 8\n1 3\n4 1\n5 1\n2 1 1\n2 1 2\n1 1 2 3\n1 4 1 1\n2 3 1\n2 0 2\n3 6 1\n3 7 11\n2 0 15\n\n\n\nSample Output 2\n\n8\n9\n8\n31\n49"}
{"id": "p03758", "problem": "Max Score: $1500$ Points \n\nProblem Statement\n\t\t\t\t\tHuge kingdom: $Atcoder$ contains $N$ towns and $N-1$ roads. This kingdom is connected.\n\n\t\t\t\t\tYou have to detect the kingdom's road.\n\t\t\t\t\tIn order to detect, You can ask this form of questions.\n\nYou can output a string $S$. Length of $S$ must be $N$ and The character of string $S$ must be represented by '$0$' or '$1$'.\nComputer paint the towns with white or black according to the character string you output.\nIf $i$-th character of $S$ is '0', computer paint town $i$ white.\nIf $i$-th character of $S$ is '1', computer paint town $i$ black.\nPlease consider an undirected graph $G$.\nFor each edge, computer do the following processing: If both ends painted black, computer adds this edge to $G$.\nComputer returns value $x$: sum of \"diameter of tree\"$^2$ about each connected components.\n\n\t\t\t\t\tFor example, when $S$=\"11001111\" and the kingdom's structure is this, computer returns 10.\n\n\n\n\t\t\t\t\tPlease detect the structure of $Atcoder$ as few questions as possible.\n\n\n\n\n\nInput, Output\n\t\t\t\t\t\tThis is a reactive problem.\n\t\t\t\t\t\tThe first input is as follows:\n\n\n$N$\n\t\t\t\t\t\t\n\n$N$ is number of towns in $Atcoder$.\n\n\n\t\t\t\t\t\tNext, you can ask questions.\n\t\t\t\t\t\tThe question must be in the form as follows:\n\n? $S$\n\t\t\t\t\t\t\n\t\t\t\t\t\t$S$ is a string. The mean of $S$ written in the problem statement. Length of $S$ must be $N$.\n\n\t\t\t\t\t\tThe answer of question is as follows:\n\n$x$\n\t\t\t\t\t\t\n\t\t\t\t\t\tThe mean of $x$ written in the problem statement.\n\n\t\t\t\t\t\tFinally, your program must output as follows:\n\n! $(a_1,b_1)$ $(a_2,b_2)$ $(a_3,b_3)$ \u2026 $(a_{N-1},b_{N-1})$\n\t\t\t\t\t\t\n\t\t\t\t\t\tThis output means your program detects all roads of $Atcoder$.\n\t\t\t\t\t\t$(a_i,b_i)$ means there is a road between $a_i$ and $b_i$.\n\n\t\t\t\t\t\tYou can output roads any order, but you must output the answer on a single line.\n\n\n\n\n\nConstraints\n\n$N$=200\n$Atcoder$ contains $N-1$ roads and this kingdom is connected.\nAll cases were made randomly.\n\n\n\n\n\nScoring\n\t\t\t\t\tLet the number of questions be $L$.\n\n\nIf $L > 20000$, $score$ = $0$ points\nIf $18000 < L \u2266 20000$, $score$ = $200$ points\nIf $5000 < L \u2266 18000$, $score$ = $650-L/40$ points\nIf $4000 < L \u2266 5000$, $score$ = $800-L/20$ points\nIf $2000 < L \u2266 4000$, $score$ = $1400-L/5$ points\nIf $1200 < L \u2266 2000$, $score$ = $1500-L/4$ points\nIf $700 < L \u2266 1200$, $score$ = $1850-L/2$ points\nIf $L \u2266 700$, $score$ = $1500$ points\n\n\n\t\t\t\t\tThere is $5$ cases, so points of each case is $score/5$.\n\n\n\n\nSample Input\n\t\t\t\t\tThis case is $N=4$. This case is not include because this is not $N=200$.\n\nN=4\n0 1\n1 2\n1 3\n\n\n\n\n\nSample Output\n\t\t\t\t\tSample interaction is as follows:\n\n\nInput from computer\nOutput\n\n\n4\n \n\n\n \n? 1111\n\n\n4\n \n\n\n \n? 1101\n\n\n4\n \n\n\n \n? 1001\n\n\n0\n \n\n\n \n? 1100\n\n\n1\n \n\n\n \n? 1011\n\n\n0\n \n\n\n \n! (0,1) (1,2) (1,3)\n\n\n\n\t\t\t\t\tIn this sample, structure of $Atcoder$ is as follows:\n\n\n\n\n\t\t\t\t\tThis question is not always meaningful."}
{"id": "p03759", "problem": "Score : 100 points\n\n\nProblem StatementThree poles stand evenly spaced along a line. Their heights are a, b and c meters, from left to right.\nWe will call the arrangement of the poles beautiful if the tops of the poles lie on the same line, that is, b-a = c-b.\nDetermine whether the arrangement of the poles is beautiful.\n\n\n\n\nConstraints\n1 \\leq a,b,c \\leq 100\na, b and c are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\na b c\n\n\n\n\n\nOutputPrint YES if the arrangement of the poles is beautiful; print NO otherwise.\n\n\n\n\n\n\nSample Input 12 4 6\n\n\n\n\n\nSample Output 1YES\n\nSince 4-2 = 6-4, this arrangement of poles is beautiful.\n\n\n\n\n\nSample Input 22 5 6\n\n\n\n\n\nSample Output 2NO\n\nSince 5-2 \\neq 6-5, this arrangement of poles is not beautiful.\n\n\n\n\n\nSample Input 33 2 1\n\n\n\n\n\nSample Output 3YES\n\nSince 1-2 = 2-3, this arrangement of poles is beautiful."}
{"id": "p03760", "problem": "Score : 200 points\n\n\nProblem StatementSnuke signed up for a new website which holds programming competitions.\nHe worried that he might forget his password, and he took notes of it.\nSince directly recording his password would cause him trouble if stolen,\nhe took two notes: one contains the characters at the odd-numbered positions, and the other contains the characters at the even-numbered positions.\nYou are given two strings O and E. O contains the characters at the odd-numbered positions retaining their relative order, and E contains the characters at the even-numbered positions retaining their relative order.\nRestore the original password.\n\n\n\n\nConstraints\nO and E consists of lowercase English letters (a - z).\n1 \\leq |O|,|E| \\leq 50\n|O| - |E| is either 0 or 1.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nO\nE\n\n\n\n\n\nOutputPrint the original password.\n\n\n\n\n\n\nSample Input 1xyz\nabc\n\n\n\n\n\nSample Output 1xaybzc\n\nThe original password is xaybzc. Extracting the characters at the odd-numbered positions results in xyz, and extracting the characters at the even-numbered positions results in abc.\n\n\n\n\n\nSample Input 2atcoderbeginnercontest\natcoderregularcontest\n\n\n\n\n\nSample Output 2aattccooddeerrbreeggiunlnaerrccoonntteesstt"}
{"id": "p03761", "problem": "Score : 300 points\n\n\nProblem StatementSnuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them.\n\n\n\n\nConstraints\n1 \\leq n \\leq 50\n1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\nS_i consists of lowercase English letters (a - z) for every i = 1, ..., n.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\nS_1\n...\nS_n\n\n\n\n\n\nOutputPrint the lexicographically smallest string among the longest strings that satisfy the condition.\nIf the answer is an empty string, print an empty line.\n\n\n\n\n\n\nSample Input 13\ncbaa\ndaacc\nacacac\n\n\n\n\n\nSample Output 1aac\n\nThe strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac.\n\n\n\n\n\nSample Input 23\na\naa\nb\n\n\n\n\n\nSample Output 2\n\nThe answer is an empty string."}
{"id": "p03762", "problem": "Score : 500 points\n\n\nProblem StatementOn a two-dimensional plane, there are m lines drawn parallel to the x axis, and n lines drawn parallel to the y axis.\nAmong the lines parallel to the x axis, the i-th from the bottom is represented by y = y_i.\nSimilarly, among the lines parallel to the y axis, the i-th from the left is represented by x = x_i.\nFor every rectangle that is formed by these lines, find its area, and print the total area modulo 10^9+7.\nThat is, for every quadruple (i,j,k,l) satisfying 1\\leq i < j\\leq n and 1\\leq k < l\\leq m, find the area of the rectangle formed by the lines x=x_i, x=x_j, y=y_k and y=y_l, and print the sum of these areas modulo 10^9+7.\n\n\n\n\nConstraints\n2 \\leq n,m \\leq 10^5\n-10^9 \\leq x_1 < ... < x_n \\leq 10^9\n-10^9 \\leq y_1 < ... < y_m \\leq 10^9\nx_i and y_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn m\nx_1 x_2 ... x_n\ny_1 y_2 ... y_m\n\n\n\n\n\nOutputPrint the total area of the rectangles, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 3\n1 3 4\n1 3 6\n\n\n\n\n\nSample Output 160\n\nThe following figure illustrates this input:\n\nThe total area of the nine rectangles A, B, ..., I shown in the following figure, is 60.\n\n\n\n\n\n\nSample Input 26 5\n-790013317 -192321079 95834122 418379342 586260100 802780784\n-253230108 193944314 363756450 712662868 735867677\n\n\n\n\n\nSample Output 2835067060"}
{"id": "p03763", "problem": "Score : 300 points\n\n\nProblem StatementSnuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them.\n\n\n\n\nConstraints\n1 \\leq n \\leq 50\n1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\nS_i consists of lowercase English letters (a - z) for every i = 1, ..., n.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\nS_1\n...\nS_n\n\n\n\n\n\nOutputPrint the lexicographically smallest string among the longest strings that satisfy the condition.\nIf the answer is an empty string, print an empty line.\n\n\n\n\n\n\nSample Input 13\ncbaa\ndaacc\nacacac\n\n\n\n\n\nSample Output 1aac\n\nThe strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac.\n\n\n\n\n\nSample Input 23\na\naa\nb\n\n\n\n\n\nSample Output 2\n\nThe answer is an empty string."}
{"id": "p03764", "problem": "Score : 500 points\n\n\nProblem StatementOn a two-dimensional plane, there are m lines drawn parallel to the x axis, and n lines drawn parallel to the y axis.\nAmong the lines parallel to the x axis, the i-th from the bottom is represented by y = y_i.\nSimilarly, among the lines parallel to the y axis, the i-th from the left is represented by x = x_i.\nFor every rectangle that is formed by these lines, find its area, and print the total area modulo 10^9+7.\nThat is, for every quadruple (i,j,k,l) satisfying 1\\leq i < j\\leq n and 1\\leq k < l\\leq m, find the area of the rectangle formed by the lines x=x_i, x=x_j, y=y_k and y=y_l, and print the sum of these areas modulo 10^9+7.\n\n\n\n\nConstraints\n2 \\leq n,m \\leq 10^5\n-10^9 \\leq x_1 < ... < x_n \\leq 10^9\n-10^9 \\leq y_1 < ... < y_m \\leq 10^9\nx_i and y_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn m\nx_1 x_2 ... x_n\ny_1 y_2 ... y_m\n\n\n\n\n\nOutputPrint the total area of the rectangles, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 3\n1 3 4\n1 3 6\n\n\n\n\n\nSample Output 160\n\nThe following figure illustrates this input:\n\nThe total area of the nine rectangles A, B, ..., I shown in the following figure, is 60.\n\n\n\n\n\n\nSample Input 26 5\n-790013317 -192321079 95834122 418379342 586260100 802780784\n-253230108 193944314 363756450 712662868 735867677\n\n\n\n\n\nSample Output 2835067060"}
{"id": "p03765", "problem": "Score : 600 points\n\n\nProblem StatementLet us consider the following operations on a string consisting of A and B:\n\nSelect a character in a string. If it is A, replace it with BB. If it is B, replace with AA.\nSelect a substring that is equal to either AAA or BBB, and delete it from the string.\n\nFor example, if the first operation is performed on ABA and the first character is selected, the string becomes BBBA.\nIf the second operation is performed on BBBAAAA and the fourth through sixth characters are selected, the string becomes BBBA.\nThese operations can be performed any number of times, in any order.\nYou are given two string S and T, and q queries a_i, b_i, c_i, d_i.\nFor each query, determine whether S_{a_i} S_{{a_i}+1} ... S_{b_i}, a substring of S, can be made into T_{c_i} T_{{c_i}+1} ... T_{d_i}, a substring of T.\n\n\n\n\nConstraints\n1 \\leq |S|, |T| \\leq 10^5\nS and T consist of letters A and B.\n1 \\leq q \\leq 10^5\n1 \\leq a_i \\leq b_i \\leq |S|\n1 \\leq c_i \\leq d_i \\leq |T|\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\nT\nq\na_1 b_1 c_1 d_1\n...\na_q b_q c_q d_q\n\n\n\n\n\nOutputPrint q lines. The i-th line should contain the response to the i-th query. If S_{a_i} S_{{a_i}+1} ... S_{b_i} can be made into T_{c_i} T_{{c_i}+1} ... T_{d_i}, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 1BBBAAAABA\nBBBBA\n4\n7 9 2 5\n7 9 1 4\n1 7 2 5\n1 7 2 4\n\n\n\n\n\nSample Output 1YES\nNO\nYES\nNO\n\nThe first query asks whether the string ABA can be made into BBBA.\nAs explained in the problem statement, it can be done by the first operation.\nThe second query asks whether ABA can be made into BBBB, and the fourth query asks whether BBBAAAA can be made into BBB.\nNeither is possible.\nThe third query asks whether the string BBBAAAA can be made into BBBA.\nAs explained in the problem statement, it can be done by the second operation.\n\n\n\n\n\nSample Input 2AAAAABBBBAAABBBBAAAA\nBBBBAAABBBBBBAAAAABB\n10\n2 15 2 13\n2 13 6 16\n1 13 2 20\n4 20 3 20\n1 18 9 19\n2 14 1 11\n3 20 3 15\n6 16 1 17\n4 18 8 20\n7 20 3 14\n\n\n\n\n\nSample Output 2YES\nYES\nYES\nYES\nYES\nYES\nNO\nNO\nNO\nNO"}
{"id": "p03766", "problem": "Score : 1000 points\n\n\nProblem StatementHow many infinite sequences a_1, a_2, ... consisting of {{1, ... ,n}} satisfy the following conditions?\n\nThe n-th and subsequent elements are all equal. That is, if n \\leq i,j, a_i = a_j.\nFor every integer i, the a_i elements immediately following the i-th element are all equal. That is, if i < j < k\\leq i+a_i, a_j = a_k.\n\nFind the count modulo 10^9+7.\n\n\n\n\nConstraints\n1 \\leq n \\leq 10^6\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nn\n\n\n\n\n\nOutputPrint how many sequences satisfy the conditions, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 14\n\nThe four sequences that satisfy the conditions are:\n\n1, 1, 1, ...\n1, 2, 2, ...\n2, 1, 1, ...\n2, 2, 2, ...\n\n\n\n\n\n\nSample Input 2654321\n\n\n\n\n\nSample Output 2968545283"}
{"id": "p03767", "problem": "Score : 300 points\n\n\nProblem StatementThere are 3N participants in AtCoder Group Contest.\nThe strength of the i-th participant is represented by an integer a_i.\nThey will form N teams, each consisting of three participants.\nNo participant may belong to multiple teams.\nThe strength of a team is defined as the second largest strength among its members.\nFor example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3.\nFind the maximum possible sum of the strengths of N teams.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n1 \u2264 a_i \u2264 10^{9}\na_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{3N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 12\n5 2 8 5 1 5\n\n\n\n\n\nSample Output 110\n\nThe following is one formation of teams that maximizes the sum of the strengths of teams:\n\nTeam 1: consists of the first, fourth and fifth participants.\nTeam 2: consists of the second, third and sixth participants.\n\n\n\n\n\n\nSample Input 210\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n\n\n\n\nSample Output 210000000000\n\nThe sum of the strengths can be quite large."}
{"id": "p03768", "problem": "Score : 700 points\n\n\nProblem StatementSquid loves painting vertices in graphs.\nThere is a simple undirected graph consisting of N vertices numbered 1 through N, and M edges.\nInitially, all the vertices are painted in color 0. The i-th edge bidirectionally connects two vertices a_i and b_i. The length of every edge is 1.\nSquid performed Q operations on this graph. In the i-th operation, he repaints all the vertices within a distance of d_i from vertex v_i, in color c_i.\nFind the color of each vertex after the Q operations.\n\n\n\n\nConstraints\n1 \u2264 N,M,Q \u2264 10^5\n1 \u2264 a_i,b_i,v_i \u2264 N\na_i \u2260 b_i\n0 \u2264 d_i \u2264 10\n1 \u2264 c_i \u226410^5\nd_i and c_i are all integers.\nThere are no self-loops or multiple edges in the given graph.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the testset satisfying 1 \u2264 N,M,Q \u2264 2{,}000.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN M\na_1 b_1\n:\na_{M} b_{M}\nQ\nv_1 d_1 c_1\n:\nv_{Q} d_{Q} c_{Q}\n\n\n\n\n\nOutputPrint the answer in N lines.\nIn the i-th line, print the color of vertex i after the Q operations.\n\n\n\n\n\n\nSample Input 17 7\n1 2\n1 3\n1 4\n4 5\n5 6\n5 7\n2 3\n2\n6 1 1\n1 2 2\n\n\n\n\n\nSample Output 12\n2\n2\n2\n2\n1\n0\n\nInitially, each vertex is painted in color 0.\nIn the first operation, vertices 5 and 6 are repainted in color 1.\nIn the second operation, vertices 1, 2, 3, 4 and 5 are repainted in color 2.\n\n\n\n\n\n\n\n\nSample Input 214 10\n1 4\n5 7\n7 11\n4 10\n14 7\n14 3\n6 14\n8 11\n5 13\n8 3\n8\n8 6 2\n9 7 85\n6 9 3\n6 7 5\n10 3 1\n12 9 4\n9 6 6\n8 2 3\n\n\n\n\n\nSample Output 21\n0\n3\n1\n5\n5\n3\n3\n6\n1\n3\n4\n5\n3\n\nThe given graph may not be connected."}
{"id": "p03769", "problem": "Score : 1000 points\n\n\nProblem StatementWe will call a string x good if it satisfies the following condition:\n\nCondition: x can be represented as a concatenation of two copies of another string y of length at least 1.\n\nFor example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good.\nEagle and Owl created a puzzle on good strings.\nFind one string s that satisfies the following conditions. It can be proved that such a string always exists under the constraints in this problem.\n\n1 \u2264 |s| \u2264 200\nEach character of s is one of the 100 characters represented by the integers 1 through 100.\nAmong the 2^{|s|} subsequences of s, exactly N are good strings.\n\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^{12}\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputIn the first line, print |s|, the length of s.\nIn the second line, print the elements in s in order, with spaces in between. Any string that satisfies the above conditions will be accepted.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 14\n1 1 1 1\n\nThere are two good strings that appear as subsequences of s: (1,1) and (1,1,1,1). There are six occurrences of (1,1) and one occurrence of (1,1,1,1), for a total of seven.\n\n\n\n\n\nSample Input 2299\n\n\n\n\n\nSample Output 223\n32 11 11 73 45 8 11 83 83 8 45 32 32 10 100 73 32 83 45 73 32 11 10"}
{"id": "p03770", "problem": "Score : 1000 points\n\n\nProblem StatementSnuke arranged N colorful balls in a row.\nThe i-th ball from the left has color c_i and weight w_i.\nHe can rearrange the balls by performing the following two operations any number of times, in any order:\n\nOperation 1: Select two balls with the same color. If the total weight of these balls is at most X, swap the positions of these balls.\nOperation 2: Select two balls with different colors. If the total weight of these balls is at most Y, swap the positions of these balls.\n\nHow many different sequences of colors of balls can be obtained? Find the count modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 2 \u00d7 10^5\n1 \u2264 X, Y \u2264 10^9\n1 \u2264 c_i \u2264 N\n1 \u2264 w_i \u2264 10^9\nX, Y, c_i, w_i are all integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN X Y\nc_1 w_1\n:\nc_N w_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 14 7 3\n3 2\n4 3\n2 1\n4 4\n\n\n\n\n\nSample Output 12\n\n\nThe sequence of colors (2,4,3,4) can be obtained by swapping the positions of the first and third balls by operation 2.\nIt is also possible to swap the positions of the second and fourth balls by operation 1, but it does not affect the sequence of colors.\n\n\n\n\n\n\nSample Input 21 1 1\n1 1\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 321 77 68\n16 73\n16 99\n19 66\n2 87\n2 16\n7 17\n10 36\n10 68\n2 38\n10 74\n13 55\n21 21\n3 7\n12 41\n13 88\n18 6\n2 12\n13 87\n1 9\n2 27\n13 15\n\n\n\n\n\nSample Output 3129729600"}
{"id": "p03771", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N oases on a number line. The coordinate of the i-th oases from the left is x_i.\nCamel hopes to visit all these oases.\nInitially, the volume of the hump on his back is V. When the volume of the hump is v, water of volume at most v can be stored. Water is only supplied at oases. He can get as much water as he can store at a oasis, and the same oasis can be used any number of times.\nCamel can travel on the line by either walking or jumping:\n\nWalking over a distance of d costs water of volume d from the hump. A walk that leads to a negative amount of stored water cannot be done.\nLet v be the amount of water stored at the moment. When v>0, Camel can jump to any point on the line of his choice. After this move, the volume of the hump becomes v/2 (rounded down to the nearest integer), and the amount of stored water becomes 0.\n\nFor each of the oases, determine whether it is possible to start from that oasis and visit all the oases.\n\n\n\n\nConstraints\n2 \u2264 N,V \u2264 2 \u00d7 10^5\n-10^9 \u2264 x_1 < x_2 < ... < x_N \u2264 10^9\nV and x_i are all integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN V\nx_1 x_2 ... x_{N}\n\n\n\n\n\nOutputPrint N lines. The i-th line should contain Possible if it is possible to start from the i-th oasis and visit all the oases, and Impossible otherwise.\n\n\n\n\n\n\nSample Input 13 2\n1 3 6\n\n\n\n\n\nSample Output 1Possible\nPossible\nPossible\n\nIt is possible to start from the first oasis and visit all the oases, as follows:\n\nWalk from the first oasis to the second oasis. The amount of stored water becomes 0.\nGet water at the second oasis. The amount of stored water becomes 2.\nJump from the second oasis to the third oasis. The amount of stored water becomes 0, and the volume of the hump becomes 1.\n\n\n\n\n\n\nSample Input 27 2\n-10 -4 -2 0 2 4 10\n\n\n\n\n\nSample Output 2Impossible\nPossible\nPossible\nPossible\nPossible\nPossible\nImpossible\n\nA oasis may be visited any number of times.\n\n\n\n\n\nSample Input 316 19\n-49 -48 -33 -30 -21 -14 0 15 19 23 44 52 80 81 82 84\n\n\n\n\n\nSample Output 3Possible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nPossible\nImpossible\nImpossible\nImpossible\nImpossible"}
{"id": "p03772", "problem": "Score : 2000 points\n\n\nProblem StatementSnuke received an integer sequence a of length 2N-1.\nHe arbitrarily permuted the elements in a, then used it to construct a new integer sequence b of length N, as follows:\n\nb_1 = the median of (a_1)\nb_2 = the median of (a_1, a_2, a_3)\nb_3 = the median of (a_1, a_2, a_3, a_4, a_5)\n:\nb_N = the median of (a_1, a_2, a_3, ..., a_{2N-1})\n\nHow many different sequences can be obtained as b? Find the count modulo 10^{9} + 7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 50\n1 \u2264 a_i \u2264 2N-1\na_i are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{2N-1}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 12\n1 3 2\n\n\n\n\n\nSample Output 13\n\nThere are three sequences that can be obtained as b: (1,2), (2,2) and (3,2). Each of these can be constructed from (1,2,3), (2,1,3) and (3,1,2), respectively.\n\n\n\n\n\nSample Input 24\n1 3 2 3 2 4 3\n\n\n\n\n\nSample Output 216\n\n\n\n\n\n\nSample Input 315\n1 5 9 11 1 19 17 18 20 1 14 3 3 8 19 15 16 29 10 2 4 13 6 12 7 15 16 1 1\n\n\n\n\n\nSample Output 3911828634\n\nPrint the count modulo 10^{9} + 7."}
{"id": "p03773", "problem": "Score : 100 points\n\n\nProblem StatementDolphin loves programming contests. Today, he will take part in a contest in AtCoder.\nIn this country, 24-hour clock is used. For example, 9:00 p.m. is referred to as \"21 o'clock\".\nThe current time is A o'clock, and a contest will begin in exactly B hours.\nWhen will the contest begin? Answer in 24-hour time.\n\n\n\n\nConstraints\n0 \\leq A,B \\leq 23\nA and B are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputPrint the hour of the starting time of the contest in 24-hour time.\n\n\n\n\n\n\nSample Input 19 12\n\n\n\n\n\nSample Output 121\n\nIn this input, the current time is 9 o'clock, and 12 hours later it will be 21 o'clock in 24-hour time.\n\n\n\n\n\nSample Input 219 0\n\n\n\n\n\nSample Output 219\n\nThe contest has just started.\n\n\n\n\n\nSample Input 323 2\n\n\n\n\n\nSample Output 31\n\nThe contest will begin at 1 o'clock the next day."}
{"id": "p03774", "problem": "Score : 200 points\n\n\nProblem StatementThere are N students and M checkpoints on the xy-plane.\nThe coordinates of the i-th student (1 \\leq i \\leq N) is (a_i,b_i), and the coordinates of the checkpoint numbered j (1 \\leq j \\leq M) is (c_j,d_j).\nWhen the teacher gives a signal, each student has to go to the nearest checkpoint measured in Manhattan distance. \nThe Manhattan distance between two points (x_1,y_1) and (x_2,y_2) is |x_1-x_2|+|y_1-y_2|.\nHere, |x| denotes the absolute value of x.\nIf there are multiple nearest checkpoints for a student, he/she will select the checkpoint with the smallest index.\nWhich checkpoint will each student go to?\n\n\n\n\nConstraints\n1 \\leq N,M \\leq 50\n-10^8 \\leq a_i,b_i,c_j,d_j \\leq 10^8\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\na_1 b_1\n:  \na_N b_N\nc_1 d_1\n:  \nc_M d_M\n\n\n\n\n\nOutputPrint N lines.\nThe i-th line (1 \\leq i \\leq N) should contain the index of the checkpoint for the i-th student to go.\n\n\n\n\n\n\nSample Input 12 2\n2 0\n0 0\n-1 0\n1 0\n\n\n\n\n\nSample Output 12\n1\n\nThe Manhattan distance between the first student and each checkpoint is:\n\nFor checkpoint 1: |2-(-1)|+|0-0|=3\nFor checkpoint 2: |2-1|+|0-0|=1\n\nThe nearest checkpoint is checkpoint 2. Thus, the first line in the output should contain 2.\nThe Manhattan distance between the second student and each checkpoint is:\n\nFor checkpoint 1: |0-(-1)|+|0-0|=1\nFor checkpoint 2: |0-1|+|0-0|=1\n\nWhen there are multiple nearest checkpoints, the student will go to the checkpoint with the smallest index. Thus, the second line in the output should contain 1.\n\n\n\n\n\nSample Input 23 4\n10 10\n-10 -10\n3 3\n1 2\n2 3\n3 5\n3 5\n\n\n\n\n\nSample Output 23\n1\n2\n\nThere can be multiple checkpoints at the same coordinates.\n\n\n\n\n\nSample Input 35 5\n-100000000 -100000000\n-100000000 100000000\n100000000 -100000000\n100000000 100000000\n0 0\n0 0\n100000000 100000000\n100000000 -100000000\n-100000000 100000000\n-100000000 -100000000\n\n\n\n\n\nSample Output 35\n4\n3\n2\n1"}
{"id": "p03775", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer N.\nFor two positive integers A and B, we will define F(A,B) as the larger of the following: the number of digits in the decimal notation of A, and the number of digits in the decimal notation of B.\nFor example, F(3,11) = 2 since 3 has one digit and 11 has two digits.\nFind the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \\times B.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^{10}\nN is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the minimum value of F(A,B) as (A,B) ranges over all pairs of positive integers such that N = A \\times B.\n\n\n\n\n\n\nSample Input 110000\n\n\n\n\n\nSample Output 13\n\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\n\n\n\n\n\nSample Input 21000003\n\n\n\n\n\nSample Output 27\n\nThere are two pairs (A,B) that satisfy the condition: (1,1000003) and (1000003,1). For these pairs, F(1,1000003)=F(1000003,1)=7.\n\n\n\n\n\nSample Input 39876543210\n\n\n\n\n\nSample Output 36"}
{"id": "p03776", "problem": "Score : 400 points\n\n\nProblem StatementYou are given N items.\nThe value of the i-th item (1 \\leq i \\leq N) is v_i.\nYour have to select at least A and at most B of these items.\nUnder this condition, find the maximum possible arithmetic mean of the values of selected items.\nAdditionally, find the number of ways to select items so that the mean of the values of selected items is maximized.  \n\n\n\n\nConstraints\n1 \\leq N \\leq 50\n1 \\leq A,B \\leq N\n1 \\leq v_i \\leq 10^{15}\nEach v_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B\nv_1\nv_2\n...\nv_N\n\n\n\n\n\nOutputPrint two lines.\nThe first line should contain the maximum possible arithmetic mean of the values of selected items. The output should be considered correct if the absolute or relative error is at most 10^{-6}.\nThe second line should contain the number of ways to select items so that the mean of the values of selected items is maximized.\n\n\n\n\n\n\nSample Input 15 2 2\n1 2 3 4 5\n\n\n\n\n\nSample Output 14.500000\n1\n\nThe mean of the values of selected items will be maximized when selecting the fourth and fifth items. Hence, the first line of the output should contain 4.5.\nThere is no other way to select items so that the mean of the values will be 4.5, and thus the second line of the output should contain 1.\n\n\n\n\n\nSample Input 24 2 3\n10 20 10 10\n\n\n\n\n\nSample Output 215.000000\n3\n\nThere can be multiple ways to select items so that the mean of the values will be maximized.\n\n\n\n\n\nSample Input 35 1 5\n1000000000000000 999999999999999 999999999999998 999999999999997 999999999999996\n\n\n\n\n\nSample Output 31000000000000000.000000\n1"}
{"id": "p03777", "problem": "Score : 100 points\n\n\nProblem StatementTwo deer, AtCoDeer and TopCoDeer, are playing a game called Honest or Dishonest.\nIn this game, an honest player always tells the truth, and an dishonest player always tell lies.\nYou are given two characters a and b as the input. Each of them is either H or D, and carries the following information:\nIf a=H, AtCoDeer is honest; if a=D, AtCoDeer is dishonest.\nIf b=H, AtCoDeer is saying that TopCoDeer is honest; if b=D, AtCoDeer is saying that TopCoDeer is dishonest.\nGiven this information, determine whether TopCoDeer is honest.\n\n\n\n\nConstraints\na=H or a=D.\nb=H or b=D.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na b\n\n\n\n\n\nOutputIf TopCoDeer is honest, print H. If he is dishonest, print D.\n\n\n\n\n\n\nSample Input 1H H\n\n\n\n\n\nSample Output 1H\n\nIn this input, AtCoDeer is honest. Hence, as he says, TopCoDeer is honest.\n\n\n\n\n\nSample Input 2D H\n\n\n\n\n\nSample Output 2D\n\nIn this input, AtCoDeer is dishonest. Hence, contrary to what he says, TopCoDeer is dishonest.\n\n\n\n\n\nSample Input 3D D\n\n\n\n\n\nSample Output 3H"}
{"id": "p03778", "problem": "Score : 200 points\n\n\nProblem StatementAtCoDeer the deer found two rectangles lying on the table, each with height 1 and width W.\nIf we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+W], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+W], as shown in the following figure:\n\nAtCoDeer will move the second rectangle horizontally so that it connects with the first rectangle.\nFind the minimum distance it needs to be moved.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2264W\u226410^5\n1\u2264a,b\u226410^5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nW a b\n\n\n\n\n\nOutputPrint the minimum distance the second rectangle needs to be moved.\n\n\n\n\n\n\nSample Input 13 2 6\n\n\n\n\n\nSample Output 11\n\nThis input corresponds to the figure in the statement. In this case, the second rectangle should be moved to the left by a distance of 1.\n\n\n\n\n\nSample Input 23 1 3\n\n\n\n\n\nSample Output 20\n\nThe rectangles are already connected, and thus no move is needed.\n\n\n\n\n\nSample Input 35 10 1\n\n\n\n\n\nSample Output 34"}
{"id": "p03779", "problem": "Score : 200 points\n\n\nProblem StatementThere is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X.\n\n\n\n\nConstraints\nX is an integer.\n1\u2264X\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX\n\n\n\n\n\nOutputPrint the earliest possible time for the kangaroo to reach coordinate X.\n\n\n\n\n\n\nSample Input 16\n\n\n\n\n\nSample Output 13\n\nThe kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.\n\n\n\n\n\nSample Input 22\n\n\n\n\n\nSample Output 22\n\nHe can reach his nest at time 2 by staying at his position during the first second, and jumping to the right at the next second.\n\n\n\n\n\nSample Input 311\n\n\n\n\n\nSample Output 35"}
{"id": "p03780", "problem": "Score : 600 points\n\n\nProblem StatementAtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1\u2264i\u2264N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n\nIf, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary.\n\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2264N\u22645000\n1\u2264K\u22645000\n1\u2264a_i\u226410^9 (1\u2264i\u2264N)\n\n\n\n\n\nPartial Score\n300 points will be awarded for passing the test set satisfying N,K\u2264400.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the number of the unnecessary cards.\n\n\n\n\n\n\nSample Input 13 6\n1 4 3\n\n\n\n\n\nSample Output 11\n\nThere are two good sets: {2,3} and {1,2,3}.\nCard 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary.\nFor card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary.\nNeither is card 3 for a similar reason, hence the answer is 1.\n\n\n\n\n\nSample Input 25 400\n3 1 4 1 5\n\n\n\n\n\nSample Output 25\n\nIn this case, there is no good set. Therefore, all the cards are unnecessary.\n\n\n\n\n\nSample Input 36 20\n10 4 3 10 25 2\n\n\n\n\n\nSample Output 33"}
{"id": "p03781", "problem": "Score : 200 points\n\n\nProblem StatementThere is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.\nDuring the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.\nThat is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.\nThe kangaroo's nest is at coordinate X, and he wants to travel to coordinate X as fast as possible.\nFind the earliest possible time to reach coordinate X.\n\n\n\n\nConstraints\nX is an integer.\n1\u2264X\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX\n\n\n\n\n\nOutputPrint the earliest possible time for the kangaroo to reach coordinate X.\n\n\n\n\n\n\nSample Input 16\n\n\n\n\n\nSample Output 13\n\nThe kangaroo can reach his nest at time 3 by jumping to the right three times, which is the earliest possible time.\n\n\n\n\n\nSample Input 22\n\n\n\n\n\nSample Output 22\n\nHe can reach his nest at time 2 by staying at his position during the first second, and jumping to the right at the next second.\n\n\n\n\n\nSample Input 311\n\n\n\n\n\nSample Output 35"}
{"id": "p03782", "problem": "Score : 600 points\n\n\nProblem StatementAtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1\u2264i\u2264N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n\nIf, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\nOtherwise, card i is NOT unnecessary.\n\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2264N\u22645000\n1\u2264K\u22645000\n1\u2264a_i\u226410^9 (1\u2264i\u2264N)\n\n\n\n\n\nPartial Score\n300 points will be awarded for passing the test set satisfying N,K\u2264400.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the number of the unnecessary cards.\n\n\n\n\n\n\nSample Input 13 6\n1 4 3\n\n\n\n\n\nSample Output 11\n\nThere are two good sets: {2,3} and {1,2,3}.\nCard 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary.\nFor card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary.\nNeither is card 3 for a similar reason, hence the answer is 1.\n\n\n\n\n\nSample Input 25 400\n3 1 4 1 5\n\n\n\n\n\nSample Output 25\n\nIn this case, there is no good set. Therefore, all the cards are unnecessary.\n\n\n\n\n\nSample Input 36 20\n10 4 3 10 25 2\n\n\n\n\n\nSample Output 33"}
{"id": "p03783", "problem": "Score : 1000 points\n\n\nProblem StatementAtCoDeer the deer found N rectangle lying on the table, each with height 1.\nIf we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1\u2264i\u2264N) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure:\n\nAtCoDeer will move these rectangles horizontally so that all the rectangles are connected.\nFor each rectangle, the cost to move it horizontally by a distance of x, is x.\nFind the minimum cost to achieve connectivity.\nIt can be proved that this value is always an integer under the constraints of the problem.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2264N\u226410^5\n1\u2264l_i<r_i\u226410^9\n\n\n\n\n\nPartial Score\n300 points will be awarded for passing the test set satisfying 1\u2264N\u2264400 and 1\u2264l_i<r_i\u2264400.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nl_1 r_1\nl_2 r_2\n:\nl_N r_N\n\n\n\n\n\nOutputPrint the minimum cost to achieve connectivity.\n\n\n\n\n\n\nSample Input 13\n1 3\n5 7\n1 3\n\n\n\n\n\nSample Output 12\n\nThe second rectangle should be moved to the left by a distance of 2.\n\n\n\n\n\nSample Input 23\n2 5\n4 6\n1 4\n\n\n\n\n\nSample Output 20\n\nThe rectangles are already connected, and thus no move is needed.\n\n\n\n\n\nSample Input 35\n999999999 1000000000\n1 2\n314 315\n500000 500001\n999999999 1000000000\n\n\n\n\n\nSample Output 31999999680\n\n\n\n\n\n\nSample Input 45\n123456 789012\n123 456\n12 345678901\n123456 789012\n1 23\n\n\n\n\n\nSample Output 4246433\n\n\n\n\n\n\nSample Input 51\n1 400\n\n\n\n\n\nSample Output 50"}
{"id": "p03784", "problem": "Score : 1300 points\n\n\nProblem StatementThis is an interactive task.\nAtCoDeer the deer came across N people. For convenience, the people are numbered 0 through N-1.\nAmong them, A are honest and the remaining B(=N-A) are unkind.\nAll of these N people know who are honest and who are unkind, but AtCoDeer only knows that there are A honest and B unkind people.\nHe is trying to identify all of the honest people by asking questions to these N people.\nFor one question, AtCoDeer selects a and b (0\u2264a,b\u2264N-1), and asks person a the following question: \"Is person b honest?\"\nAn honest person will always answer correctly by \"Yes\" or \"No\".\nAn unkind person, however, will answer by selecting \"Yes\" or \"No\" arbitrarily.\nThat is, the algorithm used by an unkind person may not be simple one such as always lying or giving random fifty-fifty answers.\nAtCoDeer can ask at most 2N questions. He will ask questions one by one, and the responses to the previous questions can be used when deciding the next question to ask.\nIdentify all of the honest people.\nIf it is impossible (more formally, if, for any strategy of asking 2N questions, there exists a strategy for unkind people to answer the questions so that there are two or more possible sets of the honest people), report that fact.\n\n\n\n\nConstraints\n1\u2264A,B\u22642000\n\n\n\n\n\nInput and OutputFirst, A and B are given from Standard Input in the following format:\nA B\n\nIf identifying the honest people is impossible, the program must immediately print the following output and terminate itself:\nImpossible\n\nOtherwise, the program shall ask questions.\nEach question must be written to Standard Output in the following format:\n? a b\n\nHere, a and b must be integers between 0 and N-1 (inclusive).\nThe response to the question will be given from Standard Input in the following format:\nans\n\nHere, ans is either Y or N.\nY represents \"Yes\"; N represents \"No\".\nFinally, the answer must be written to Standard Output in the following format:\n! s_0s_1...s_{N-1}\n\nHere, s_i must be 1 if person i is honest, and 0 if person i is unkind.\n\n\n\n\nJudgement\nAfter each output, you must flush Standard Output. Otherwise you may get TLE.\nAfter you print the answer, the program must be terminated immediately. Otherwise, the behavior of the judge is undefined.\nWhen your output is invalid or incorrect, the behavior of the judge is undefined (it does not necessarily give WA).\n\n\n\n\n\nSamplesIn the following sample, A = 2, B = 1, and the answer is 101.\n\n\n\nInput\nOutput\n\n\n\n\n2 1\n\n\n\n\n? 0 1\n\n\nN\n\n\n\n\n? 0 2\n\n\nY\n\n\n\n\n? 1 0\n\n\nY\n\n\n\n\n? 2 0\n\n\nY\n\n\n\n\n? 2 2\n\n\nY\n\n\n\n\n! 101\n\n\n\nIn the following sample, A = 1, B = 2, and the answer is Impossible.\n\n\n\nInput\nOutput\n\n\n\n\n1 2\n\n\n\n\nImpossible"}
{"id": "p03785", "problem": "Score : 300 points\n\n\nProblem StatementEvery day, N passengers arrive at Takahashi Airport.\nThe i-th passenger arrives at time T_i.\nEvery passenger arrived at Takahashi airport travels to the city by bus. Each bus can accommodate up to C passengers.\nNaturally, a passenger cannot take a bus that departs earlier than the airplane arrives at the airport.\nAlso, a passenger will get angry if he/she is still unable to take a bus K units of time after the arrival of the airplane.\nFor that reason, it is necessary to arrange buses so that the i-th passenger can take a bus departing at time between T_i and T_i + K (inclusive).\nWhen setting the departure times for buses under this condition, find the minimum required number of buses.\nHere, the departure time for each bus does not need to be an integer, and there may be multiple buses that depart at the same time.\n\n\n\n\nConstraints\n2 \\leq N \\leq 100000\n1 \\leq C \\leq 10^9\n1 \\leq K \\leq 10^9\n1 \\leq T_i \\leq 10^9\nC, K and T_i are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN C K\nT_1\nT_2\n:\nT_N\n\n\n\n\n\nOutputPrint the minimum required number of buses.\n\n\n\n\n\n\nSample Input 15 3 5\n1\n2\n3\n6\n12\n\n\n\n\n\nSample Output 13\n\nFor example, the following three buses are enough:\n\nA bus departing at time 4.5, that carries the passengers arriving at time 2 and 3.\nA bus departing at time 6, that carries the passengers arriving at time 1 and 6.\nA bus departing at time 12, that carries the passenger arriving at time 12.\n\n\n\n\n\n\nSample Input 26 3 3\n7\n6\n2\n8\n10\n6\n\n\n\n\n\nSample Output 23"}
{"id": "p03786", "problem": "Score : 400 points\n\n\nProblem StatementSnuke found N strange creatures.\nEach creature has a fixed color and size. The color and size of the i-th creature are represented by i and A_i, respectively.\nEvery creature can absorb another creature whose size is at most twice the size of itself.\nWhen a creature of size A and color B absorbs another creature of size C and color D (C \\leq 2 \\times A), they will merge into one creature of size A+C and color B.\nHere, depending on the sizes of two creatures, it is possible that both of them can absorb the other.\nSnuke has been watching these creatures merge over and over and ultimately become one creature.\nFind the number of the possible colors of this creature.\n\n\n\n\nConstraints\n2 \\leq N \\leq 100000\n1 \\leq A_i \\leq 10^9\nA_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputPrint the number of the possible colors of the last remaining creature after the N creatures repeatedly merge and ultimately become one creature.\n\n\n\n\n\n\nSample Input 13\n3 1 4\n\n\n\n\n\nSample Output 12\n\nThe possible colors of the last remaining creature are colors 1 and 3.\nFor example, when the creature of color 3 absorbs the creature of color 2, then the creature of color 1 absorbs the creature of color 3, the color of the last remaining creature will be color 1.\n\n\n\n\n\nSample Input 25\n1 1 1 1 1\n\n\n\n\n\nSample Output 25\n\nThere may be multiple creatures of the same size.\n\n\n\n\n\nSample Input 36\n40 1 30 2 7 20\n\n\n\n\n\nSample Output 34"}
{"id": "p03787", "problem": "Score : 800 points\n\n\nProblem StatementTakahashi has received an undirected graph with N vertices, numbered 1, 2, ..., N.\nThe edges in this graph are represented by (u_i, v_i).\nThere are no self-loops and multiple edges in this graph.\nBased on this graph, Takahashi is now constructing a new graph with N^2 vertices, where each vertex is labeled with a pair of integers (a, b) (1 \\leq a \\leq N, 1 \\leq b \\leq N).\nThe edges in this new graph are generated by the following rule:\n\nSpan an edge between vertices (a, b) and (a', b') if and only if both of the following two edges exist in the original graph: an edge between vertices a and a', and an edge between vertices b and b'.\n\nHow many connected components are there in this new graph?\n\n\n\n\nConstraints\n2 \\leq N \\leq 100,000\n0 \\leq M \\leq 200,000\n1 \\leq u_i < v_i \\leq N\nThere exists no pair of distinct integers i and j such that u_i = u_j and v_i = v_j.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nu_1 v_1\nu_2 v_2\n:\nu_M v_M\n\n\n\n\n\nOutputPrint the number of the connected components in the graph constructed by Takahashi.\n\n\n\n\n\n\nSample Input 13 1\n1 2\n\n\n\n\n\nSample Output 17\n\nThe graph constructed by Takahashi is as follows.\n\n\n\n\n\n\nSample Input 27 5\n1 2\n3 4\n3 5\n4 5\n2 6\n\n\n\n\n\nSample Output 218"}
{"id": "p03788", "problem": "Score : 900 points\n\n\nProblem StatementTakahashi has a lot of peculiar devices.\nThese cylindrical devices receive balls from left and right.\nEach device is in one of the two states A and B, and for each state, the device operates as follows:\n\nWhen a device in state A receives a ball from either side (left or right), the device throws out the ball from the same side, then immediately goes into state B.\nWhen a device in state B receives a ball from either side, the device throws out the ball from the other side, then immediately goes into state A.\n\nThe transition of the state of a device happens momentarily and always completes before it receives another ball.\nTakahashi built a contraption by concatenating N of these devices. In this contraption,\n\nA ball that was thrown out from the right side of the i-th device from the left (1 \\leq i \\leq N-1) immediately enters the (i+1)-th device from the left side.\nA ball that was thrown out from the left side of the i-th device from the left (2 \\leq i \\leq N) immediately enters the (i-1)-th device from the right side.\n\nThe initial state of the i-th device from the left is represented by the i-th character in a string S.\nFrom this situation, Takahashi performed the following K times: put a ball into the leftmost device from the left side, then wait until the ball comes out of the contraption from either end.\nHere, it can be proved that the ball always comes out of the contraption after a finite time.\nFind the state of each device after K balls are processed.\n\n\n\n\nConstraints\n1 \\leq N \\leq 200,000\n1 \\leq K \\leq 10^9\n|S|=N\nEach character in S is either A or B.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nS\n\n\n\n\n\nOutputPrint a string that represents the state of each device after K balls are processed.\nThe string must be N characters long, and the i-th character must correspond to the state of the i-th device from the left.\n\n\n\n\n\n\nSample Input 15 1\nABAAA\n\n\n\n\n\nSample Output 1BBAAA\n\nIn this input, we put a ball into the leftmost device from the left side, then it is returned from the same place.\n\n\n\n\n\nSample Input 25 2\nABAAA\n\n\n\n\n\nSample Output 2ABBBA\n\n\n\n\n\n\nSample Input 34 123456789\nAABB\n\n\n\n\n\nSample Output 3BABA"}
{"id": "p03789", "problem": "Score : 1300 points\n\n\nProblem StatementWe will call a non-negative integer increasing if, for any two adjacent digits in its decimal representation, the digit to the right is greater than or equal to the digit to the left.\nFor example, 1558, 11, 3 and 0 are all increasing; 10 and 20170312 are not.\nSnuke has an integer N. Find the minimum number of increasing integers that can represent N as their sum.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^{500000}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the minimum number of increasing integers that can represent N as their sum.\n\n\n\n\n\n\nSample Input 180\n\n\n\n\n\nSample Output 12\n\nOne possible representation is 80 = 77 + 3.\n\n\n\n\n\nSample Input 2123456789\n\n\n\n\n\nSample Output 21\n\n123456789 in itself is increasing, and thus it can be represented as the sum of one increasing integer.\n\n\n\n\n\nSample Input 320170312\n\n\n\n\n\nSample Output 34\n\n\n\n\n\n\nSample Input 47204647845201772120166980358816078279571541735614841625060678056933503\n\n\n\n\n\nSample Output 431"}
{"id": "p03790", "problem": "Score : 1700 points\n\n\nProblem StatementThere is a railroad in Takahashi Kingdom.\nThe railroad consists of N sections, numbered 1, 2, ..., N, and N+1 stations, numbered 0, 1, ..., N. Section i directly connects the stations i-1 and i.\nA train takes exactly A_i minutes to run through section i, regardless of direction.\nEach of the N sections is either single-tracked over the whole length, or double-tracked over the whole length.\nIf B_i = 1, section i is single-tracked; if B_i = 2, section i is double-tracked.\nTwo trains running in opposite directions can cross each other on a double-tracked section, but not on a single-tracked section.\nTrains can also cross each other at a station.\nSnuke is creating the timetable for this railroad. In this timetable, the trains on the railroad run every K minutes, as shown in the following figure. Here, bold lines represent the positions of trains running on the railroad. (See Sample 1 for clarification.)\n\nWhen creating such a timetable, find the minimum sum of the amount of time required for a train to depart station 0 and reach station N, and the amount of time required for a train to depart station N and reach station 0.\nIt can be proved that, if there exists a timetable satisfying the conditions in this problem, this minimum sum is always an integer.\nFormally, the times at which trains arrive and depart must satisfy the following:\n\nEach train either departs station 0 and is bound for station N, or departs station N and is bound for station 0.\nEach train takes exactly A_i minutes to run through section i. For example, if a train bound for station N departs station i-1 at time t, the train arrives at station i exactly at time t+A_i.\nAssume that a train bound for station N arrives at a station at time s, and departs the station at time t. Then, the next train bound for station N arrives at the station at time s+K, and departs the station at time t+K. Additionally, the previous train bound for station N arrives at the station at time s-K, and departs the station at time t-K. This must also be true for trains bound for station 0.\nTrains running in opposite directions must not be running on the same single-tracked section (except the stations at both ends) at the same time.\n\n\n\n\n\nConstraints\n1 \\leq N \\leq 100000\n1 \\leq K \\leq 10^9\n1 \\leq A_i \\leq 10^9\nA_i is an integer.\nB_i is either 1 or 2.\n\n\n\n\n\nPartial Score\nIn the test set worth 500 points, all the sections are single-tracked. That is, B_i = 1.\nIn the test set worth another 500 points, N \\leq 200.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\n\n\n\nOutputPrint an integer representing the minimum sum of the amount of time required for a train to depart station 0 and reach station N, and the amount of time required for a train to depart station N and reach station 0.\nIf it is impossible to create a timetable satisfying the conditions, print -1 instead.\n\n\n\n\n\n\nSample Input 13 10\n4 1\n3 1\n4 1\n\n\n\n\n\nSample Output 126\n\nFor example, the sum of the amount of time in question will be 26 minutes in the following timetable:\n\nIn this timetable, the train represented by the red line departs station 0 at time 0, arrives at station 1 at time 4, departs station 1 at time 5, arrives at station 2 at time 8, and so on.\n\n\n\n\n\nSample Input 21 10\n10 1\n\n\n\n\n\nSample Output 2-1\n\n\n\n\n\n\nSample Input 36 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\n\n\n\n\nSample Output 312\n\n\n\n\n\n\nSample Input 420 987654321\n129662684 2\n162021979 1\n458437539 1\n319670097 2\n202863355 1\n112218745 1\n348732033 1\n323036578 1\n382398703 1\n55854389 1\n283445191 1\n151300613 1\n693338042 2\n191178308 2\n386707193 1\n204580036 1\n335134457 1\n122253639 1\n824646518 2\n902554792 2\n\n\n\n\n\nSample Output 414829091348"}
{"id": "p03791", "problem": "Score : 900 points\n\n\nProblem StatementYou are developing frog-shaped robots, and decided to race them against each other.\nFirst, you placed N robots onto a number line.\nThese robots are numbered 1 through N.\nThe current coordinate of robot i is x_i.\nHere, all x_i are integers, and 0 < x_1 < x_2 < ... < x_N.\nYou will repeatedly perform the following operation:\n\nSelect a robot on the number line. Let the coordinate of the robot be x. Select the destination coordinate, either x-1 or x-2, that is not occupied by another robot. The robot now jumps to the selected coordinate.\n\nWhen the coordinate of a robot becomes 0 or less, the robot is considered finished and will be removed from the number line immediately.\nYou will repeat the operation until all the robots finish the race.\nDepending on your choice in the operation, the N robots can finish the race in different orders.\nIn how many different orders can the N robots finish the race?\nFind the answer modulo 10^9+7.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\nx_i is an integer.\n0 < x_1 < x_2 < ... < x_N \u2264 10^9\n\n\n\n\n\nPartial Score\nIn a test set worth 500 points, N \u2264 8.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputPrint the number of the different orders in which the N robots can finish the race, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n1 2 3\n\n\n\n\n\nSample Output 14\n\nThere are four different orders in which the three robots can finish the race:\n\n(Robot 1 \u2192 Robot 2 \u2192 Robot 3)\n(Robot 1 \u2192 Robot 3 \u2192 Robot 2)\n(Robot 2 \u2192 Robot 1 \u2192 Robot 3)\n(Robot 2 \u2192 Robot 3 \u2192 Robot 1)\n\n\n\n\n\n\nSample Input 23\n2 3 4\n\n\n\n\n\nSample Output 26\n\nThere are six different orders in which the three robots can finish the race:\n\n(Robot 1 \u2192 Robot 2 \u2192 Robot 3)\n(Robot 1 \u2192 Robot 3 \u2192 Robot 2)\n(Robot 2 \u2192 Robot 1 \u2192 Robot 3)\n(Robot 2 \u2192 Robot 3 \u2192 Robot 1)\n(Robot 3 \u2192 Robot 1 \u2192 Robot 2)\n(Robot 3 \u2192 Robot 2 \u2192 Robot 1)\n\nFor example, the order (Robot 3 \u2192 Robot 2 \u2192 Robot 1) can be achieved as shown in the figure below:\n\n\n\n\n\n\n\n\nSample Input 38\n1 2 3 5 7 11 13 17\n\n\n\n\n\nSample Output 310080\n\n\n\n\n\n\nSample Input 413\n4 6 8 9 10 12 14 15 16 18 20 21 22\n\n\n\n\n\nSample Output 4311014372\n\nRemember to print the answer modulo 10^9+7.\nThis case is not included in the test set for the partial score."}
{"id": "p03792", "problem": "Score : 1300 points\n\n\nProblem StatementThere is a square-shaped grid with N vertical rows and N horizontal columns.\nWe will denote the square at the i-th row from the top and the j-th column from the left as (i,\\ j).\nInitially, each square is either white or black.\nThe initial color of the grid is given to you as characters a_{ij}, arranged in a square shape.\nIf the square (i,\\ j) is white, a_{ij} is .. If it is black, a_{ij} is #.\nYou are developing a robot that repaints the grid.\nIt can repeatedly perform the following operation:\n\nSelect two integers i, j (1 \u2264 i,\\ j \u2264 N). Memorize the colors of the squares (i,\\ 1), (i,\\ 2), ..., (i,\\ N) as c_1, c_2, ..., c_N, respectively. Then, repaint the squares (1,\\ j), (2,\\ j), ..., (N,\\ j) with the colors c_1, c_2, ..., c_N, respectively.\n\nYour objective is to turn all the squares black.\nDetermine whether it is possible, and find the minimum necessary number of operations to achieve it if the answer is positive.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 500\na_{ij} is either . or #.\n\n\n\n\n\nPartial Score\nIn a test set worth 300 points, N \u2264 3.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_{11}...a_{1N}\n:\na_{N1}...a_{NN}\n\n\n\n\n\nOutputIf it is possible to turn all the squares black, print the minimum necessary number of operations to achieve the objective.\nIf it is impossible, print -1 instead.\n\n\n\n\n\n\nSample Input 12\n#.\n.#\n\n\n\n\n\nSample Output 13\n\nFor example, perform the operation as follows:\n\nSelect i = 1, j = 2.\nSelect i = 1, j = 1.\nSelect i = 1, j = 2.\n\nThe transition of the colors of the squares is shown in the figure below:\n\n\n\n\n\n\n\n\nSample Input 22\n..\n..\n\n\n\n\n\nSample Output 2-1\n\n\n\n\n\n\nSample Input 32\n##\n##\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 43\n.#.\n###\n.#.\n\n\n\n\n\nSample Output 42\n\n\n\n\n\n\nSample Input 53\n...\n.#.\n...\n\n\n\n\n\nSample Output 55"}
{"id": "p03793", "problem": "Score : 1300 points\n\n\nProblem StatementYou are developing a robot that processes strings.\nWhen the robot is given a string t consisting of lowercase English letters, it processes the string by following the procedure below:\n\nLet i be the smallest index such that t_i = t_{i + 1}. If such an index does not exist, terminate the procedure.\nIf t_i is z, remove t_i and t_{i + 1} from t. Otherwise, let c be the next letter of t_i in the English alphabet, and replace t_i and t_{i + 1} together with c, reducing the length of t by 1.\nGo back to step 1.\n\nFor example, when the robot is given the string axxxxza, it will be processed as follows: axxxxza \u2192 ayxxza \u2192 ayyza \u2192 azza \u2192 aa \u2192 b.\nYou are given a string s consisting of lowercase English letters.\nAnswer Q queries. The i-th query is as follows:\n\nAssume that the robot is given a substring of s that runs from the l_i-th character and up to the r_i-th character (inclusive). Will the string be empty after processing?\n\n\n\n\n\nConstraints\n1 \u2264 |s| \u2264 5 \u00d7 10^5\ns consists of lowercase English letters.\n1 \u2264 Q \u2264 10^5\n1 \u2264 l_i \u2264 r_i \u2264 |s|\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\nQ\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n\n\n\n\nOutputPrint Q lines.\nThe i-th line should contain the answer to the i-th query: Yes or No.\n\n\n\n\n\n\nSample Input 1axxxxza\n2\n1 7\n2 6\n\n\n\n\n\nSample Output 1No\nYes\n\n\nRegarding the first query, the string will be processed as follows: axxxxza \u2192 ayxxza \u2192 ayyza \u2192 azza \u2192 aa \u2192 b.\nRegarding the second query, the string will be processed as follows: xxxxz \u2192 yxxz \u2192 yyz \u2192 zz \u2192 .\n\n\n\n\n\n\nSample Input 2aabcdefghijklmnopqrstuvwxyz\n1\n1 27\n\n\n\n\n\nSample Output 2Yes\n\n\n\n\n\n\nSample Input 3yzyyyzyzyyyz\n8\n1 6\n7 12\n1 12\n6 11\n1 1\n1 3\n4 9\n3 8\n\n\n\n\n\nSample Output 3Yes\nYes\nYes\nYes\nNo\nNo\nNo\nNo"}
{"id": "p03794", "problem": "Score : 1800 points\n\n\nProblem StatementThere is a tree T with N vertices, numbered 1 through N.\nFor each 1 \u2264 i \u2264 N - 1, the i-th edge connects vertices a_i and b_i.\nSnuke is constructing a directed graph T' by arbitrarily assigning direction to each edge in T. (There are 2^{N - 1} different ways to construct T'.)\nFor a fixed T', we will define d(s,\\ t) for each 1 \u2264 s,\\ t \u2264 N, as follows:\n\nd(s,\\ t) = (The number of edges that must be traversed against the assigned direction when traveling from vertex s to vertex t)\n\nIn particular, d(s,\\ s) = 0 for each 1 \u2264 s \u2264 N.\nAlso note that, in general, d(s,\\ t) \u2260 d(t,\\ s).\nWe will further define D as the following:\n\n\n\nSnuke is constructing T' so that D will be the minimum possible value.\nHow many different ways are there to construct T' so that D will be the minimum possible value, modulo 10^9 + 7?\n\n\n\n\nConstraints\n2 \u2264 N \u2264 1000\n1 \u2264 a_i,\\ b_i \u2264 N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 b_1\na_2 b_2\n:\na_{N - 1} b_{N - 1}\n\n\n\n\n\nOutputPrint the number of the different ways to construct T' so that D will be the minimum possible value, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 14\n1 2\n1 3\n1 4\n\n\n\n\n\nSample Output 12\n\nThe minimum possible value for D is 1.\nThere are two ways to construct T' to achieve this value, as shown in the following figure:\n\n\n\n\n\n\nSample Input 24\n1 2\n2 3\n3 4\n\n\n\n\n\nSample Output 26\n\nThe minimum possible value for D is 2.\nThere are six ways to construct T' to achieve this value, as shown in the following figure:\n\n\n\n\n\n\nSample Input 36\n1 2\n1 3\n1 4\n2 5\n2 6\n\n\n\n\n\nSample Output 314\n\n\n\n\n\n\nSample Input 410\n2 4\n2 5\n8 3\n10 7\n1 6\n2 8\n9 5\n8 6\n10 6\n\n\n\n\n\nSample Output 4102"}
{"id": "p03795", "problem": "Score : 100 points\n\n\nProblem StatementSnuke has a favorite restaurant.\nThe price of any meal served at the restaurant is 800 yen (the currency of Japan), and each time a customer orders 15 meals, the restaurant pays 200 yen back to the customer.\nSo far, Snuke has ordered N meals at the restaurant.\nLet the amount of money Snuke has paid to the restaurant be x yen, and let the amount of money the restaurant has paid back to Snuke be y yen.\nFind x-y.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 120\n\n\n\n\n\nSample Output 115800\n\nSo far, Snuke has paid 16000 yen, and the restaurant has paid back 200 yen. Thus, the answer is 15800.\n\n\n\n\n\nSample Input 260\n\n\n\n\n\nSample Output 247200\n\nSnuke has paid 48000 yen for 60 meals, and the restaurant has paid back 800 yen."}
{"id": "p03796", "problem": "Score : 200 points\n\n\nProblem StatementSnuke loves working out. He is now exercising N times.\nBefore he starts exercising, his power is 1. After he exercises for the i-th time, his power gets multiplied by i.\nFind Snuke's power after he exercises N times. Since the answer can be extremely large, print the answer modulo 10^{9}+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^{5}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the answer modulo 10^{9}+7.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 16\n\n\nAfter Snuke exercises for the first time, his power gets multiplied by 1 and becomes 1.\nAfter Snuke exercises for the second time, his power gets multiplied by 2 and becomes 2.\nAfter Snuke exercises for the third time, his power gets multiplied by 3 and becomes 6.\n\n\n\n\n\n\nSample Input 210\n\n\n\n\n\nSample Output 23628800\n\n\n\n\n\n\nSample Input 3100000\n\n\n\n\n\nSample Output 3457992974\n\nPrint the answer modulo 10^{9}+7."}
{"id": "p03797", "problem": "Score : 300 points\n\n\nProblem StatementSnuke loves puzzles.\nToday, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below:\n\n\n\nSnuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces.\nFind the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 10^{12}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 11 6\n\n\n\n\n\nSample Output 12\n\nTwo Scc groups can be created as follows:\n\nCombine two c-shaped pieces into one S-shaped piece\nCreate two Scc groups, each from one S-shaped piece and two c-shaped pieces\n\n\n\n\n\n\nSample Input 212345 678901\n\n\n\n\n\nSample Output 2175897"}
{"id": "p03798", "problem": "Score : 500 points\n\n\nProblem StatementSnuke, who loves animals, built a zoo.\nThere are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2\u2264i\u2264N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1.\nThere are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies.\nSnuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species.\nMore formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise.\nSnuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1.\n\n\n\n\nConstraints\n3 \u2264 N \u2264 10^{5}\ns is a string of length N consisting of o and x.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\ns\n\n\n\n\n\nOutputIf there does not exist an valid assignment that is consistent with s, print -1.\nOtherwise, print an string t in the following format. The output is considered correct if the assignment described by t is consistent with s.\n\nt is a string of length N consisting of S and W.\nIf t_i is S, it indicates that the animal numbered i is a sheep. If t_i is W, it indicates that the animal numbered i is a wolf.\n\n\n\n\n\n\n\nSample Input 16\nooxoox\n\n\n\n\n\nSample Output 1SSSWWS\n\nFor example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf.\nLet us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o.\n\n\n\n\n\n\n\n\nSample Input 23\noox\n\n\n\n\n\nSample Output 2-1\n\nPrint -1 if there is no valid assignment of species.\n\n\n\n\n\nSample Input 310\noxooxoxoox\n\n\n\n\n\nSample Output 3SSWWSSSWWS"}
{"id": "p03799", "problem": "Score : 300 points\n\n\nProblem StatementSnuke loves puzzles.\nToday, he is working on a puzzle using S- and c-shaped pieces.\nIn this puzzle, you can combine two c-shaped pieces into one S-shaped piece, as shown in the figure below:\n\n\n\nSnuke decided to create as many Scc groups as possible by putting together one S-shaped piece and two c-shaped pieces.\nFind the maximum number of Scc groups that can be created when Snuke has N S-shaped pieces and M c-shaped pieces.\n\n\n\n\nConstraints\n1 \u2264 N,M \u2264 10^{12}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 11 6\n\n\n\n\n\nSample Output 12\n\nTwo Scc groups can be created as follows:\n\nCombine two c-shaped pieces into one S-shaped piece\nCreate two Scc groups, each from one S-shaped piece and two c-shaped pieces\n\n\n\n\n\n\nSample Input 212345 678901\n\n\n\n\n\nSample Output 2175897"}
{"id": "p03800", "problem": "Score : 500 points\n\n\nProblem StatementSnuke, who loves animals, built a zoo.\nThere are N animals in this zoo. They are conveniently numbered 1 through N, and arranged in a circle.\nThe animal numbered i (2\u2264i\u2264N-1) is adjacent to the animals numbered i-1 and i+1. Also, the animal numbered 1 is adjacent to the animals numbered 2 and N, and the animal numbered N is adjacent to the animals numbered N-1 and 1.\nThere are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies.\nSnuke cannot tell the difference between these two species, and asked each animal the following question: \"Are your neighbors of the same species?\" The animal numbered i answered s_i. Here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species.\nMore formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.\nSimilarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise.\nSnuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. If there is such an assignment, show one such assignment. Otherwise, print -1.\n\n\n\n\nConstraints\n3 \u2264 N \u2264 10^{5}\ns is a string of length N consisting of o and x.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\ns\n\n\n\n\n\nOutputIf there does not exist an valid assignment that is consistent with s, print -1.\nOtherwise, print an string t in the following format. The output is considered correct if the assignment described by t is consistent with s.\n\nt is a string of length N consisting of S and W.\nIf t_i is S, it indicates that the animal numbered i is a sheep. If t_i is W, it indicates that the animal numbered i is a wolf.\n\n\n\n\n\n\n\nSample Input 16\nooxoox\n\n\n\n\n\nSample Output 1SSSWWS\n\nFor example, if the animals numbered 1, 2, 3, 4, 5 and 6 are respectively a sheep, sheep, sheep, wolf, wolf, and sheep, it is consistent with their responses. Besides, there is another valid assignment of species: a wolf, sheep, wolf, sheep, wolf and wolf.\nLet us remind you: if the neiboring animals are of the same species, a sheep answers o and a wolf answers x. If the neiboring animals are of different species, a sheep answers x and a wolf answers o.\n\n\n\n\n\n\n\n\nSample Input 23\noox\n\n\n\n\n\nSample Output 2-1\n\nPrint -1 if there is no valid assignment of species.\n\n\n\n\n\nSample Input 310\noxooxoxoox\n\n\n\n\n\nSample Output 3SSWWSSSWWS"}
{"id": "p03801", "problem": "Score : 700 points\n\n\nProblem StatementSnuke loves constructing integer sequences.\nThere are N piles of stones, numbered 1 through N.\nThe pile numbered i consists of a_i stones.\nSnuke will construct an integer sequence s of length \u03a3a_i, as follows:\n\nAmong the piles with the largest number of stones remaining, let x be the index of the pile with the smallest index. Append x to the end of s.\nSelect a pile with one or more stones remaining, and remove a stone from that pile.\nIf there is a pile with one or more stones remaining, go back to step 1. Otherwise, terminate the process.\n\nWe are interested in the lexicographically smallest sequence that can be constructed. For each of the integers 1,2,3,...,N, how many times does it occur in the lexicographically smallest sequence?\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^{5}\n1 \u2264 a_i \u2264 10^{9}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{N}\n\n\n\n\n\nOutputPrint N lines. The i-th line should contain the number of the occurrences of the integer i in the lexicographically smallest sequence that can be constructed.\n\n\n\n\n\n\nSample Input 12\n1 2\n\n\n\n\n\nSample Output 12\n1\n\nThe lexicographically smallest sequence is constructed as follows:\n\nSince the pile with the largest number of stones remaining is pile 2, append 2 to the end of s. Then, remove a stone from pile 2.\nSince the piles with the largest number of stones remaining are pile 1 and 2, append 1 to the end of s (we take the smallest index). Then, remove a stone from pile 2.\nSince the pile with the largest number of stones remaining is pile 1, append 1 to the end of s. Then, remove a stone from pile 1.\n\nThe resulting sequence is (2,1,1). In this sequence, 1 occurs twice, and 2 occurs once.\n\n\n\n\n\nSample Input 210\n1 2 1 3 2 4 2 5 8 1\n\n\n\n\n\nSample Output 210\n7\n0\n4\n0\n3\n0\n2\n3\n0"}
{"id": "p03802", "problem": "Score : 1200 points\n\n\nProblem StatementSnuke loves flags.\nSnuke is placing N flags on a line.\nThe i-th flag can be placed at either coordinate x_i or coordinate y_i.\nSnuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. Find the maximum possible value of d.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^{4}\n1 \u2264 x_i, y_i \u2264 10^{9}\nx_i and y_i are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 y_1\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13\n1 3\n2 5\n1 9\n\n\n\n\n\nSample Output 14\n\nThe optimal solution is to place the first flag at coordinate 1, the second flag at coordinate 5 and the third flag at coordinate 9. The smallest distance between two of the flags is 4 in this case.\n\n\n\n\n\nSample Input 25\n2 2\n2 2\n2 2\n2 2\n2 2\n\n\n\n\n\nSample Output 20\n\nThere can be more than one flag at the same position.\n\n\n\n\n\nSample Input 322\n93 6440\n78 6647\n862 11\n8306 9689\n798 99\n801 521\n188 206\n6079 971\n4559 209\n50 94\n92 6270\n5403 560\n803 83\n1855 99\n42 504\n75 484\n629 11\n92 122\n3359 37\n28 16\n648 14\n11 269\n\n\n\n\n\nSample Output 317"}
{"id": "p03803", "problem": "Score : 100 points\n\n\nProblem StatementAlice and Bob are playing One Card Poker.\nOne Card Poker is a two-player game using playing cards.  \nEach card in this game shows an integer between 1 and 13, inclusive.\nThe strength of a card is determined by the number written on it, as follows:  \nWeak 2 < 3 < 4 < 5 < 6 < 7 < 8 < 9 < 10 < 11 < 12 < 13 < 1 Strong  \nOne Card Poker is played as follows:  \n\nEach player picks one card from the deck. The chosen card becomes the player's hand.\nThe players reveal their hands to each other. The player with the stronger card wins the game.\nIf their cards are equally strong, the game is drawn.  \n\nYou are watching Alice and Bob playing the game, and can see their hands.\nThe number written on Alice's card is A, and the number written on Bob's card is B.\nWrite a program to determine the outcome of the game.  \n\n\n\n\nConstraints\n1\u2266A\u226613 \n1\u2266B\u226613 \nA and B are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputPrint Alice if Alice will win. Print Bob if Bob will win. Print Draw if the game will be drawn.\n\n\n\n\n\n\nSample Input 18 6\n\n\n\n\n\nSample Output 1Alice\n\n8 is written on Alice's card, and 6 is written on Bob's card.\nAlice has the stronger card, and thus the output should be Alice.\n\n\n\n\n\nSample Input 21 1\n\n\n\n\n\nSample Output 2Draw\n\nSince their cards have the same number, the game will be drawn.\n\n\n\n\n\nSample Input 313 1\n\n\n\n\n\nSample Output 3Bob"}
{"id": "p03804", "problem": "Score : 200 points\n\n\nProblem StatementYou are given an image A composed of N rows and N columns of pixels, and a template image B composed of M rows and M columns of pixels.\nA pixel is the smallest element of an image, and in this problem it is a square of size 1\u00d71.\nAlso, the given images are binary images, and the color of each pixel is either white or black.  \nIn the input, every pixel is represented by a character: . corresponds to a white pixel, and # corresponds to a black pixel.\nThe image A is given as N strings A_1,...,A_N.\nThe j-th character in the string A_i corresponds to the pixel at the i-th row and j-th column of the image A (1\u2266i,j\u2266N).\nSimilarly, the template image B is given as M strings B_1,...,B_M.\nThe j-th character in the string B_i corresponds to the pixel at the i-th row and j-th column of the template image B (1\u2266i,j\u2266M).  \nDetermine whether the template image B is contained in the image A when only parallel shifts can be applied to the images.  \n\n\n\n\nConstraints\n1\u2266M\u2266N\u226650 \nA_i is a string of length N consisting of # and ..\nB_i is a string of length M consisting of # and ..\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nA_1\nA_2\n:  \nA_N\nB_1\nB_2\n:  \nB_M\n\n\n\n\n\nOutputPrint Yes if the template image B is contained in the image A. Print No otherwise.\n\n\n\n\n\n\nSample Input 13 2\n#.#\n.#.\n#.#\n#.\n.#\n\n\n\n\n\nSample Output 1Yes\n\nThe template image B is identical to the upper-left 2 \u00d7 2 subimage and the lower-right 2 \u00d7 2 subimage of A. Thus, the output should be Yes.\n\n\n\n\n\nSample Input 24 1\n....\n....\n....\n....\n#\n\n\n\n\n\nSample Output 2No\n\nThe template image B, composed of a black pixel, is not contained in the image A composed of white pixels."}
{"id": "p03805", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an undirected unweighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\nHow many different paths start from vertex 1 and visit all the vertices exactly once?\nHere, the endpoints of a path are considered visited.  \nFor example, let us assume that the following undirected graph shown in Figure 1 is given.\n\n\nFigure 1: an example of an undirected graph\n\nThe following path shown in Figure 2 satisfies the condition.\n\n\nFigure 2: an example of a path that satisfies the condition\n\nHowever, the following path shown in Figure 3 does not satisfy the condition, because it does not visit all the vertices.\n\n\nFigure 3: an example of a path that does not satisfy the condition\n\nNeither the following path shown in Figure 4, because it does not start from vertex 1.\n\n\nFigure 4: another example of a path that does not satisfy the condition\n\n\n\n\n\nConstraints\n2\u2266N\u22668 \n0\u2266M\u2266N(N-1)/2 \n1\u2266a_i<b_i\u2266N \nThe given graph contains neither self-loops nor double edges.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M  \na_1 b_1  \na_2 b_2\n:  \na_M b_M  \n\n\n\n\n\nOutputPrint the number of the different paths that start from vertex 1 and visit all the vertices exactly once.\n\n\n\n\n\n\nSample Input 13 3\n1 2\n1 3\n2 3\n\n\n\n\n\nSample Output 12\n\nThe given graph is shown in the following figure:\n\n\n\nThe following two paths satisfy the condition:\n\n\n\n\n\n\n\n\nSample Input 27 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\n\n\n\nSample Output 21\n\nThis test case is the same as the one described in the problem statement."}
{"id": "p03806", "problem": "Score : 400 points\n\n\nProblem StatementDolphin is planning to generate a small amount of a certain chemical substance C.\nIn order to generate the substance C, he must prepare a solution which is a mixture of two substances A and B in the ratio of M_a:M_b.\nHe does not have any stock of chemicals, however, so he will purchase some chemicals at a local pharmacy.\nThe pharmacy sells N kinds of chemicals. For each kind of chemical, there is exactly one package of that chemical in stock.\nThe package of chemical i contains a_i grams of the substance A and b_i grams of the substance B, and is sold for c_i yen (the currency of Japan).\nDolphin will purchase some of these packages. For some reason, he must use all contents of the purchased packages to generate the substance C.\nFind the minimum amount of money required to generate the substance C.\nIf it is not possible to generate the substance C by purchasing any combination of packages at the pharmacy, report that fact.  \n\n\n\n\nConstraints\n1\u2266N\u226640 \n1\u2266a_i,b_i\u226610 \n1\u2266c_i\u2266100 \n1\u2266M_a,M_b\u226610 \ngcd(M_a,M_b)=1\na_i, b_i, c_i, M_a and M_b are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M_a M_b  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_N b_N c_N  \n\n\n\n\n\nOutputPrint the minimum amount of money required to generate the substance C. If it is not possible to generate the substance C, print -1 instead.\n\n\n\n\n\n\nSample Input 13 1 1\n1 2 1\n2 1 2\n3 3 10\n\n\n\n\n\nSample Output 13\n\nThe amount of money spent will be minimized by purchasing the packages of chemicals 1 and 2.\nIn this case, the mixture of the purchased chemicals will contain 3 grams of the substance A and 3 grams of the substance B, which are in the desired ratio: 3:3=1:1.\nThe total price of these packages is 3 yen.  \n\n\n\n\n\nSample Input 21 1 10\n10 10 10\n\n\n\n\n\nSample Output 2-1\n\nThe ratio 1:10 of the two substances A and B cannot be satisfied by purchasing any combination of the packages. Thus, the output should be -1."}
{"id": "p03807", "problem": "Score : 300 points\n\n\nProblem StatementThere are N integers written on a blackboard. The i-th integer is A_i.\nTakahashi will repeatedly perform the following operation on these numbers:\n\nSelect a pair of integers, A_i and A_j, that have the same parity (that is, both are even or both are odd) and erase them.\nThen, write a new integer on the blackboard that is equal to the sum of those integers, A_i+A_j.\n\nDetermine whether it is possible to have only one integer on the blackboard.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 10^9\nA_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputIf it is possible to have only one integer on the blackboard, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 13\n1 2 3\n\n\n\n\n\nSample Output 1YES\n\nIt is possible to have only one integer on the blackboard, as follows:\n\nErase 1 and 3 from the blackboard, then write 4. Now, there are two integers on the blackboard: 2 and 4.\nErase 2 and 4 from the blackboard, then write 6. Now, there is only one integer on the blackboard: 6.\n\n\n\n\n\n\nSample Input 25\n1 2 3 4 5\n\n\n\n\n\nSample Output 2NO"}
{"id": "p03808", "problem": "Score : 500 points\n\n\nProblem StatementThere are N boxes arranged in a circle. The i-th box contains A_i stones.\nDetermine whether it is possible to remove all the stones from the boxes by repeatedly performing the following operation:\n\nSelect one box. Let the box be the i-th box. Then, for each j from 1 through N, remove exactly j stones from the (i+j)-th box. Here, the (N+k)-th box is identified with the k-th box.\n\nNote that the operation cannot be performed if there is a box that does not contain enough number of stones to be removed.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputIf it is possible to remove all the stones from the boxes, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 15\n4 5 1 2 3\n\n\n\n\n\nSample Output 1YES\n\nAll the stones can be removed in one operation by selecting the second box.\n\n\n\n\n\nSample Input 25\n6 9 12 10 8\n\n\n\n\n\nSample Output 2YES\n\n\n\n\n\n\nSample Input 34\n1 2 3 1\n\n\n\n\n\nSample Output 3NO"}
{"id": "p03809", "problem": "Score : 700 points\n\n\nProblem StatementThere is a tree with N vertices, numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nCurrently, there are A_i stones placed on vertex i.\nDetermine whether it is possible to remove all the stones from the vertices by repeatedly performing the following operation:\n\nSelect a pair of different leaves. Then, remove exactly one stone from every vertex on the path between those two vertices.\n  Here, a leaf is a vertex of the tree whose degree is 1, and the selected leaves themselves are also considered as vertices on the path connecting them.\n\nNote that the operation cannot be performed if there is a vertex with no stone on the path.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 10^5\n1 \u2266 a_i,b_i \u2266 N\n0 \u2266 A_i \u2266 10^9\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputIf it is possible to remove all the stones from the vertices, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 15\n1 2 1 1 2\n2 4\n5 2\n3 2\n1 3\n\n\n\n\n\nSample Output 1YES\n\nAll the stones can be removed, as follows:\n\nSelect vertices 4 and 5. Then, there is one stone remaining on each vertex except 4.\nSelect vertices 1 and 5. Then, there is no stone on any vertex.\n\n\n\n\n\n\nSample Input 23\n1 2 1\n1 2\n2 3\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 36\n3 2 2 2 2 2\n1 2\n2 3\n1 4\n1 5\n4 6\n\n\n\n\n\nSample Output 3YES"}
{"id": "p03810", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N integers written on a blackboard. The i-th integer is A_i, and the greatest common divisor of these integers is 1.\nTakahashi and Aoki will play a game using these integers. In this game, starting from Takahashi the two player alternately perform the following operation:\n\nSelect one integer on the blackboard that is not less than 2, and subtract 1 from the integer.\nThen, divide all the integers on the black board by g, where g is the greatest common divisor of the integers written on the blackboard.\n\nThe player who is left with only 1s on the blackboard and thus cannot perform the operation, loses the game.\nAssuming that both players play optimally, determine the winner of the game.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 10^9\nThe greatest common divisor of the integers from A_1 through A_N is 1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputIf Takahashi will win, print First. If Aoki will win, print Second.\n\n\n\n\n\n\nSample Input 13\n3 6 7\n\n\n\n\n\nSample Output 1First\n\nTakahashi, the first player, can win as follows:\n\nTakahashi subtracts 1 from 7. Then, the integers become: (1,2,2).\nAoki subtracts 1 from 2. Then, the integers become: (1,1,2).\nTakahashi subtracts 1 from 2. Then, the integers become: (1,1,1).\n\n\n\n\n\n\nSample Input 24\n1 2 4 8\n\n\n\n\n\nSample Output 2First\n\n\n\n\n\n\nSample Input 35\n7 8 8 8 8\n\n\n\n\n\nSample Output 3Second"}
{"id": "p03811", "problem": "Score : 1600 points\n\n\nProblem StatementThere are N integers written on a blackboard. The i-th integer is A_i.\nTakahashi and Aoki will arrange these integers in a row, as follows:\n\nFirst, Takahashi will arrange the integers as he wishes.\nThen, Aoki will repeatedly swap two adjacent integers that are coprime, as many times as he wishes.\n\nWe will assume that Takahashi acts optimally so that the eventual sequence will be lexicographically as small as possible, and we will also assume that Aoki acts optimally so that the eventual sequence will be lexicographically as large as possible.\nFind the eventual sequence that will be produced.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 2000\n1 \u2266 A_i \u2266 10^8\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputPrint the eventual sequence that will be produced, in a line.\n\n\n\n\n\n\nSample Input 15\n1 2 3 4 5\n\n\n\n\n\nSample Output 15 3 2 4 1\n\nIf Takahashi arranges the given integers in the order (1,2,3,4,5), they will become (5,3,2,4,1) after Aoki optimally manipulates them.\n\n\n\n\n\nSample Input 24\n2 3 4 6\n\n\n\n\n\nSample Output 22 4 6 3"}
{"id": "p03812", "problem": "Score : 1600 points\n\n\nProblem StatementThere is a tree with N vertices, numbered 1 through N.\nThe i-th of the N-1 edges connects vertices a_i and b_i.\nCurrently, there are A_i stones placed on vertex i.\nTakahashi and Aoki will play a game using this tree.\nFirst, Takahashi will select a vertex and place a piece on it.\nThen, starting from Takahashi, they will alternately perform the following operation:\n\nRemove one stone from the vertex currently occupied by the piece.\nThen, move the piece to a vertex that is adjacent to the currently occupied vertex.\n\nThe player who is left with no stone on the vertex occupied by the piece and thus cannot perform the operation, loses the game.\nFind all the vertices v such that Takahashi can place the piece on v at the beginning and win the game.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 3000\n1 \u2266 a_i,b_i \u2266 N\n0 \u2266 A_i \u2266 10^9\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputPrint the indices of the vertices v such that Takahashi can place the piece on v at the beginning and win the game, in a line, in ascending order.\n\n\n\n\n\n\nSample Input 13\n1 2 3\n1 2\n2 3\n\n\n\n\n\nSample Output 12\n\nThe following is one possible progress of the game when Takahashi places the piece on vertex 2:\n\nTakahashi moves the piece to vertex 1. The number of the stones on each vertex is now: (1,1,3).\nAoki moves the piece to vertex 2. The number of the stones on each vertex is now: (0,1,3).\nTakahashi moves the piece to vertex 1. The number of the stones on each vertex is now: (0,0,3).\nAoki cannot take a stone from the vertex, and thus Takahashi wins.\n\n\n\n\n\n\nSample Input 25\n5 4 1 2 3\n1 2\n1 3\n2 4\n2 5\n\n\n\n\n\nSample Output 21 2\n\n\n\n\n\n\nSample Input 33\n1 1 1\n1 2\n2 3\n\n\n\n\n\nSample Output 3\n\nNote that the correct output may be an empty line."}
{"id": "p03813", "problem": "Score : 100 points\n\n\nProblem StatementSmeke has decided to participate in AtCoder Beginner Contest (ABC) if his current rating is less than 1200, and participate in AtCoder Regular Contest (ARC) otherwise.\nYou are given Smeke's current rating, x. Print ABC if Smeke will participate in ABC, and print ARC otherwise.\n\n\n\n\nConstraints\n1 \u2266 x \u2266 3{,}000\nx is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 11000\n\n\n\n\n\nSample Output 1ABC\n\nSmeke's current rating is less than 1200, thus the output should be ABC.\n\n\n\n\n\nSample Input 22000\n\n\n\n\n\nSample Output 2ARC\n\nSmeke's current rating is not less than 1200, thus the output should be ARC."}
{"id": "p03814", "problem": "Score : 200 points\n\n\nProblem StatementSnuke has decided to construct a string that starts with A and ends with Z, by taking out a substring of a string s (that is, a consecutive part of s).\nFind the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with A and ends with Z.\n\n\n\n\nConstraints\n1 \u2266 |s| \u2266 200{,}000\ns consists of uppercase English letters.\nThere exists a substring of s that starts with A and ends with Z.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 1QWERTYASDFZXCV\n\n\n\n\n\nSample Output 15\n\nBy taking out the seventh through eleventh characters, it is possible to construct ASDFZ, which starts with A and ends with Z.\n\n\n\n\n\nSample Input 2ZABCZ\n\n\n\n\n\nSample Output 24\n\n\n\n\n\n\nSample Input 3HASFJGHOGAKZZFEGA\n\n\n\n\n\nSample Output 312"}
{"id": "p03815", "problem": "Score : 300 points\n\n\nProblem StatementSnuke has decided to play with a six-sided die. Each of its six sides shows an integer 1 through 6, and two numbers on opposite sides always add up to 7.\nSnuke will first put the die on the table with an arbitrary side facing upward, then repeatedly perform the following operation:\n\nOperation: Rotate the die 90\u00b0 toward one of the following directions: left, right, front (the die will come closer) and back (the die will go farther). Then, obtain y points where y is the number written in the side facing upward.\n\nFor example, let us consider the situation where the side showing 1 faces upward, the near side shows 5 and the right side shows 4, as illustrated in the figure.\nIf the die is rotated toward the right as shown in the figure, the side showing 3 will face upward.\nBesides, the side showing 4 will face upward if the die is rotated toward the left, the side showing 2 will face upward if the die is rotated toward the front, and the side showing 5 will face upward if the die is rotated toward the back.\n\n\n\nFind the minimum number of operation Snuke needs to perform in order to score at least x points in total.\n\n\n\n\nConstraints\n1 \u2266 x \u2266 10^{15}\nx is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 12\n\n\n\n\n\n\nSample Input 2149696127901\n\n\n\n\n\nSample Output 227217477801"}
{"id": "p03816", "problem": "Score : 400 points\n\n\nProblem StatementSnuke has decided to play a game using cards.\nHe has a deck consisting of N cards. On the i-th card from the top, an integer A_i is written.\nHe will perform the operation described below zero or more times, so that the values written on the remaining cards will be pairwise distinct. Find the maximum possible number of remaining cards. Here, N is odd, which guarantees that at least one card can be kept.\nOperation: Take out three arbitrary cards from the deck. Among those three cards, eat two: one with the largest value, and another with the smallest value. Then, return the remaining one card to the deck.\n\n\n\n\nConstraints\n3 \u2266 N \u2266 10^{5}\nN is odd.\n1 \u2266 A_i \u2266 10^{5}\nA_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 A_3 ... A_{N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 15\n1 2 1 3 7\n\n\n\n\n\nSample Output 13\n\nOne optimal solution is to perform the operation once, taking out two cards with 1 and one card with 2. One card with 1 and another with 2 will be eaten, and the remaining card with 1 will be returned to deck. Then, the values written on the remaining cards in the deck will be pairwise distinct: 1, 3 and 7.\n\n\n\n\n\nSample Input 215\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1\n\n\n\n\n\nSample Output 27"}
{"id": "p03817", "problem": "Score : 300 points\n\n\nProblem StatementSnuke has decided to play with a six-sided die. Each of its six sides shows an integer 1 through 6, and two numbers on opposite sides always add up to 7.\nSnuke will first put the die on the table with an arbitrary side facing upward, then repeatedly perform the following operation:\n\nOperation: Rotate the die 90\u00b0 toward one of the following directions: left, right, front (the die will come closer) and back (the die will go farther). Then, obtain y points where y is the number written in the side facing upward.\n\nFor example, let us consider the situation where the side showing 1 faces upward, the near side shows 5 and the right side shows 4, as illustrated in the figure.\nIf the die is rotated toward the right as shown in the figure, the side showing 3 will face upward.\nBesides, the side showing 4 will face upward if the die is rotated toward the left, the side showing 2 will face upward if the die is rotated toward the front, and the side showing 5 will face upward if the die is rotated toward the back.\n\n\n\nFind the minimum number of operation Snuke needs to perform in order to score at least x points in total.\n\n\n\n\nConstraints\n1 \u2266 x \u2266 10^{15}\nx is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 12\n\n\n\n\n\n\nSample Input 2149696127901\n\n\n\n\n\nSample Output 227217477801"}
{"id": "p03818", "problem": "Score : 400 points\n\n\nProblem StatementSnuke has decided to play a game using cards.\nHe has a deck consisting of N cards. On the i-th card from the top, an integer A_i is written.\nHe will perform the operation described below zero or more times, so that the values written on the remaining cards will be pairwise distinct. Find the maximum possible number of remaining cards. Here, N is odd, which guarantees that at least one card can be kept.\nOperation: Take out three arbitrary cards from the deck. Among those three cards, eat two: one with the largest value, and another with the smallest value. Then, return the remaining one card to the deck.\n\n\n\n\nConstraints\n3 \u2266 N \u2266 10^{5}\nN is odd.\n1 \u2266 A_i \u2266 10^{5}\nA_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 A_3 ... A_{N}\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 15\n1 2 1 3 7\n\n\n\n\n\nSample Output 13\n\nOne optimal solution is to perform the operation once, taking out two cards with 1 and one card with 2. One card with 1 and another with 2 will be eaten, and the remaining card with 1 will be returned to deck. Then, the values written on the remaining cards in the deck will be pairwise distinct: 1, 3 and 7.\n\n\n\n\n\nSample Input 215\n1 3 5 2 1 3 2 8 8 6 2 6 11 1 1\n\n\n\n\n\nSample Output 27"}
{"id": "p03819", "problem": "Score : 700 points\n\n\nProblem StatementSnuke has decided to play a game, where the player runs a railway company.\nThere are M+1 stations on Snuke Line, numbered 0 through M.\nA train on Snuke Line stops at station 0 and every d-th station thereafter, where d is a predetermined constant for each train.\nFor example, if d = 3, the train stops at station 0, 3, 6, 9, and so forth.\nThere are N kinds of souvenirs sold in areas around Snuke Line. The i-th kind of souvenirs can be purchased when the train stops at one of the following stations: stations l_i, l_i+1, l_i+2, ..., r_i.\nThere are M values of d, the interval between two stops, for trains on Snuke Line: 1, 2, 3, ..., M.\nFor each of these M values, find the number of the kinds of souvenirs that can be purchased if one takes a train with that value of d at station 0.\nHere, assume that it is not allowed to change trains.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 3 \u00d7 10^{5}\n1 \u2266 M \u2266 10^{5}\n1 \u2266 l_i \u2266 r_i \u2266 M\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nl_1 r_1\n:\nl_{N} r_{N}\n\n\n\n\n\nOutputPrint the answer in M lines. The i-th line should contain the maximum number of the kinds of souvenirs that can be purchased if one takes a train stopping every i-th station.\n\n\n\n\n\n\nSample Input 13 3\n1 2\n2 3\n3 3\n\n\n\n\n\nSample Output 13\n2\n2\n\n\nIf one takes a train stopping every station, three kinds of souvenirs can be purchased: kind 1, 2 and 3.\nIf one takes a train stopping every second station, two kinds of souvenirs can be purchased: kind 1 and 2.\nIf one takes a train stopping every third station, two kinds of souvenirs can be purchased: kind 2 and 3.\n\n\n\n\n\n\nSample Input 27 9\n1 7\n5 9\n5 7\n5 9\n1 1\n6 8\n3 4\n\n\n\n\n\nSample Output 27\n6\n6\n5\n4\n5\n5\n3\n2"}
{"id": "p03820", "problem": "Score : 1200 points\n\n\nProblem StatementSnuke has decided to play with N cards and a deque (that is, a double-ended queue).\nEach card shows an integer from 1 through N, and the deque is initially empty.\nSnuke will insert the cards at the beginning or the end of the deque one at a time, in order from 1 to N.\nThen, he will perform the following action N times: take out the card from the beginning or the end of the deque and eat it.\nAfterwards, we will construct an integer sequence by arranging the integers written on the eaten cards, in the order they are eaten. Among the sequences that can be obtained in this way, find the number of the sequences such that the K-th element is 1. Print the answer modulo 10^{9} + 7.\n\n\n\n\nConstraints\n1 \u2266 K \u2266 N \u2266 2{,}000\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the answer modulo 10^{9} + 7.\n\n\n\n\n\n\nSample Input 12 1\n\n\n\n\n\nSample Output 11\n\nThere is one sequence satisfying the condition: 1,2. One possible way to obtain this sequence is the following:\n\nInsert both cards, 1 and 2, at the end of the deque.\nEat the card at the beginning of the deque twice.\n\n\n\n\n\n\nSample Input 217 2\n\n\n\n\n\nSample Output 2262144\n\n\n\n\n\n\nSample Input 32000 1000\n\n\n\n\n\nSample Output 3674286644"}
{"id": "p03821", "problem": "Score : 300 points\n\n\nProblem StatementThere are an integer sequence A_1,...,A_N consisting of N terms, and N buttons.\nWhen the i-th (1 \u2266 i \u2266 N) button is pressed, the values of the i terms from the first through the i-th are all incremented by 1.\nThere is also another integer sequence B_1,...,B_N. Takahashi will push the buttons some number of times so that for every i, A_i will be a multiple of B_i.\nFind the minimum number of times Takahashi will press the buttons.\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2266 N \u2266 10^5\n0 \u2266 A_i \u2266 10^9(1 \u2266 i \u2266 N)\n1 \u2266 B_i \u2266 10^9(1 \u2266 i \u2266 N)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 B_1\n:\nA_N B_N\n\n\n\n\n\nOutputPrint an integer representing the minimum number of times Takahashi will press the buttons.\n\n\n\n\n\n\nSample Input 13\n3 5\n2 7\n9 4\n\n\n\n\n\nSample Output 17\n\nPress the first button twice, the second button twice and the third button three times.\n\n\n\n\n\nSample Input 27\n3 1\n4 1\n5 9\n2 6\n5 3\n5 8\n9 7\n\n\n\n\n\nSample Output 222"}
{"id": "p03822", "problem": "Score : 800 points\n\n\nProblem StatementN contestants participated in a competition. The total of N-1 matches were played in a knockout tournament.\nFor some reasons, the tournament may not be \"fair\" for all the contestants.\nThat is, the number of the matches that must be played in order to win the championship may be different for each contestant. The structure of the tournament is formally described at the end of this statement.\nAfter each match, there were always one winner and one loser. The last contestant standing was declared the champion.\n\n\nFigure: an example of a tournament\n\nFor convenience, the contestants were numbered 1 through N. The contestant numbered 1 was the champion, and the contestant numbered i(2 \u2266 i \u2266 N) was defeated in a match against the contestant numbered a_i.\nWe will define the depth of the tournament as the maximum number of the matches that must be played in order to win the championship over all the contestants.\nFind the minimum possible depth of the tournament.\nThe formal description of the structure of the tournament is as follows. In the i-th match, one of the following played against each other:\n\nTwo predetermined contestants\nOne predetermined contestant and the winner of the j-th match, where j(j<i) was predetermined\nThe winner of the j-th match and the winner of the k-th match, where j and k (j,k<i, j \u2260 k) were predetermined\n\nSuch structure is valid structure of the tournament, if and only if no contestant who has already been defeated in a match will never play in a match, regardless of the outcome of the matches.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 10^5\n1 \u2266 a_i \u2266 N(2 \u2266 i \u2266 N)\nIt is guaranteed that the input is consistent (that is, there exists at least one tournament that matches the given information).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_2\n:\na_N\n\n\n\n\n\nOutputPrint the minimum possible depth of the tournament.\n\n\n\n\n\n\nSample Input 15\n1\n1\n2\n4\n\n\n\n\n\nSample Output 13\n\nThe following tournament and the result of the matches are consistent with the given information:\n\nIn the first match, contestants 4 and 5 played against each other, and contestant 4 won.\nIn the second match, contestants 2 and 4 played against each other, and contestant 2 won.\nIn the third match, contestants 1 and 3 played against each other, and contestant 1 won.\nIn the fourth match, contestants 1 and 2 played against each other, and contestant 1 won.\n\n\n\n\nThe depth of this tournament is 3, since contestant 5 must play three matches in order to win the championship.\nThere is no tournament with depth 2 or less that is consistent with the given information, thus the output should be 3.\n\n\n\n\n\nSample Input 27\n1\n2\n1\n3\n1\n4\n\n\n\n\n\nSample Output 23\n\n\n\n\n\n\nSample Input 34\n4\n4\n1\n\n\n\n\n\nSample Output 33"}
{"id": "p03823", "problem": "Score : 1100 points\n\n\nProblem StatementThere is a set consisting of N distinct integers. The i-th smallest element in this set is S_i. We want to divide this set into two sets, X and Y, such that:\n\nThe absolute difference of any two distinct elements in X is A or greater.\nThe absolute difference of any two distinct elements in Y is B or greater.\n\nHow many ways are there to perform such division, modulo 10^9 + 7? Note that one of X and Y may be empty.\n\n\n\n\nConstraints\nAll input values are integers.\n1 \u2266 N \u2266 10^5\n1 \u2266 A , B \u2266 10^{18}\n0 \u2266 S_i \u2266 10^{18}(1 \u2266 i \u2266 N)\nS_i < S_{i+1}(1 \u2266 i \u2266 N - 1)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B\nS_1\n:\nS_N\n\n\n\n\n\nOutputPrint the number of the different divisions under the conditions, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 15 3 7\n1\n3\n6\n9\n12\n\n\n\n\n\nSample Output 15\n\nThere are five ways to perform division:\n\nX={1,6,9,12}, Y={3}\nX={1,6,9}, Y={3,12}\nX={3,6,9,12}, Y={1}\nX={3,6,9}, Y={1,12}\nX={3,6,12}, Y={1,9}\n\n\n\n\n\n\nSample Input 27 5 3\n0\n2\n4\n7\n8\n11\n15\n\n\n\n\n\nSample Output 24\n\n\n\n\n\n\nSample Input 38 2 9\n3\n4\n5\n13\n15\n22\n26\n32\n\n\n\n\n\nSample Output 313\n\n\n\n\n\n\nSample Input 43 3 4\n5\n6\n7\n\n\n\n\n\nSample Output 40"}
{"id": "p03824", "problem": "Score : 1400 points\n\n\nProblem StatementWe will recursively define uninity of a tree, as follows: (Uni is a Japanese word for sea urchins.)\n\nA tree consisting of one vertex is a tree of uninity 0.\nSuppose there are zero or more trees of uninity k, and a vertex v. If a vertex is selected from each tree of uninity k and connected to v with an edge, the resulting tree is a tree of uninity k+1.\n\nIt can be shown that a tree of uninity k is also a tree of uninity k+1,k+2,..., and so forth.\nYou are given a tree consisting of N vertices.\nThe vertices of the tree are numbered 1 through N, and the i-th of the N-1 edges connects vertices a_i and b_i.\nFind the minimum k such that the given tree is a tree of uninity k.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 10^5\n1 \u2266 a_i, b_i \u2266 N(1 \u2266 i \u2266 N-1)\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputPrint the minimum k such that the given tree is a tree of uninity k.\n\n\n\n\n\n\nSample Input 17\n1 2\n2 3\n2 4\n4 6\n6 7\n7 5\n\n\n\n\n\nSample Output 12\n\nA tree of uninity 1 consisting of vertices 1, 2, 3 and 4 can be constructed from the following: a tree of uninity 0 consisting of vertex 1, a tree of uninity 0 consisting of vertex 3, a tree of uninity 0 consisting of vertex 4, and vertex 2.\nA tree of uninity 1 consisting of vertices 5 and 7 can be constructed from the following: a tree of uninity 1 consisting of vertex 5, and vertex 7.\nA tree of uninity 2 consisting of vertices 1, 2, 3, 4, 5, 6 and 7 can be constructed from the following: a tree of uninity 1 consisting of vertex 1, 2, 3 and 4, a tree of uninity 1 consisting of vertex 5 and 7, and vertex 6.\n\n\n\n\n\nSample Input 212\n1 2\n2 3\n2 4\n4 5\n5 6\n6 7\n7 8\n5 9\n9 10\n10 11\n11 12\n\n\n\n\n\nSample Output 23"}
{"id": "p03825", "problem": "Score : 1600 points\n\n\nProblem StatementThere are N zeros and M ones written on a blackboard.\nStarting from this state, we will repeat the following operation: select K of the rational numbers written on the blackboard and erase them, then write a new number on the blackboard that is equal to the arithmetic mean of those K numbers.\nHere, assume that N + M - 1 is divisible by K - 1.\nThen, if we repeat this operation until it is no longer applicable, there will be eventually one rational number left on the blackboard.\nFind the number of the different possible values taken by this rational number, modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \u2266 N, M \u2266 2000\n2 \u2266 K \u2266 2000\nN + M - 1 is divisible by K - 1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M K\n\n\n\n\n\nOutputPrint the number of the different possible values taken by the rational number that will be eventually left on the blackboard, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 12 2 2\n\n\n\n\n\nSample Output 15\n\nThere are five possible values for the number that will be eventually left on the blackboard: \\frac{1}{4}, \\frac{3}{8}, \\frac{1}{2}, \\frac{5}{8} and \\frac{3}{4}.\nFor example, \\frac{3}{8} can be eventually left if we:\n\nErase 0 and 1, then write \\frac{1}{2}.\nErase \\frac{1}{2} and 1, then write \\frac{3}{4}.\nErase 0 and \\frac{3}{4}, then write \\frac{3}{8}.\n\n\n\n\n\n\nSample Input 23 4 3\n\n\n\n\n\nSample Output 29\n\n\n\n\n\n\nSample Input 3150 150 14\n\n\n\n\n\nSample Output 3937426930"}
{"id": "p03826", "problem": "Score : 100 points\n\n\nProblem StatementThere are two rectangles.\nThe lengths of the vertical sides of the first rectangle are A, and the lengths of the horizontal sides of the first rectangle are B.\nThe lengths of the vertical sides of the second rectangle are C, and the lengths of the horizontal sides of the second rectangle are D.\nPrint the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2264A\u226410^4\n1\u2264B\u226410^4\n1\u2264C\u226410^4\n1\u2264D\u226410^4\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B C D\n\n\n\n\n\nOutputPrint the area of the rectangle with the larger area.\nIf the two rectangles have equal areas, print that area.\n\n\n\n\n\n\nSample Input 13 5 2 7\n\n\n\n\n\nSample Output 115\n\nThe first rectangle has an area of 3\u00d75=15, and the second rectangle has an area of 2\u00d77=14.\nThus, the output should be 15, the larger area.\n\n\n\n\n\nSample Input 2100 600 200 300\n\n\n\n\n\nSample Output 260000"}
{"id": "p03827", "problem": "Score : 200 points\n\n\nProblem StatementYou have an integer variable x.\nInitially, x=0.\nSome person gave you a string S of length N, and using the string you performed the following operation N times.\nIn the i-th operation, you incremented the value of x by 1 if S_i=I, and decremented the value of x by 1 if S_i=D.\nFind the maximum value taken by x during the operations (including before the first operation, and after the last operation).\n\n\n\n\nConstraints\n1\u2264N\u2264100\n|S|=N\nNo characters except I and D occur in S.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nS\n\n\n\n\n\nOutputPrint the maximum value taken by x during the operations.\n\n\n\n\n\n\nSample Input 15\nIIDID\n\n\n\n\n\nSample Output 12\n\nAfter each operation, the value of x becomes 1, 2, 1, 2 and 1, respectively. Thus, the output should be 2, the maximum value.\n\n\n\n\n\nSample Input 27\nDDIDDII\n\n\n\n\n\nSample Output 20\n\nThe initial value x=0 is the maximum value taken by x, thus the output should be 0."}
{"id": "p03828", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2264N\u226410^3\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the number of the positive divisors of N!, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 14\n\nThere are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4.\n\n\n\n\n\nSample Input 26\n\n\n\n\n\nSample Output 230\n\n\n\n\n\n\nSample Input 31000\n\n\n\n\n\nSample Output 3972926972"}
{"id": "p03829", "problem": "Score : 500 points\n\n\nProblem StatementThere are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i.\nYou are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel:\n\n\nWalk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered.\n\n\nFind the minimum possible total increase of your fatigue level when you visit all the towns in these two ways.\n\n\n\n\nConstraints\nAll input values are integers.\n2\u2264N\u226410^5\n1\u2264X_i\u226410^9\nFor all i(1\u2264i\u2264N-1), X_i<X_{i+1}.\n1\u2264A\u226410^9\n1\u2264B\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B\nX_1 X_2 ... X_N\n\n\n\n\n\nOutputPrint the minimum possible total increase of your fatigue level when you visit all the towns.\n\n\n\n\n\n\nSample Input 14 2 5\n1 2 5 7\n\n\n\n\n\nSample Output 111\n\nFrom town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2\u00d71+5+2\u00d72=11, which is the minimum possible value.\n\n\n\n\n\nSample Input 27 1 100\n40 43 45 105 108 115 124\n\n\n\n\n\nSample Output 284\n\nFrom town 1, walk all the way to town 7.\nThe total increase of your fatigue level in this case is 84, which is the minimum possible value.\n\n\n\n\n\nSample Input 37 1 2\n24 35 40 68 72 99 103\n\n\n\n\n\nSample Output 312\n\nVisit all the towns in any order by teleporting six times.\nThe total increase of your fatigue level in this case is 12, which is the minimum possible value."}
{"id": "p03830", "problem": "Score : 300 points\n\n\nProblem StatementYou are given an integer N.\nFind the number of the positive divisors of N!, modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2264N\u226410^3\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the number of the positive divisors of N!, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 14\n\nThere are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4.\n\n\n\n\n\nSample Input 26\n\n\n\n\n\nSample Output 230\n\n\n\n\n\n\nSample Input 31000\n\n\n\n\n\nSample Output 3972926972"}
{"id": "p03831", "problem": "Score : 500 points\n\n\nProblem StatementThere are N towns on a line running east-west.\nThe towns are numbered 1 through N, in order from west to east.\nEach point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.\nThe coordinate of town i is X_i.\nYou are now at town 1, and you want to visit all the other towns.\nYou have two ways to travel:\n\n\nWalk on the line.\nYour fatigue level increases by A each time you travel a distance of 1, regardless of direction.\n\n\nTeleport to any location of your choice.\nYour fatigue level increases by B, regardless of the distance covered.\n\n\nFind the minimum possible total increase of your fatigue level when you visit all the towns in these two ways.\n\n\n\n\nConstraints\nAll input values are integers.\n2\u2264N\u226410^5\n1\u2264X_i\u226410^9\nFor all i(1\u2264i\u2264N-1), X_i<X_{i+1}.\n1\u2264A\u226410^9\n1\u2264B\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B\nX_1 X_2 ... X_N\n\n\n\n\n\nOutputPrint the minimum possible total increase of your fatigue level when you visit all the towns.\n\n\n\n\n\n\nSample Input 14 2 5\n1 2 5 7\n\n\n\n\n\nSample Output 111\n\nFrom town 1, walk a distance of 1 to town 2, then teleport to town 3, then walk a distance of 2 to town 4.\nThe total increase of your fatigue level in this case is 2\u00d71+5+2\u00d72=11, which is the minimum possible value.\n\n\n\n\n\nSample Input 27 1 100\n40 43 45 105 108 115 124\n\n\n\n\n\nSample Output 284\n\nFrom town 1, walk all the way to town 7.\nThe total increase of your fatigue level in this case is 84, which is the minimum possible value.\n\n\n\n\n\nSample Input 37 1 2\n24 35 40 68 72 99 103\n\n\n\n\n\nSample Output 312\n\nVisit all the towns in any order by teleporting six times.\nThe total increase of your fatigue level in this case is 12, which is the minimum possible value."}
{"id": "p03832", "problem": "Score : 600 points\n\n\nProblem StatementThere are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions:\n\n\nEvery group contains between A and B people, inclusive.\n\n\nLet F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C\u2264F_i\u2264D holds.\n\n\nFind the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2264N\u226410^3\n1\u2264A\u2264B\u2264N\n1\u2264C\u2264D\u2264N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B C D\n\n\n\n\n\nOutputPrint the number of ways to divide the people into groups under the conditions, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 1 3 1 2\n\n\n\n\n\nSample Output 14\n\nThere are four ways to divide the people:\n\n(1,2),(3)\n(1,3),(2)\n(2,3),(1)\n(1,2,3)\n\nThe following way to divide the people does not count: (1),(2),(3). This is because it only satisfies the first condition and not the second.\n\n\n\n\n\nSample Input 27 2 3 1 3\n\n\n\n\n\nSample Output 2105\n\nThe only ways to divide the people under the conditions are the ones where there are two groups of two people, and one group of three people.\nThere are 105 such ways.\n\n\n\n\n\nSample Input 31000 1 1000 1 1000\n\n\n\n\n\nSample Output 3465231251\n\n\n\n\n\n\nSample Input 410 3 4 2 5\n\n\n\n\n\nSample Output 40\n\nThe answer can be 0."}
{"id": "p03833", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N barbecue restaurants along a street.\nThe restaurants are numbered 1 through N from west to east, and the distance between restaurant i and restaurant i+1 is A_i.\nJoisino has M tickets, numbered 1 through M.\nEvery barbecue restaurant offers barbecue meals in exchange for these tickets.\nRestaurant i offers a meal of deliciousness B_{i,j} in exchange for ticket j.\nEach ticket can only be used once, but any number of tickets can be used at a restaurant.\nJoisino wants to have M barbecue meals by starting from a restaurant of her choice, then repeatedly traveling to another barbecue restaurant and using unused tickets at the restaurant at her current location.\nHer eventual happiness is calculated by the following formula: \"(The total deliciousness of the meals eaten) - (The total distance traveled)\".\nFind her maximum possible eventual happiness.\n\n\n\n\nConstraints\nAll input values are integers.\n2\u2264N\u22645\u00d710^3\n1\u2264M\u2264200\n1\u2264A_i\u226410^9\n1\u2264B_{i,j}\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nA_1 A_2 ... A_{N-1}\nB_{1,1} B_{1,2} ... B_{1,M}\nB_{2,1} B_{2,2} ... B_{2,M}\n:\nB_{N,1} B_{N,2} ... B_{N,M}\n\n\n\n\n\nOutputPrint Joisino's maximum possible eventual happiness.\n\n\n\n\n\n\nSample Input 13 4\n1 4\n2 2 5 1\n1 3 3 2\n2 2 5 1\n\n\n\n\n\nSample Output 111\n\nThe eventual happiness can be maximized by the following strategy: start from restaurant 1 and use tickets 1 and 3, then move to restaurant 2 and use tickets 2 and 4.\n\n\n\n\n\nSample Input 25 3\n1 2 3 4\n10 1 1\n1 1 1\n1 10 1\n1 1 1\n1 1 10\n\n\n\n\n\nSample Output 220"}
{"id": "p03834", "problem": "Score : 100 points\n\n\nProblem StatementAs a New Year's gift, Dolphin received a string s of length 19.\nThe string s has the following format: [five lowercase English letters],[seven lowercase English letters],[five lowercase English letters].\nDolphin wants to convert the comma-separated string s into a space-separated string.\nWrite a program to perform the conversion for him.  \n\n\n\n\nConstraints\nThe length of s is 19.\nThe sixth and fourteenth characters in s are ,.\nThe other characters in s are lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the string after the conversion.\n\n\n\n\n\n\nSample Input 1happy,newyear,enjoy\n\n\n\n\n\nSample Output 1happy newyear enjoy\n\nReplace all the commas in happy,newyear,enjoy with spaces to obtain happy newyear enjoy.\n\n\n\n\n\nSample Input 2haiku,atcoder,tasks\n\n\n\n\n\nSample Output 2haiku atcoder tasks\n\n\n\n\n\n\nSample Input 3abcde,fghihgf,edcba\n\n\n\n\n\nSample Output 3abcde fghihgf edcba"}
{"id": "p03835", "problem": "Score : 200 points\n\n\nProblem StatementYou are given two integers K and S.\nThree variable X, Y and Z takes integer values satisfying 0\u2264X,Y,Z\u2264K.\nHow many different assignments of values to X, Y and Z are there such that X + Y + Z = S?  \n\n\n\n\nConstraints\n2\u2264K\u22642500 \n0\u2264S\u22643K \nK and S are integers.  \n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nK S\n\n\n\n\n\nOutputPrint the number of the triples of X, Y and Z that satisfy the condition.\n\n\n\n\n\n\nSample Input 12 2\n\n\n\n\n\nSample Output 16\n\nThere are six triples of X, Y and Z that satisfy the condition:\n\nX = 0, Y = 0, Z = 2 \nX = 0, Y = 2, Z = 0 \nX = 2, Y = 0, Z = 0 \nX = 0, Y = 1, Z = 1 \nX = 1, Y = 0, Z = 1 \nX = 1, Y = 1, Z = 0\n\n\n\n\n\n\nSample Input 25 15\n\n\n\n\n\nSample Output 21\n\nThe maximum value of X + Y + Z is 15, achieved by one triple of X, Y and Z."}
{"id": "p03836", "problem": "Score : 300 points\n\n\nProblem StatementDolphin resides in two-dimensional Cartesian plane, with the positive x-axis pointing right and the positive y-axis pointing up.\nCurrently, he is located at the point (sx,sy). In each second, he can move up, down, left or right by a distance of 1.\nHere, both the x- and y-coordinates before and after each movement must be integers.\nHe will first visit the point (tx,ty) where sx < tx and sy < ty, then go back to the point (sx,sy), then visit the point (tx,ty) again, and lastly go back to the point (sx,sy).\nHere, during the whole travel, he is not allowed to pass through the same point more than once, except the points (sx,sy) and (tx,ty).\nUnder this condition, find a shortest path for him.  \n\n\n\n\nConstraints\n-1000 \u2264 sx < tx \u2264 1000 \n-1000 \u2264 sy < ty \u2264 1000 \nsx,sy,tx and ty are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nsx sy tx ty\n\n\n\n\n\nOutputPrint a string S that represents a shortest path for Dolphin.\nThe i-th character in S should correspond to his i-th movement.\nThe directions of the movements should be indicated by the following characters:  \n\nU: Up\nD: Down\nL: Left\nR: Right\n\nIf there exist multiple shortest paths under the condition, print any of them.\n\n\n\n\n\n\nSample Input 10 0 1 2\n\n\n\n\n\nSample Output 1UURDDLLUUURRDRDDDLLU\n\nOne possible shortest path is:\n\nGoing from (sx,sy) to (tx,ty) for the first time: (0,0) \u2192 (0,1) \u2192 (0,2) \u2192 (1,2)\nGoing from (tx,ty) to (sx,sy) for the first time: (1,2) \u2192 (1,1) \u2192 (1,0) \u2192 (0,0)\nGoing from (sx,sy) to (tx,ty) for the second time: (0,0) \u2192 (-1,0) \u2192 (-1,1) \u2192 (-1,2) \u2192 (-1,3) \u2192 (0,3) \u2192 (1,3) \u2192 (1,2)\nGoing from (tx,ty) to (sx,sy) for the second time: (1,2) \u2192 (2,2) \u2192 (2,1) \u2192 (2,0) \u2192 (2,-1) \u2192 (1,-1) \u2192 (0,-1) \u2192 (0,0)\n\n\n\n\n\n\nSample Input 2-2 -2 1 1\n\n\n\n\n\nSample Output 2UURRURRDDDLLDLLULUUURRURRDDDLLDL"}
{"id": "p03837", "problem": "Score : 400 points\n\n\nProblem StatementYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\nA connected graph is a graph where there is a path between every pair of different vertices.\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n\n\n\nConstraints\n2\u2264N\u2264100 \nN-1\u2264M\u2264min(N(N-1)/2,1000) \n1\u2264a_i,b_i\u2264N \n1\u2264c_i\u22641000\nc_i is an integer.\nThe given graph contains neither self-loops nor double edges.\nThe given graph is connected.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n\n\n\n\nOutputPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n\n\n\n\n\nSample Input 13 3\n1 2 1\n1 3 1\n2 3 3\n\n\n\n\n\nSample Output 11\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n\nThe shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\nThe shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\nThe shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\nThe shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\nThe shortest path from vertex 3 to vertex 1 is: vertex 3 \u2192 vertex 1, with the length of 1.\nThe shortest path from vertex 3 to vertex 2 is: vertex 3 \u2192 vertex 1 \u2192 vertex 2, with the length of 2.\n\nThus, the only edge that is not contained in any shortest path, is the edge of length 3 connecting vertex 2 and vertex 3, hence the output should be 1.\n\n\n\n\n\nSample Input 23 2\n1 2 1\n2 3 1\n\n\n\n\n\nSample Output 20\n\nEvery edge is contained in some shortest path between some pair of different vertices."}
{"id": "p03838", "problem": "Score : 300 points\n\n\nProblem StatementSnuke has a calculator. It has a display and two buttons.\nInitially, the display shows an integer x.\nSnuke wants to change this value into another integer y, by pressing the following two buttons some number of times in arbitrary order:\n\nButton A: When pressed, the value on the display is incremented by 1.\nButton B: When pressed, the sign of the value on the display is reversed.\n\nFind the minimum number of times Snuke needs to press the buttons to achieve his objective.\nIt can be shown that the objective is always achievable regardless of the values of the integers x and y.\n\n\n\n\nConstraints\nx and y are integers.\n|x|, |y| \u2264 10^9\nx and y are different.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx y\n\n\n\n\n\nOutputPrint the minimum number of times Snuke needs to press the buttons to achieve his objective.\n\n\n\n\n\n\nSample Input 110 20\n\n\n\n\n\nSample Output 110\n\nPress button A ten times.\n\n\n\n\n\nSample Input 210 -10\n\n\n\n\n\nSample Output 21\n\nPress button B once.\n\n\n\n\n\nSample Input 3-10 -20\n\n\n\n\n\nSample Output 312\n\nPress the buttons as follows:\n\nPress button B once.\nPress button A ten times.\nPress button B once."}
{"id": "p03839", "problem": "Score : 400 points\n\n\nProblem StatementThere are N squares aligned in a row.\nThe i-th square from the left contains an integer a_i.\nInitially, all the squares are white.\nSnuke will perform the following operation some number of times:\n\nSelect K consecutive squares. Then, paint all of them white, or paint all of them black. Here, the colors of the squares are overwritten.\n\nAfter Snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares.\nFind the maximum possible score.\n\n\n\n\nConstraints\n1\u2264N\u226410^5\n1\u2264K\u2264N\na_i is an integer.\n|a_i|\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the maximum possible score.\n\n\n\n\n\n\nSample Input 15 3\n-10 10 -10 10 -10\n\n\n\n\n\nSample Output 110\n\nPaint the following squares black: the second, third and fourth squares from the left.\n\n\n\n\n\nSample Input 24 2\n10 -10 -10 10\n\n\n\n\n\nSample Output 220\n\nOne possible way to obtain the maximum score is as follows:\n\nPaint the following squares black: the first and second squares from the left.\nPaint the following squares black: the third and fourth squares from the left.\nPaint the following squares white: the second and third squares from the left.\n\n\n\n\n\n\nSample Input 31 1\n-10\n\n\n\n\n\nSample Output 30\n\n\n\n\n\n\nSample Input 410 5\n5 -4 -5 -8 -4 7 2 -4 0 7\n\n\n\n\n\nSample Output 417"}
{"id": "p03840", "problem": "Score : 600 points\n\n\nProblem StatementA tetromino is a figure formed by joining four squares edge to edge.\nWe will refer to the following seven kinds of tetromino as I-, O-, T-, J-, L-, S- and Z-tetrominos, respectively:\n\n\n\nSnuke has many tetrominos. The number of I-, O-, T-, J-, L-, S- and Z-tetrominos in his possession are a_I, a_O, a_T, a_J, a_L, a_S and a_Z, respectively.\nSnuke will join K of his tetrominos to form a rectangle that is two squares tall and 2K squares wide.\nHere, the following rules must be followed:\n\nWhen placing each tetromino, rotation is allowed, but reflection is not.\nEach square in the rectangle must be covered by exactly one tetromino.\nNo part of each tetromino may be outside the rectangle.\n\nSnuke wants to form as large a rectangle as possible.\nFind the maximum possible value of K.\n\n\n\n\nConstraints\n0\u2264a_I,a_O,a_T,a_J,a_L,a_S,a_Z\u226410^9\na_I+a_O+a_T+a_J+a_L+a_S+a_Z\u22651\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na_I a_O a_T a_J a_L a_S a_Z\n\n\n\n\n\nOutputPrint the maximum possible value of K. If no rectangle can be formed, print 0.\n\n\n\n\n\n\nSample Input 12 1 1 0 0 0 0\n\n\n\n\n\nSample Output 13\n\nOne possible way to form the largest rectangle is shown in the following figure:\n\n\n\n\n\n\n\n\nSample Input 20 0 10 0 0 0 0\n\n\n\n\n\nSample Output 20\n\nNo rectangle can be formed."}
{"id": "p03841", "problem": "Score : 800 points\n\n\nProblem StatementYou are given an integer sequence x of length N.\nDetermine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a.\n\na is N^2 in length, containing N copies of each of the integers 1, 2, ..., N.\nFor each 1 \u2264 i \u2264 N, the i-th occurrence of the integer i from the left in a is the x_i-th element of a from the left.\n\n\n\n\n\nConstraints\n1 \u2264 N \u2264 500\n1 \u2264 x_i \u2264 N^2\nAll x_i are distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputIf there does not exist an integer sequence a that satisfies all the conditions, print No.\nIf there does exist such an sequence a, print Yes in the first line, then print an instance of a in the second line, with spaces inbetween.\n\n\n\n\n\n\nSample Input 13\n1 5 9\n\n\n\n\n\nSample Output 1Yes\n1 1 1 2 2 2 3 3 3\n\nFor example, the second occurrence of the integer 2 from the left in a in the output is the fifth element of a from the left.\nSimilarly, the condition is satisfied for the integers 1 and 3.\n\n\n\n\n\nSample Input 22\n4 1\n\n\n\n\n\nSample Output 2No"}
{"id": "p03842", "problem": "Score : 1400 points\n\n\nProblem StatementYou are given an integer sequence a of length N.\nHow many permutations p of the integers 1 through N satisfy the following condition?\n\nFor each 1 \u2264 i \u2264 N, at least one of the following holds: p_i = a_i and p_{p_i} = a_i.\n\nFind the count modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\na_i is an integer.\n1 \u2264 a_i \u2264 N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the number of the permutations p that satisfy the condition, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 13\n1 2 3\n\n\n\n\n\nSample Output 14\n\nThe following four permutations satisfy the condition:\n\n(1, 2, 3)\n(1, 3, 2)\n(3, 2, 1)\n(2, 1, 3)\n\nFor example, (1, 3, 2) satisfies the condition because p_1 = 1, p_{p_2} = 2 and p_{p_3} = 3.\n\n\n\n\n\nSample Input 22\n1 1\n\n\n\n\n\nSample Output 21\n\nThe following one permutation satisfies the condition:\n\n(2, 1)\n\n\n\n\n\n\nSample Input 33\n2 1 1\n\n\n\n\n\nSample Output 32\n\nThe following two permutations satisfy the condition:\n\n(2, 3, 1)\n(3, 1, 2)\n\n\n\n\n\n\nSample Input 43\n1 1 1\n\n\n\n\n\nSample Output 40\n\n\n\n\n\n\nSample Input 513\n2 1 4 3 6 7 5 9 10 8 8 9 11\n\n\n\n\n\nSample Output 56"}
{"id": "p03843", "problem": "Score : 1900 points\n\n\nProblem StatementThere is a tree with N vertices.\nThe vertices are numbered 1 through N.\nFor each 1 \u2264 i \u2264 N - 1, the i-th edge connects vertices a_i and b_i.\nThe lengths of all the edges are 1.\nSnuke likes some of the vertices.\nThe information on his favorite vertices are given to you as a string s of length N.\nFor each 1 \u2264 i \u2264 N, s_i is 1 if Snuke likes vertex i, and 0 if he does not like vertex i.\nInitially, all the vertices are white.\nSnuke will perform the following operation exactly once:\n\nSelect a vertex v that he likes, and a non-negative integer d. Then, paint all the vertices black whose distances from v are at most d.\n\nFind the number of the possible combinations of colors of the vertices after the operation.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 2\u00d710^5\n1 \u2264 a_i, b_i \u2264 N\nThe given graph is a tree.\n|s| = N\ns consists of 0 and 1.\ns contains at least one occurrence of 1.\n\n\n\n\n\nPartial Score\nIn the test set worth 1300 points, s consists only of 1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 b_1\na_2 b_2\n:\na_{N - 1} b_{N - 1}\ns\n\n\n\n\n\nOutputPrint the number of the possible combinations of colors of the vertices after the operation.\n\n\n\n\n\n\nSample Input 14\n1 2\n1 3\n1 4\n1100\n\n\n\n\n\nSample Output 14\n\nThe following four combinations of colors of the vertices are possible:\n\n\n\n\n\n\n\n\nSample Input 25\n1 2\n1 3\n1 4\n4 5\n11111\n\n\n\n\n\nSample Output 211\n\nThis case satisfies the additional constraint for the partial score.\n\n\n\n\n\nSample Input 36\n1 2\n1 3\n1 4\n2 5\n2 6\n100011\n\n\n\n\n\nSample Output 38"}
{"id": "p03844", "problem": "Score : 100 points\n\n\nProblem StatementJoisino wants to evaluate the formula \"A op B\".\nHere, A and B are integers, and the binary operator op is either + or -.\nYour task is to evaluate the formula instead of her.\n\n\n\n\nConstraints\n1\u2266A,B\u226610^9\nop is either + or -.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA op B\n\n\n\n\n\nOutputEvaluate the formula and print the result.\n\n\n\n\n\n\nSample Input 11 + 2\n\n\n\n\n\nSample Output 13\n\nSince 1 + 2 = 3, the output should be 3.\n\n\n\n\n\nSample Input 25 - 7\n\n\n\n\n\nSample Output 2-2"}
{"id": "p03845", "problem": "Score : 200 points\n\n\nProblem StatementJoisino is about to compete in the final round of a certain programming competition.\nIn this contest, there are N problems, numbered 1 through N.\nJoisino knows that it takes her T_i seconds to solve problem i(1\u2266i\u2266N).\nAlso, there are M kinds of drinks offered to the contestants, numbered 1 through M.\nIf Joisino takes drink i(1\u2266i\u2266M), her brain will be stimulated and the time it takes for her to solve problem P_i will become X_i seconds.\nIt does not affect the time to solve the other problems.\nA contestant is allowed to take exactly one of the drinks before the start of the contest.\nFor each drink, Joisino wants to know how many seconds it takes her to solve all the problems if she takes that drink.\nHere, assume that the time it takes her to solve all the problems is equal to the sum of the time it takes for her to solve individual problems.\nYour task is to write a program to calculate it instead of her.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2266N\u2266100\n1\u2266T_i\u226610^5\n1\u2266M\u2266100\n1\u2266P_i\u2266N\n1\u2266X_i\u226610^5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nT_1 T_2 ... T_N\nM\nP_1 X_1\nP_2 X_2\n:\nP_M X_M\n\n\n\n\n\nOutputFor each drink, calculate how many seconds it takes Joisino to solve all the problems if she takes that drink, and print the results, one per line.\n\n\n\n\n\n\nSample Input 13\n2 1 4\n2\n1 1\n2 3\n\n\n\n\n\nSample Output 16\n9\n\nIf Joisino takes drink 1, the time it takes her to solve each problem will be 1, 1 and 4 seconds, respectively, totaling 6 seconds.\nIf Joisino takes drink 2, the time it takes her to solve each problem will be 2, 3 and 4 seconds, respectively, totaling 9 seconds.\n\n\n\n\n\nSample Input 25\n7 2 3 8 5\n3\n4 2\n1 7\n4 13\n\n\n\n\n\nSample Output 219\n25\n30"}
{"id": "p03846", "problem": "Score : 300 points\n\n\nProblem StatementThere are N people, conveniently numbered 1 through N.\nThey were standing in a row yesterday, but now they are unsure of the order in which they were standing.\nHowever, each person remembered the following fact: the absolute difference of the number of the people who were standing to the left of that person, and the number of the people who were standing to the right of that person.\nAccording to their reports, the difference above for person i is A_i.\nBased on these reports, find the number of the possible orders in which they were standing.\nSince it can be extremely large, print the answer modulo 10^9+7.\nNote that the reports may be incorrect and thus there may be no consistent order.\nIn such a case, print 0.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\n0\u2266A_i\u2266N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the number of the possible orders in which they were standing, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 15\n2 4 4 0 2\n\n\n\n\n\nSample Output 14\n\nThere are four possible orders, as follows:\n\n2,1,4,5,3\n2,5,4,1,3\n3,1,4,5,2\n3,5,4,1,2\n\n\n\n\n\n\nSample Input 27\n6 4 0 2 4 0 2\n\n\n\n\n\nSample Output 20\n\nAny order would be inconsistent with the reports, thus the answer is 0.\n\n\n\n\n\nSample Input 38\n7 5 1 1 7 3 5 3\n\n\n\n\n\nSample Output 316"}
{"id": "p03847", "problem": "Score : 600 points\n\n\nProblem StatementYou are given a positive integer N.\nFind the number of the pairs of integers u and v (0\u2266u,v\u2266N) such that there exist two non-negative integers a and b satisfying a xor b=u and a+b=v.\nHere, xor denotes the bitwise exclusive OR.\nSince it can be extremely large, compute the answer modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2266N\u226610^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the number of the possible pairs of integers u and v, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 15\n\nThe five possible pairs of u and v are:\n\n\nu=0,v=0 (Let a=0,b=0, then 0 xor 0=0, 0+0=0.)\n\n\nu=0,v=2 (Let a=1,b=1, then 1 xor 1=0, 1+1=2.\uff09\n\n\nu=1,v=1 (Let a=1,b=0, then 1 xor 0=1, 1+0=1.\uff09\n\n\nu=2,v=2 (Let a=2,b=0, then 2 xor 0=2, 2+0=2.\uff09\n\n\nu=3,v=3 (Let a=3,b=0, then 3 xor 0=3, 3+0=3.\uff09\n\n\n\n\n\n\n\nSample Input 21422\n\n\n\n\n\nSample Output 252277\n\n\n\n\n\n\nSample Input 31000000000000000000\n\n\n\n\n\nSample Output 3787014179"}
{"id": "p03848", "problem": "Score : 300 points\n\n\nProblem StatementThere are N people, conveniently numbered 1 through N.\nThey were standing in a row yesterday, but now they are unsure of the order in which they were standing.\nHowever, each person remembered the following fact: the absolute difference of the number of the people who were standing to the left of that person, and the number of the people who were standing to the right of that person.\nAccording to their reports, the difference above for person i is A_i.\nBased on these reports, find the number of the possible orders in which they were standing.\nSince it can be extremely large, print the answer modulo 10^9+7.\nNote that the reports may be incorrect and thus there may be no consistent order.\nIn such a case, print 0.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\n0\u2266A_i\u2266N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the number of the possible orders in which they were standing, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 15\n2 4 4 0 2\n\n\n\n\n\nSample Output 14\n\nThere are four possible orders, as follows:\n\n2,1,4,5,3\n2,5,4,1,3\n3,1,4,5,2\n3,5,4,1,2\n\n\n\n\n\n\nSample Input 27\n6 4 0 2 4 0 2\n\n\n\n\n\nSample Output 20\n\nAny order would be inconsistent with the reports, thus the answer is 0.\n\n\n\n\n\nSample Input 38\n7 5 1 1 7 3 5 3\n\n\n\n\n\nSample Output 316"}
{"id": "p03849", "problem": "Score : 600 points\n\n\nProblem StatementYou are given a positive integer N.\nFind the number of the pairs of integers u and v (0\u2266u,v\u2266N) such that there exist two non-negative integers a and b satisfying a xor b=u and a+b=v.\nHere, xor denotes the bitwise exclusive OR.\nSince it can be extremely large, compute the answer modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2266N\u226610^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the number of the possible pairs of integers u and v, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 15\n\nThe five possible pairs of u and v are:\n\n\nu=0,v=0 (Let a=0,b=0, then 0 xor 0=0, 0+0=0.)\n\n\nu=0,v=2 (Let a=1,b=1, then 1 xor 1=0, 1+1=2.\uff09\n\n\nu=1,v=1 (Let a=1,b=0, then 1 xor 0=1, 1+0=1.\uff09\n\n\nu=2,v=2 (Let a=2,b=0, then 2 xor 0=2, 2+0=2.\uff09\n\n\nu=3,v=3 (Let a=3,b=0, then 3 xor 0=3, 3+0=3.\uff09\n\n\n\n\n\n\n\nSample Input 21422\n\n\n\n\n\nSample Output 252277\n\n\n\n\n\n\nSample Input 31000000000000000000\n\n\n\n\n\nSample Output 3787014179"}
{"id": "p03850", "problem": "Score : 900 points\n\n\nProblem StatementJoisino has a formula consisting of N terms: A_1 op_1 A_2 ... op_{N-1} A_N.\nHere, A_i is an integer, and op_i is an binary operator either + or -.\nBecause Joisino loves large numbers, she wants to maximize the evaluated value of the formula by inserting an arbitrary number of pairs of parentheses (possibly zero) into the formula.\nOpening parentheses can only be inserted immediately before an integer, and closing parentheses can only be inserted immediately after an integer.\nIt is allowed to insert any number of parentheses at a position.\nYour task is to write a program to find the maximum possible evaluated value of the formula after inserting an arbitrary number of pairs of parentheses.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\n1\u2266A_i\u226610^9\nop_i is either + or -.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 op_1 A_2 ... op_{N-1} A_N\n\n\n\n\n\nOutputPrint the maximum possible evaluated value of the formula after inserting an arbitrary number of pairs of parentheses.\n\n\n\n\n\n\nSample Input 13\n5 - 1 - 3\n\n\n\n\n\nSample Output 17\n\nThe maximum possible value is: 5 - (1 - 3) = 7.\n\n\n\n\n\nSample Input 25\n1 - 2 + 3 - 4 + 5\n\n\n\n\n\nSample Output 25\n\nThe maximum possible value is: 1 - (2 + 3 - 4) + 5 = 5.\n\n\n\n\n\nSample Input 35\n1 - 20 - 13 + 14 - 5\n\n\n\n\n\nSample Output 313\n\nThe maximum possible value is: 1 - (20 - (13 + 14) - 5) = 13."}
{"id": "p03851", "problem": "Score : 1400 points\n\n\nProblem StatementJoisino is about to compete in the final round of a certain programming competition.\nIn this contest, there are N problems, numbered 1 through N.\nJoisino knows that it takes her T_i seconds to solve problem i(1\u2266i\u2266N).\nIn this contest, a contestant will first select some number of problems to solve.\nThen, the contestant will solve the selected problems.\nAfter that, the score of the contestant will be calculated as follows:\n\n(The score) = (The number of the pairs of integers L and R (1\u2266L\u2266R\u2266N) such that for every i satisfying L\u2266i\u2266R, problem i is solved) - (The total number of seconds it takes for the contestant to solve the selected problems)\n\nNote that a contestant is allowed to choose to solve zero problems, in which case the score will be 0.\nAlso, there are M kinds of drinks offered to the contestants, numbered 1 through M.\nIf Joisino takes drink i(1\u2266i\u2266M), her brain will be stimulated and the time it takes for her to solve problem P_i will become X_i seconds.\nHere, X_i may be greater than the length of time originally required to solve problem P_i.\nTaking drink i does not affect the time required to solve the other problems.\nA contestant is allowed to take exactly one of the drinks before the start of the contest.\nFor each drink, Joisino wants to know the maximum score that can be obtained in the contest if she takes that drink.\nYour task is to write a program to calculate it instead of her.\n\n\n\n\nConstraints\nAll input values are integers.\n1\u2266N\u22663*10^5\n1\u2266T_i\u226610^9\n(The sum of T_i) \u226610^{12}\n1\u2266M\u22663*10^5\n1\u2266P_i\u2266N\n1\u2266X_i\u226610^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nT_1 T_2 ... T_N\nM\nP_1 X_1\nP_2 X_2\n:\nP_M X_M\n\n\n\n\n\nOutputFor each drink, print the maximum score that can be obtained if Joisino takes that drink, in order, one per line.\n\n\n\n\n\n\nSample Input 15\n1 1 4 1 1\n2\n3 2\n3 10\n\n\n\n\n\nSample Output 19\n2\n\nIf she takes drink 1, the maximum score can be obtained by solving all the problems.\nIf she takes drink 2, the maximum score can be obtained by solving the problems 1,2,4 and 5.\n\n\n\n\n\nSample Input 212\n1 2 1 3 4 1 2 1 12 3 12 12\n10\n9 3\n11 1\n5 35\n6 15\n12 1\n1 9\n4 3\n10 2\n5 1\n7 6\n\n\n\n\n\nSample Output 234\n35\n5\n11\n35\n17\n25\n26\n28\n21"}
{"id": "p03852", "problem": "Score : 100 points\n\n\nProblem StatementGiven a lowercase English letter c, determine whether it is a vowel. Here, there are five vowels in the English alphabet: a, e, i, o and u.\n\n\n\n\nConstraints\nc is a lowercase English letter.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nc\n\n\n\n\n\nOutputIf c is a vowel, print vowel. Otherwise, print consonant.\n\n\n\n\n\n\nSample Input 1a\n\n\n\n\n\nSample Output 1vowel\n\nSince a is a vowel, print vowel.\n\n\n\n\n\nSample Input 2z\n\n\n\n\n\nSample Output 2consonant\n\n\n\n\n\n\nSample Input 3s\n\n\n\n\n\nSample Output 3consonant"}
{"id": "p03853", "problem": "Score : 200 points\n\n\nProblem StatementThere is an image with a height of H pixels and a width of W pixels. Each of the pixels is represented by either . or *. The character representing the pixel at the i-th row from the top and the j-th column from the left, is denoted by C_{i,j}.\nExtend this image vertically so that its height is doubled. That is, print a image with a height of 2H pixels and a width of W pixels where the pixel at the i-th row and j-th column is equal to C_{(i+1)/2,j} (the result of division is rounded down).\n\n\n\n\nConstraints\n1\u2266H, W\u2266100\nC_{i,j} is either . or *.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\nC_{1,1}...C_{1,W}\n:\nC_{H,1}...C_{H,W}\n\n\n\n\n\nOutputPrint the extended image.\n\n\n\n\n\n\nSample Input 12 2\n*.\n.*\n\n\n\n\n\nSample Output 1*.\n*.\n.*\n.*\n\n\n\n\n\n\nSample Input 21 4\n***.\n\n\n\n\n\nSample Output 2***.\n***.\n\n\n\n\n\n\nSample Input 39 20\n.....***....***.....\n....*...*..*...*....\n...*.....**.....*...\n...*.....*......*...\n....*.....*....*....\n.....**..*...**.....\n.......*..*.*.......\n........**.*........\n.........**.........\n\n\n\n\n\nSample Output 3.....***....***.....\n.....***....***.....\n....*...*..*...*....\n....*...*..*...*....\n...*.....**.....*...\n...*.....**.....*...\n...*.....*......*...\n...*.....*......*...\n....*.....*....*....\n....*.....*....*....\n.....**..*...**.....\n.....**..*...**.....\n.......*..*.*.......\n.......*..*.*.......\n........**.*........\n........**.*........\n.........**.........\n.........**........."}
{"id": "p03854", "problem": "Score : 300 points\n\n\nProblem StatementYou are given a string S consisting of lowercase English letters.\nAnother string T is initially empty.\nDetermine whether it is possible to obtain S = T by performing the following operation an arbitrary number of times:\n\nAppend one of the following at the end of T: dream, dreamer, erase and eraser.\n\n\n\n\n\nConstraints\n1\u2266|S|\u226610^5\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf it is possible to obtain S = T, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 1erasedream\n\n\n\n\n\nSample Output 1YES\n\nAppend erase and dream at the end of T in this order, to obtain S = T.\n\n\n\n\n\nSample Input 2dreameraser\n\n\n\n\n\nSample Output 2YES\n\nAppend dream and eraser at the end of T in this order, to obtain S = T.\n\n\n\n\n\nSample Input 3dreamerer\n\n\n\n\n\nSample Output 3NO"}
{"id": "p03855", "problem": "Score : 400 points\n\n\nProblem StatementThere are N cities. There are also K roads and L railways, extending between the cities.\nThe i-th road bidirectionally connects the p_i-th and q_i-th cities, and the i-th railway bidirectionally connects the r_i-th and s_i-th cities.\nNo two roads connect the same pair of cities. Similarly, no two railways connect the same pair of cities.\nWe will say city A and B are connected by roads if city B is reachable from city A by traversing some number of roads. Here, any city is considered to be connected to itself by roads.\nWe will also define connectivity by railways similarly.\nFor each city, find the number of the cities connected to that city by both roads and railways.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 2*10^5\n1 \u2266 K, L\u2266 10^5\n1 \u2266 p_i, q_i, r_i, s_i \u2266 N\np_i < q_i\nr_i < s_i\nWhen i \u2260 j, (p_i, q_i) \u2260 (p_j, q_j)\nWhen i \u2260 j, (r_i, s_i) \u2260 (r_j, s_j)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K L\np_1 q_1\n:\np_K q_K\nr_1 s_1\n:\nr_L s_L\n\n\n\n\n\nOutputPrint N integers. The i-th of them should represent the number of the cities connected to the i-th city by both roads and railways.\n\n\n\n\n\n\nSample Input 14 3 1\n1 2\n2 3\n3 4\n2 3\n\n\n\n\n\nSample Output 11 2 2 1\n\nAll the four cities are connected to each other by roads.\nBy railways, only the second and third cities are connected. Thus, the answers for the cities are 1, 2, 2 and 1, respectively.\n\n\n\n\n\nSample Input 24 2 2\n1 2\n2 3\n1 4\n2 3\n\n\n\n\n\nSample Output 21 2 2 1\n\n\n\n\n\n\nSample Input 37 4 4\n1 2\n2 3\n2 5\n6 7\n3 5\n4 5\n3 4\n6 7\n\n\n\n\n\nSample Output 31 1 2 1 2 2 2"}
{"id": "p03856", "problem": "Score : 300 points\n\n\nProblem StatementYou are given a string S consisting of lowercase English letters.\nAnother string T is initially empty.\nDetermine whether it is possible to obtain S = T by performing the following operation an arbitrary number of times:\n\nAppend one of the following at the end of T: dream, dreamer, erase and eraser.\n\n\n\n\n\nConstraints\n1\u2266|S|\u226610^5\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf it is possible to obtain S = T, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 1erasedream\n\n\n\n\n\nSample Output 1YES\n\nAppend erase and dream at the end of T in this order, to obtain S = T.\n\n\n\n\n\nSample Input 2dreameraser\n\n\n\n\n\nSample Output 2YES\n\nAppend dream and eraser at the end of T in this order, to obtain S = T.\n\n\n\n\n\nSample Input 3dreamerer\n\n\n\n\n\nSample Output 3NO"}
{"id": "p03857", "problem": "Score : 400 points\n\n\nProblem StatementThere are N cities. There are also K roads and L railways, extending between the cities.\nThe i-th road bidirectionally connects the p_i-th and q_i-th cities, and the i-th railway bidirectionally connects the r_i-th and s_i-th cities.\nNo two roads connect the same pair of cities. Similarly, no two railways connect the same pair of cities.\nWe will say city A and B are connected by roads if city B is reachable from city A by traversing some number of roads. Here, any city is considered to be connected to itself by roads.\nWe will also define connectivity by railways similarly.\nFor each city, find the number of the cities connected to that city by both roads and railways.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 2*10^5\n1 \u2266 K, L\u2266 10^5\n1 \u2266 p_i, q_i, r_i, s_i \u2266 N\np_i < q_i\nr_i < s_i\nWhen i \u2260 j, (p_i, q_i) \u2260 (p_j, q_j)\nWhen i \u2260 j, (r_i, s_i) \u2260 (r_j, s_j)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K L\np_1 q_1\n:\np_K q_K\nr_1 s_1\n:\nr_L s_L\n\n\n\n\n\nOutputPrint N integers. The i-th of them should represent the number of the cities connected to the i-th city by both roads and railways.\n\n\n\n\n\n\nSample Input 14 3 1\n1 2\n2 3\n3 4\n2 3\n\n\n\n\n\nSample Output 11 2 2 1\n\nAll the four cities are connected to each other by roads.\nBy railways, only the second and third cities are connected. Thus, the answers for the cities are 1, 2, 2 and 1, respectively.\n\n\n\n\n\nSample Input 24 2 2\n1 2\n2 3\n1 4\n2 3\n\n\n\n\n\nSample Output 21 2 2 1\n\n\n\n\n\n\nSample Input 37 4 4\n1 2\n2 3\n2 5\n6 7\n3 5\n4 5\n3 4\n6 7\n\n\n\n\n\nSample Output 31 1 2 1 2 2 2"}
{"id": "p03858", "problem": "Score : 900 points\n\n\nProblem StatementThere are N pinholes on the xy-plane. The i-th pinhole is located at (x_i,y_i).\nWe will denote the Manhattan distance between the i-th and j-th pinholes as d(i,j)(=|x_i-x_j|+|y_i-y_j|).\nYou have a peculiar pair of compasses, called Manhattan Compass.\nThis instrument always points at two of the pinholes.\nThe two legs of the compass are indistinguishable, thus we do not distinguish the following two states: the state where the compass points at the p-th and q-th pinholes, and the state where it points at the q-th and p-th pinholes.\nWhen the compass points at the p-th and q-th pinholes and d(p,q)=d(p,r), one of the legs can be moved so that the compass will point at the p-th and r-th pinholes.\nInitially, the compass points at the a-th and b-th pinholes.\nFind the number of the pairs of pinholes that can be pointed by the compass.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n1\u2266x_i, y_i\u226610^9\n1\u2266a < b\u2266N\nWhen i \u2260 j, (x_i, y_i) \u2260 (x_j, y_j)\nx_i and y_i are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN a b\nx_1 y_1\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the number of the pairs of pinholes that can be pointed by the compass.\n\n\n\n\n\n\nSample Input 15 1 2\n1 1\n4 3\n6 1\n5 5\n4 8\n\n\n\n\n\nSample Output 14\n\nInitially, the compass points at the first and second pinholes.\nSince d(1,2) = d(1,3), the compass can be moved so that it will point at the first and third pinholes.\nSince d(1,3) = d(3,4), the compass can also point at the third and fourth pinholes.\nSince d(1,2) = d(2,5), the compass can also point at the second and fifth pinholes.\nNo other pairs of pinholes can be pointed by the compass, thus the answer is 4.\n\n\n\n\n\nSample Input 26 2 3\n1 3\n5 3\n3 5\n8 4\n4 7\n2 5\n\n\n\n\n\nSample Output 24\n\n\n\n\n\n\nSample Input 38 1 2\n1 5\n4 3\n8 2\n4 7\n8 8\n3 3\n6 6\n4 8\n\n\n\n\n\nSample Output 37"}
{"id": "p03859", "problem": "Score : 900 points\n\n\nProblem StatementThere is a string S of length N consisting of characters 0 and 1. You will perform the following operation for each i = 1, 2, ..., m:\n\nArbitrarily permute the characters within the substring of S starting at the l_i-th character from the left and extending through the r_i-th character.\n\nHere, the sequence l_i is non-decreasing.\nHow many values are possible for S after the M operations, modulo 1000000007(= 10^9+7)?\n\n\n\n\nConstraints\n2\u2266N\u22663000\n1\u2266M\u22663000\nS consists of characters 0 and 1.\nThe length of S equals N.\n1\u2266l_i < r_i\u2266N\nl_i \u2266 l_{i+1}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nS\nl_1 r_1\n:\nl_M r_M\n\n\n\n\n\nOutputPrint the number of the possible values for S after the M operations, modulo 1000000007.\n\n\n\n\n\n\nSample Input 15 2\n01001\n2 4\n3 5\n\n\n\n\n\nSample Output 16\n\nAfter the first operation, S can be one of the following three: 01001, 00101 and 00011.\nAfter the second operation, S can be one of the following six: 01100, 01010, 01001, 00011, 00101 and 00110.\n\n\n\n\n\nSample Input 29 3\n110111110\n1 4\n4 6\n6 9\n\n\n\n\n\nSample Output 226\n\n\n\n\n\n\nSample Input 311 6\n00101000110\n2 4\n2 3\n4 7\n5 6\n6 10\n10 11\n\n\n\n\n\nSample Output 3143"}
{"id": "p03860", "problem": "Score : 100 points\n\n\nProblem StatementSnuke is going to open a contest named \"AtCoder s Contest\".\nHere, s is a string of length 1 or greater, where the first character is an uppercase English letter, and the second and subsequent characters are lowercase English letters.\nSnuke has decided to abbreviate the name of the contest as \"AxC\".\nHere, x is the uppercase English letter at the beginning of s.\nGiven the name of the contest, print the abbreviation of the name.\n\n\n\n\nConstraints\nThe length of s is between 1 and 100, inclusive.\nThe first character in s is an uppercase English letter.\nThe second and subsequent characters in s are lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nAtCoder s Contest\n\n\n\n\n\nOutputPrint the abbreviation of the name of the contest.\n\n\n\n\n\n\nSample Input 1AtCoder Beginner Contest\n\n\n\n\n\nSample Output 1ABC\n\nThe contest in which you are participating now.\n\n\n\n\n\nSample Input 2AtCoder Snuke Contest\n\n\n\n\n\nSample Output 2ASC\n\nThis contest does not actually exist.\n\n\n\n\n\nSample Input 3AtCoder X Contest\n\n\n\n\n\nSample Output 3AXC"}
{"id": "p03861", "problem": "Score : 200 points\n\n\nProblem StatementYou are given nonnegative integers a and b (a \u2264 b), and a positive integer x.\nAmong the integers between a and b, inclusive, how many are divisible by x?\n\n\n\n\nConstraints\n0 \u2264 a \u2264 b \u2264 10^{18}\n1 \u2264 x \u2264 10^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na b x\n\n\n\n\n\nOutputPrint the number of the integers between a and b, inclusive, that are divisible by x.\n\n\n\n\n\n\nSample Input 14 8 2\n\n\n\n\n\nSample Output 13\n\nThere are three integers between 4 and 8, inclusive, that are divisible by 2: 4, 6 and 8.\n\n\n\n\n\nSample Input 20 5 1\n\n\n\n\n\nSample Output 26\n\nThere are six integers between 0 and 5, inclusive, that are divisible by 1: 0, 1, 2, 3, 4 and 5.\n\n\n\n\n\nSample Input 39 9 2\n\n\n\n\n\nSample Output 30\n\nThere are no integer between 9 and 9, inclusive, that is divisible by 2.\n\n\n\n\n\nSample Input 41 1000000000000000000 3\n\n\n\n\n\nSample Output 4333333333333333333\n\nWatch out for integer overflows."}
{"id": "p03862", "problem": "Score : 300 points\n\n\nProblem StatementThere are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies.\nSnuke can perform the following operation any number of times:\n\nChoose a box containing at least one candy, and eat one of the candies in the chosen box.\n\nHis objective is as follows:\n\nAny two neighboring boxes contain at most x candies in total.\n\nFind the minimum number of operations required to achieve the objective.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n0 \u2264 a_i \u2264 10^9\n0 \u2264 x \u2264 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN x\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum number of operations required to achieve the objective.\n\n\n\n\n\n\nSample Input 13 3\n2 2 2\n\n\n\n\n\nSample Output 11\n\nEat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2).\n\n\n\n\n\nSample Input 26 1\n1 6 1 2 0 4\n\n\n\n\n\nSample Output 211\n\nFor example, eat six candies in the second box, two in the fourth box, and three in the sixth box.\nThen, the number of candies in each box becomes (1, 0, 1, 0, 0, 1).\n\n\n\n\n\nSample Input 35 9\n3 1 4 1 5\n\n\n\n\n\nSample Output 30\n\nThe objective is already achieved without performing operations.\n\n\n\n\n\nSample Input 42 0\n5 5\n\n\n\n\n\nSample Output 410\n\nAll the candies need to be eaten."}
{"id": "p03863", "problem": "Score : 500 points\n\n\nProblem StatementThere is a string s of length 3 or greater.\nNo two neighboring characters in s are equal.\nTakahashi and Aoki will play a game against each other.\nThe two players alternately performs the following operation, Takahashi going first:\n\nRemove one of the characters in s, excluding both ends. However, a character cannot be removed if removal of the character would result in two neighboring equal characters in s.\n\nThe player who becomes unable to perform the operation, loses the game. Determine which player will win when the two play optimally.\n\n\n\n\nConstraints\n3 \u2264 |s| \u2264 10^5\ns consists of lowercase English letters.\nNo two neighboring characters in s are equal.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputIf Takahashi will win, print First. If Aoki will win, print Second.\n\n\n\n\n\n\nSample Input 1aba\n\n\n\n\n\nSample Output 1Second\n\nTakahashi, who goes first, cannot perform the operation, since removal of the b, which is the only character not at either ends of s, would result in s becoming aa, with two as neighboring.\n\n\n\n\n\nSample Input 2abc\n\n\n\n\n\nSample Output 2First\n\nWhen Takahashi removes b from s, it becomes ac.\nThen, Aoki cannot perform the operation, since there is no character in s, excluding both ends.\n\n\n\n\n\nSample Input 3abcab\n\n\n\n\n\nSample Output 3First"}
{"id": "p03864", "problem": "Score : 300 points\n\n\nProblem StatementThere are N boxes arranged in a row.\nInitially, the i-th box from the left contains a_i candies.\nSnuke can perform the following operation any number of times:\n\nChoose a box containing at least one candy, and eat one of the candies in the chosen box.\n\nHis objective is as follows:\n\nAny two neighboring boxes contain at most x candies in total.\n\nFind the minimum number of operations required to achieve the objective.\n\n\n\n\nConstraints\n2 \u2264 N \u2264 10^5\n0 \u2264 a_i \u2264 10^9\n0 \u2264 x \u2264 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN x\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum number of operations required to achieve the objective.\n\n\n\n\n\n\nSample Input 13 3\n2 2 2\n\n\n\n\n\nSample Output 11\n\nEat one candy in the second box.\nThen, the number of candies in each box becomes (2, 1, 2).\n\n\n\n\n\nSample Input 26 1\n1 6 1 2 0 4\n\n\n\n\n\nSample Output 211\n\nFor example, eat six candies in the second box, two in the fourth box, and three in the sixth box.\nThen, the number of candies in each box becomes (1, 0, 1, 0, 0, 1).\n\n\n\n\n\nSample Input 35 9\n3 1 4 1 5\n\n\n\n\n\nSample Output 30\n\nThe objective is already achieved without performing operations.\n\n\n\n\n\nSample Input 42 0\n5 5\n\n\n\n\n\nSample Output 410\n\nAll the candies need to be eaten."}
{"id": "p03865", "problem": "Score : 500 points\n\n\nProblem StatementThere is a string s of length 3 or greater.\nNo two neighboring characters in s are equal.\nTakahashi and Aoki will play a game against each other.\nThe two players alternately performs the following operation, Takahashi going first:\n\nRemove one of the characters in s, excluding both ends. However, a character cannot be removed if removal of the character would result in two neighboring equal characters in s.\n\nThe player who becomes unable to perform the operation, loses the game. Determine which player will win when the two play optimally.\n\n\n\n\nConstraints\n3 \u2264 |s| \u2264 10^5\ns consists of lowercase English letters.\nNo two neighboring characters in s are equal.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputIf Takahashi will win, print First. If Aoki will win, print Second.\n\n\n\n\n\n\nSample Input 1aba\n\n\n\n\n\nSample Output 1Second\n\nTakahashi, who goes first, cannot perform the operation, since removal of the b, which is the only character not at either ends of s, would result in s becoming aa, with two as neighboring.\n\n\n\n\n\nSample Input 2abc\n\n\n\n\n\nSample Output 2First\n\nWhen Takahashi removes b from s, it becomes ac.\nThen, Aoki cannot perform the operation, since there is no character in s, excluding both ends.\n\n\n\n\n\nSample Input 3abcab\n\n\n\n\n\nSample Output 3First"}
{"id": "p03866", "problem": "Score : 600 points\n\n\nProblem StatementOn the xy-plane, Snuke is going to travel from the point (x_s, y_s) to the point (x_t, y_t).\nHe can move in arbitrary directions with speed 1.\nHere, we will consider him as a point without size.\nThere are N circular barriers deployed on the plane.\nThe center and the radius of the i-th barrier are (x_i, y_i) and r_i, respectively.\nThe barriers may overlap or contain each other.\nA point on the plane is exposed to cosmic rays if the point is not within any of the barriers.\nSnuke wants to avoid exposure to cosmic rays as much as possible during the travel.\nFind the minimum possible duration of time he is exposed to cosmic rays during the travel.\n\n\n\n\nConstraints\nAll input values are integers.\n-10^9 \u2264 x_s, y_s, x_t, y_t \u2264 10^9\n(x_s, y_s) \u2260 (x_t, y_t)\n1\u2264N\u22641,000\n-10^9 \u2264 x_i, y_i \u2264 10^9\n1 \u2264 r_i \u2264 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx_s y_s x_t y_t\nN\nx_1 y_1 r_1\nx_2 y_2 r_2\n:\nx_N y_N r_N\n\n\n\n\n\nOutputPrint the minimum possible duration of time Snuke is exposed to cosmic rays during the travel.\nThe output is considered correct if the absolute or relative error is at most 10^{-9}.\n\n\n\n\n\n\nSample Input 1-2 -2 2 2\n1\n0 0 1\n\n\n\n\n\nSample Output 13.6568542495\n\nAn optimal route is as follows:\n\n\n\n\n\n\n\n\nSample Input 2-2 0 2 0\n2\n-1 0 2\n1 0 2\n\n\n\n\n\nSample Output 20.0000000000\n\nAn optimal route is as follows:\n\n\n\n\n\n\n\n\nSample Input 34 -2 -2 4\n3\n0 0 2\n4 0 1\n0 4 1\n\n\n\n\n\nSample Output 34.0000000000\n\nAn optimal route is as follows:"}
{"id": "p03867", "problem": "Score : 1000 points\n\n\nProblem StatementTakahashi and Aoki are going to together construct a sequence of integers.\nFirst, Takahashi will provide a sequence of integers a, satisfying all of the following conditions:\n\nThe length of a is N.\nEach element in a is an integer between 1 and K, inclusive.\na is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original.\n\nThen, Aoki will perform the following operation an arbitrary number of times:\n\nMove the first element in a to the end of a.\n\nHow many sequences a can be obtained after this procedure, modulo 10^9+7?\n\n\n\n\nConstraints\n1\u2264N\u226410^9\n1\u2264K\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the number of the sequences a that can be obtained after the procedure, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 14 2\n\n\n\n\n\nSample Output 16\n\nThe following six sequences can be obtained:\n\n(1, 1, 1, 1)\n(1, 1, 2, 2)\n(1, 2, 2, 1)\n(2, 2, 1, 1)\n(2, 1, 1, 2)\n(2, 2, 2, 2)\n\n\n\n\n\n\nSample Input 21 10\n\n\n\n\n\nSample Output 210\n\n\n\n\n\n\nSample Input 36 3\n\n\n\n\n\nSample Output 375\n\n\n\n\n\n\nSample Input 41000000000 1000000000\n\n\n\n\n\nSample Output 4875699961"}
{"id": "p03868", "problem": "Score : 500 points\n\n\nProblem Statement\nThere are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct.\nSnuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer.\nIn how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n0 \u2264 a_i, b_i \u2264 10^9\nThe coordinates are integers.\nThe coordinates are pairwise distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\nb_1\n:\nb_N\n\n\n\n\n\nOutputPrint the number of ways to minimize the total length of the cables, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12\n0\n10\n20\n30\n\n\n\n\n\nSample Output 12\n\nThere are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40.\n\n\n\n\n\nSample Input 23\n3\n10\n8\n7\n12\n5\n\n\n\n\n\nSample Output 21"}
{"id": "p03869", "problem": "Score : 500 points\n\n\nProblem Statement\nSnuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3).\nHe wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles.\n\n\n\n\nConstraints\n0 \u2264 x_i, y_i \u2264 1000\nThe coordinates are integers.\nThe three points are not on the same line.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx_1 y_1\nx_2 y_2\nx_3 y_3\n\n\n\n\n\nOutputPrint the maximum possible radius of the circles.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 10 0\n1 1\n2 0\n\n\n\n\n\nSample Output 10.292893218813\n\n\n\n\n\n\nSample Input 23 1\n1 5\n4 9\n\n\n\n\n\nSample Output 20.889055514217"}
{"id": "p03870", "problem": "Score : 500 points\n\n\nProblem Statement\nA cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses.\nHowever, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats.\nCompute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n2 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13\n2\n3\n4\n\n\n\n\n\nSample Output 13\n\nThe only way for the cheater to win the game is to take stones from all piles and eat them.\n\n\n\n\n\nSample Input 23\n100\n100\n100\n\n\n\n\n\nSample Output 2-1"}
{"id": "p03871", "problem": "Score : 1000 points\n\n\nProblem Statement\nThere are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents.\nPetr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins.\nIf both players play optimally, what is the probability that tourist wins the game?\n\n\n\n\nConstraints\n0 \u2264 p_i, q_i \u2264 100\np_1 + ... + p_6 = q_1 + ... + q_6 = 100\nAll values in the input are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\np_1 p_2 p_3 p_4 p_5 p_6\nq_1 q_2 q_3 q_4 q_5 q_6\n\n\n\n\n\nOutputPrint the probability that tourist wins.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 125 25 25 25 0 0\n0 0 0 0 50 50\n\n\n\n\n\nSample Output 11.000000000000\n\ntourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue.\n\n\n\n\n\nSample Input 210 20 20 10 20 20\n20 20 20 10 10 20\n\n\n\n\n\nSample Output 20.550000000000"}
{"id": "p03872", "problem": "Score : 1000 points\n\n\nProblem Statement\nThere are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters.\nSnuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type.\nSnuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 15\n0 \u2264 x_i, y_i, a_i \u2264 10^9\nAll values in the input are integers.\nNo two cities are at the same position.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 y_1 a_1\n:\nx_N y_N a_N\n\n\n\n\n\nOutputPrint the maximum of the minimum amount of water among the N cities.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 13\n0 0 10\n2 0 5\n0 5 8\n\n\n\n\n\nSample Output 16.500000000000\n\nThe optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water.\n\n\n\n\n\nSample Input 215\n335279264 849598327 822889311\n446755913 526239859 548830120\n181424399 715477619 342858071\n625711486 448565595 480845266\n647639160 467825612 449656269\n160714711 336869678 545923679\n61020590 573085537 816372580\n626006012 389312924 135599877\n547865075 511429216 605997004\n561330066 539239436 921749002\n650693494 63219754 786119025\n849028504 632532642 655702582\n285323416 611583586 211428413\n990607689 590857173 393671555\n560686330 679513171 501983447\n\n\n\n\n\nSample Output 2434666178.237122833729"}
{"id": "p03873", "problem": "Score : 1000 points\n\n\nProblem Statement\nSnuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval.\nSnuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d].\nHe can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero.\nCompute the minimum cost required to achieve his goal.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 5000\n1 \u2264 L_i, R_i \u2264 10^9\nAll values in the input are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nL_1 R_1\n:\nL_N R_N\n\n\n\n\n\nOutputPrint the minimum cost required to achieve his goal.\n\n\n\n\n\n\nSample Input 14\n2 7\n2 5\n4 1\n7 5\n\n\n\n\n\nSample Output 122\n\nOne optimal solution is as follows:\n\nMove the interval [-2, 7] to [6, 15] with 8 dollars\nMove the interval [-2, 5] to [-1, 6] with 1 dollars\nMove the interval [-4, 1] to [-6, -1] with 2 dollars\nMove the interval [-7, 5] to [-18, -6] with 11 dollars\n\nThe total cost is 8 + 1 + 2 + 11 = 22 dollars.\n\n\n\n\n\nSample Input 220\n97 2\n75 25\n82 84\n17 56\n32 2\n28 37\n57 39\n18 11\n79 6\n40 68\n68 16\n40 63\n93 49\n91 10\n55 68\n31 80\n57 18\n34 28\n76 55\n21 80\n\n\n\n\n\nSample Output 27337"}
{"id": "p03874", "problem": "Score : 1000 points\n\n\nProblem Statement\nWelcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions:\n\nThe length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 \u2264 i_0 < i_1 < ... < i_7 \u2264 |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'.\n\nIt can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any.\n\n\n\n\nConstraints\n1 \u2264 K \u2264 10^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint a string that satisfies the conditions.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 1FESSSSSSSTIVAL\n\n\n\n\n\n\nSample Input 2256\n\n\n\n\n\nSample Output 2FFEESSTTIIVVAALL"}
{"id": "p03875", "problem": "Score : 1500 points\n\n\nProblem Statement\nSnuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1.\nThen he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 \u2264 i, j \u2264 N, you are given c_{i, j}, the (i, j)-element of the matrix C.\nHowever, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 300\nc_{i, j} is either 0 or 1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nc_{1, 1} ... c_{1, N}\n:\nc_{N, 1} ... c_{N, N}\n\n\n\n\n\nOutputPrint the number of possible (ordered) pairs of two matrices A and B (modulo 10^9+7).\n\n\n\n\n\n\nSample Input 12\n0 1\n1 0\n\n\n\n\n\nSample Output 16\n\n\n\n\n\n\nSample Input 210\n1 0 0 1 1 1 0 0 1 0\n0 0 0 1 1 0 0 0 1 0\n0 0 1 1 1 1 1 1 1 1\n0 1 0 1 0 0 0 1 1 0\n0 0 1 0 1 1 1 1 1 1\n1 0 0 0 0 1 0 0 0 0\n1 1 1 0 1 0 0 0 0 1\n0 0 0 1 0 0 1 0 1 0\n0 0 0 1 1 1 0 0 0 0\n1 0 1 0 0 1 1 1 1 1\n\n\n\n\n\nSample Output 2741992411"}
{"id": "p03876", "problem": "Score : 1500 points\n\n\nProblem Statement\nConstruct an N-gon that satisfies the following conditions:\n\nThe polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees.\n\nIn case there are multiple possible answers, you can output any.\n\n\n\n\nNotesA polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex).\n\n\n\n\nConstraints\n3 \u2264 N \u2264 1000\na_i is either 90 or 270.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\n\n\n\n\n\nOutputIn case the answer exists, print the answer in the following format:\nx_1 y_1\n:\nx_N y_N\n\nHere (x_i, y_i) are the coordinates of the i-th vertex.\nIn case the answer doesn't exist, print a single -1.\n\n\n\n\n\n\nSample Input 18\n90\n90\n270\n90\n90\n90\n270\n90\n\n\n\n\n\nSample Output 10 0\n2 0\n2 1\n3 1\n3 2\n1 2\n1 1\n0 1\n\n\n\n\n\n\nSample Input 23\n90\n90\n90\n\n\n\n\n\nSample Output 2-1"}
{"id": "p03877", "problem": "Score : 1500 points\n\n\nProblem Statement\nConsider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that:\n\nEach integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3.\n\nNote that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more.\nCompute the number of ways to do this, modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 5000\n0 \u2264 A, B, C\nA + B + C = N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B C\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13 1 2 0\n\n\n\n\n\nSample Output 12\n\nThere are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6.\n\n\n\n\n\nSample Input 2600 100 200 300\n\n\n\n\n\nSample Output 2522158867"}
{"id": "p03878", "problem": "Score : 500 points\n\n\nProblem Statement\nThere are N computers and N sockets in a one-dimensional world.\nThe coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.\nIt is guaranteed that these 2N coordinates are pairwise distinct.\nSnuke wants to connect each computer to a socket using a cable.\nEach socket can be connected to only one computer.\nIn how many ways can he minimize the total length of the cables?\nCompute the answer modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n0 \u2264 a_i, b_i \u2264 10^9\nThe coordinates are integers.\nThe coordinates are pairwise distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\nb_1\n:\nb_N\n\n\n\n\n\nOutputPrint the number of ways to minimize the total length of the cables, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12\n0\n10\n20\n30\n\n\n\n\n\nSample Output 12\n\nThere are two optimal connections: 0-20, 10-30 and 0-30, 10-20.\nIn both connections the total length of the cables is 40.\n\n\n\n\n\nSample Input 23\n3\n10\n8\n7\n12\n5\n\n\n\n\n\nSample Output 21"}
{"id": "p03879", "problem": "Score : 500 points\n\n\nProblem Statement\nSnuke received a triangle as a birthday present.\nThe coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3).\nHe wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).\nCompute the maximum possible radius of the circles.\n\n\n\n\nConstraints\n0 \u2264 x_i, y_i \u2264 1000\nThe coordinates are integers.\nThe three points are not on the same line.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx_1 y_1\nx_2 y_2\nx_3 y_3\n\n\n\n\n\nOutputPrint the maximum possible radius of the circles.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 10 0\n1 1\n2 0\n\n\n\n\n\nSample Output 10.292893218813\n\n\n\n\n\n\nSample Input 23 1\n1 5\n4 9\n\n\n\n\n\nSample Output 20.889055514217"}
{"id": "p03880", "problem": "Score : 500 points\n\n\nProblem Statement\nA cheetah and a cheater are going to play the game of Nim.\nIn this game they use N piles of stones.\nInitially the i-th pile contains a_i stones.\nThe players take turns alternately, and the cheetah plays first.\nIn each turn, the player chooses one of the piles, and takes one or more stones from the pile.\nThe player who can't make a move loses.\nHowever, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.\nFrom each pile, the cheater takes zero or one stone and eats it before the game.\nIn case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats.\nCompute the number of stones the cheater will eat.\nIn case there is no way for the cheater to win the game even with the cheating, print -1 instead.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n2 \u2264 a_i \u2264 10^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13\n2\n3\n4\n\n\n\n\n\nSample Output 13\n\nThe only way for the cheater to win the game is to take stones from all piles and eat them.\n\n\n\n\n\nSample Input 23\n100\n100\n100\n\n\n\n\n\nSample Output 2-1"}
{"id": "p03881", "problem": "Score : 1000 points\n\n\nProblem Statement\nThere are two (6-sided) dice: a red die and a blue die.\nWhen a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents.\nPetr and tourist are playing the following game.\nBoth players know the probabilistic distributions of the two dice.\nFirst, Petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.\nThen, tourist guesses the color of the chosen die.\nIf he guesses the color correctly, tourist wins. Otherwise Petr wins.\nIf both players play optimally, what is the probability that tourist wins the game?\n\n\n\n\nConstraints\n0 \u2264 p_i, q_i \u2264 100\np_1 + ... + p_6 = q_1 + ... + q_6 = 100\nAll values in the input are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\np_1 p_2 p_3 p_4 p_5 p_6\nq_1 q_2 q_3 q_4 q_5 q_6\n\n\n\n\n\nOutputPrint the probability that tourist wins.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 125 25 25 25 0 0\n0 0 0 0 50 50\n\n\n\n\n\nSample Output 11.000000000000\n\ntourist can always win the game: If the number is at most 4, the color is definitely red. Otherwise the color is definitely blue.\n\n\n\n\n\nSample Input 210 20 20 10 20 20\n20 20 20 10 10 20\n\n\n\n\n\nSample Output 20.550000000000"}
{"id": "p03882", "problem": "Score : 1000 points\n\n\nProblem Statement\nThere are N cities in a two-dimensional plane.\nThe coordinates of the i-th city is (x_i, y_i).\nInitially, the amount of water stored in the i-th city is a_i liters.\nSnuke can carry any amount of water from a city to another city.\nHowever, water leaks out a bit while he carries it.\nIf he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.\nHere d_{s,t} denotes the (Euclidean) distance between the s-th city and the t-th city.\nHe can perform arbitrary number of operations of this type.\nSnuke wants to maximize the minimum amount of water among the N cities.\nFind the maximum X such that he can distribute at least X liters of water to each city.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 15\n0 \u2264 x_i, y_i, a_i \u2264 10^9\nAll values in the input are integers.\nNo two cities are at the same position.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 y_1 a_1\n:\nx_N y_N a_N\n\n\n\n\n\nOutputPrint the maximum of the minimum amount of water among the N cities.\nThe absolute error or the relative error must be at most 10^{-9}.\n\n\n\n\n\n\nSample Input 13\n0 0 10\n2 0 5\n0 5 8\n\n\n\n\n\nSample Output 16.500000000000\n\nThe optimal solution is to carry 3.5 liters of water from the 1st city to the 2nd city.\nAfter the operation, both the 1st and the 2nd cities will have 6.5 liters of water, and the 3rd city will have 8 liters of water.\n\n\n\n\n\nSample Input 215\n335279264 849598327 822889311\n446755913 526239859 548830120\n181424399 715477619 342858071\n625711486 448565595 480845266\n647639160 467825612 449656269\n160714711 336869678 545923679\n61020590 573085537 816372580\n626006012 389312924 135599877\n547865075 511429216 605997004\n561330066 539239436 921749002\n650693494 63219754 786119025\n849028504 632532642 655702582\n285323416 611583586 211428413\n990607689 590857173 393671555\n560686330 679513171 501983447\n\n\n\n\n\nSample Output 2434666178.237122833729"}
{"id": "p03883", "problem": "Score : 1000 points\n\n\nProblem Statement\nSnuke received N intervals as a birthday present.\nThe i-th interval was [-L_i, R_i].\nIt is guaranteed that both L_i and R_i are positive.\nIn other words, the origin is strictly inside each interval.\nSnuke doesn't like overlapping intervals, so he decided to move some intervals.\nFor any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.\nThat is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d].\nHe can repeat this type of operation arbitrary number of times.\nAfter the operations, the intervals must be pairwise disjoint (however, they may touch at a point).\nFormally, for any two intervals, the length of the intersection must be zero.\nCompute the minimum cost required to achieve his goal.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 5000\n1 \u2264 L_i, R_i \u2264 10^9\nAll values in the input are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nL_1 R_1\n:\nL_N R_N\n\n\n\n\n\nOutputPrint the minimum cost required to achieve his goal.\n\n\n\n\n\n\nSample Input 14\n2 7\n2 5\n4 1\n7 5\n\n\n\n\n\nSample Output 122\n\nOne optimal solution is as follows:\n\nMove the interval [-2, 7] to [6, 15] with 8 dollars\nMove the interval [-2, 5] to [-1, 6] with 1 dollars\nMove the interval [-4, 1] to [-6, -1] with 2 dollars\nMove the interval [-7, 5] to [-18, -6] with 11 dollars\n\nThe total cost is 8 + 1 + 2 + 11 = 22 dollars.\n\n\n\n\n\nSample Input 220\n97 2\n75 25\n82 84\n17 56\n32 2\n28 37\n57 39\n18 11\n79 6\n40 68\n68 16\n40 63\n93 49\n91 10\n55 68\n31 80\n57 18\n34 28\n76 55\n21 80\n\n\n\n\n\nSample Output 27337"}
{"id": "p03884", "problem": "Score : 1000 points\n\n\nProblem Statement\nWelcome to CODE FESTIVAL 2016!\nIn order to celebrate this contest, find a string s that satisfies the following conditions:\n\nThe length of s is between 1 and 5000, inclusive.\ns consists of uppercase letters.\ns contains exactly K occurrences of the string \"FESTIVAL\" as a subsequence.\nIn other words, there are exactly K tuples of integers (i_0, i_1, ..., i_7) such that 0 \u2264 i_0 < i_1 < ... < i_7 \u2264 |s|-1 and s[i_0]='F', s[i_1]='E', ..., s[i_7]='L'.\n\nIt can be proved that under the given constraints, the solution always exists.\nIn case there are multiple possible solutions, you can output any.\n\n\n\n\nConstraints\n1 \u2264 K \u2264 10^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nK\n\n\n\n\n\nOutputPrint a string that satisfies the conditions.\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 1FESSSSSSSTIVAL\n\n\n\n\n\n\nSample Input 2256\n\n\n\n\n\nSample Output 2FFEESSTTIIVVAALL"}
{"id": "p03885", "problem": "Score : 1500 points\n\n\nProblem Statement\nSnuke received two matrices A and B as birthday presents.\nEach of the matrices is an N by N matrix that consists of only 0 and 1.\nThen he computed the product of the two matrices, C = AB.\nSince he performed all computations in modulo two, C was also an N by N matrix that consists of only 0 and 1.\nFor each 1 \u2264 i, j \u2264 N, you are given c_{i, j}, the (i, j)-element of the matrix C.\nHowever, Snuke accidentally ate the two matrices A and B, and now he only knows C.\nCompute the number of possible (ordered) pairs of the two matrices A and B, modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 300\nc_{i, j} is either 0 or 1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nc_{1, 1} ... c_{1, N}\n:\nc_{N, 1} ... c_{N, N}\n\n\n\n\n\nOutputPrint the number of possible (ordered) pairs of two matrices A and B (modulo 10^9+7).\n\n\n\n\n\n\nSample Input 12\n0 1\n1 0\n\n\n\n\n\nSample Output 16\n\n\n\n\n\n\nSample Input 210\n1 0 0 1 1 1 0 0 1 0\n0 0 0 1 1 0 0 0 1 0\n0 0 1 1 1 1 1 1 1 1\n0 1 0 1 0 0 0 1 1 0\n0 0 1 0 1 1 1 1 1 1\n1 0 0 0 0 1 0 0 0 0\n1 1 1 0 1 0 0 0 0 1\n0 0 0 1 0 0 1 0 1 0\n0 0 0 1 1 1 0 0 0 0\n1 0 1 0 0 1 1 1 1 1\n\n\n\n\n\nSample Output 2741992411"}
{"id": "p03886", "problem": "Score : 1500 points\n\n\nProblem Statement\nConstruct an N-gon that satisfies the following conditions:\n\nThe polygon is simple (see notes for the definition).\nEach edge of the polygon is parallel to one of the coordinate axes.\nEach coordinate is an integer between 0 and 10^9, inclusive.\nThe vertices are numbered 1 through N in counter-clockwise order.\nThe internal angle at the i-th vertex is exactly a_i degrees.\n\nIn case there are multiple possible answers, you can output any.\n\n\n\n\nNotesA polygon is called simple if each edge has a positive length, and no two edges have a common point (except for adjacent edges touching at a vertex).\n\n\n\n\nConstraints\n3 \u2264 N \u2264 1000\na_i is either 90 or 270.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1\n:\na_N\n\n\n\n\n\nOutputIn case the answer exists, print the answer in the following format:\nx_1 y_1\n:\nx_N y_N\n\nHere (x_i, y_i) are the coordinates of the i-th vertex.\nIn case the answer doesn't exist, print a single -1.\n\n\n\n\n\n\nSample Input 18\n90\n90\n270\n90\n90\n90\n270\n90\n\n\n\n\n\nSample Output 10 0\n2 0\n2 1\n3 1\n3 2\n1 2\n1 1\n0 1\n\n\n\n\n\n\nSample Input 23\n90\n90\n90\n\n\n\n\n\nSample Output 2-1"}
{"id": "p03887", "problem": "Score : 1500 points\n\n\nProblem Statement\nConsider all integers between 1 and 2N, inclusive.\nSnuke wants to divide these integers into N pairs such that:\n\nEach integer between 1 and 2N is contained in exactly one of the pairs.\nIn exactly A pairs, the difference between the two integers is 1.\nIn exactly B pairs, the difference between the two integers is 2.\nIn exactly C pairs, the difference between the two integers is 3.\n\nNote that the constraints guarantee that N = A + B + C, thus no pair can have the difference of 4 or more.\nCompute the number of ways to do this, modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 5000\n0 \u2264 A, B, C\nA + B + C = N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A B C\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 13 1 2 0\n\n\n\n\n\nSample Output 12\n\nThere are two possibilities: 1-2, 3-5, 4-6 or 1-3, 2-4, 5-6.\n\n\n\n\n\nSample Input 2600 100 200 300\n\n\n\n\n\nSample Output 2522158867"}
{"id": "p03888", "problem": "Score : 100 points\n\n\nProblem StatementIn an electric circuit, when two resistors R_1 and R_2 are connected in parallel, the equivalent resistance R_3 can be derived from the following formula:\n\n\\frac{1}{R_1} + \\frac{1}{R_2} = \\frac{1}{R_3}\n\nGiven R_1 and R_2, find R_3.\n\n\n\n\nConstraints\n1 \\leq R_1, R_2 \\leq 100\nR_1 and R_2 are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nR_1 R_2\n\n\n\n\n\nOutputPrint the value of R_3.\nThe output is considered correct if the absolute or relative error is at most 10^{-6}.\n\n\n\n\n\n\nSample Input 12 3\n\n\n\n\n\nSample Output 11.2000000000\n\n\n\n\n\n\nSample Input 2100 99\n\n\n\n\n\nSample Output 249.7487437186"}
{"id": "p03889", "problem": "Score : 100 points\n\n\nProblem StatementYou are given a string S consisting of letters b, d, p and q.\nDetermine whether S is a mirror string.\nHere, a mirror string is a string S such that the following sequence of operations on S results in the same string S:\n\n\nReverse the order of the characters in S.\n\n\nReplace each occurrence of b by d, d by b, p by q, and q by p, simultaneously.\n\n\n\n\n\n\nConstraints\n1 \\leq |S| \\leq 10^5\nS consists of letters b, d, p, and q.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S is a mirror string, print Yes. Otherwise, print No.\n\n\n\n\n\n\nSample Input 1pdbq\n\n\n\n\n\nSample Output 1Yes\n\n\n\n\n\n\nSample Input 2ppqb\n\n\n\n\n\nSample Output 2No"}
{"id": "p03890", "problem": "Score : 100 points\n\n\nProblem StatementKode Festival is an anual contest where the hardest stone in the world is determined. (Kode is a Japanese word for \"hardness\".)\nThis year, 2^N stones participated. The hardness of the i-th stone is A_i.\nIn the contest, stones are thrown at each other in a knockout tournament.\nWhen two stones with hardness X and Y are thrown at each other, the following will happen:\n\n\nWhen X > Y:\n  The stone with hardness Y will be destroyed and eliminated.\n  The hardness of the stone with hardness X will become X-Y.\n\n\nWhen X = Y:\n  One of the stones will be destroyed and eliminated.\n  The hardness of the other stone will remain the same.\n\n\nWhen X < Y:\n  The stone with hardness X will be destroyed and eliminated.\n  The hardness of the stone with hardness Y will become Y-X.\n\n\nThe 2^N stones will fight in a knockout tournament as follows:\n\n\nThe following pairs will fight: (the 1-st stone versus the 2-nd stone), (the 3-rd stone versus the 4-th stone), ...\n\n\nThe following pairs will fight: (the winner of (1-st versus 2-nd) versus the winner of (3-rd versus 4-th)), (the winner of (5-th versus 6-th) versus the winner of (7-th versus 8-th)), ...\n\n\nAnd so forth, until there is only one stone remaining.\n\n\nDetermine the eventual hardness of the last stone remaining.\n\n\n\n\nConstraints\n1 \\leq N \\leq 18\n1 \\leq A_i \\leq 10^9\nA_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n:\nA_{2^N}\n\n\n\n\n\nOutputPrint the eventual hardness of the last stone remaining.\n\n\n\n\n\n\nSample Input 12\n1\n3\n10\n19\n\n\n\n\n\nSample Output 17\n\n\n\n\n\n\nSample Input 23\n1\n3\n2\n4\n6\n8\n100\n104\n\n\n\n\n\nSample Output 22"}
{"id": "p03891", "problem": "Score : 100 points\n\n\nProblem StatementA 3\u00d73 grid with a integer written in each square, is called a magic square if and only if the integers in each row, the integers in each column, and the integers in each diagonal (from the top left corner to the bottom right corner, and from the top right corner to the bottom left corner), all add up to the same sum.\nYou are given the integers written in the following three squares in a magic square:\n\nThe integer A at the upper row and left column\nThe integer B at the upper row and middle column\nThe integer C at the middle row and middle column\n\nDetermine the integers written in the remaining squares in the magic square.\nIt can be shown that there exists a unique magic square consistent with the given information.\n\n\n\n\nConstraints\n0 \\leq A, B, C \\leq 100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA\nB\nC\n\n\n\n\n\nOutputOutput the integers written in the magic square, in the following format:\nX_{1,1} X_{1,2} X_{1,3}\nX_{2,1} X_{2,2} X_{2,3}\nX_{3,1} X_{3,2} X_{3,3}\n\nwhere X_{i,j} is the integer written in the square at the i-th row and j-th column.\n\n\n\n\n\n\nSample Input 18\n3\n5\n\n\n\n\n\nSample Output 18 3 4\n1 5 9\n6 7 2\n\n\n\n\n\n\nSample Input 21\n1\n1\n\n\n\n\n\nSample Output 21 1 1\n1 1 1\n1 1 1"}
{"id": "p03892", "problem": "Score : 100 points\n\n\nProblem StatementTakahashi is drawing a segment on grid paper.\nFrom a certain square, a square that is x squares to the right and y squares above, is denoted as square (x, y).\nWhen Takahashi draws a segment connecting the lower left corner of square (A, B) and the lower left corner of square (C, D), find the number of the squares crossed by the segment.\nHere, the segment is said to cross a square if the segment has non-empty intersection with the region within the square, excluding the boundary.\n\n\n\n\nConstraints\n1 \\leq A, B, C, D \\leq 10^9\nAt least one of A \\neq C and B \\neq D holds.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B C D\n\n\n\n\n\nOutputPrint the number of the squares crossed by the segment.\n\n\n\n\n\n\nSample Input 11 1 3 4\n\n\n\n\n\nSample Output 14\n\n\n\n\n\n\nSample Input 22 3 10 7\n\n\n\n\n\nSample Output 28"}
{"id": "p03893", "problem": "Score : 100 points\n\n\nProblem StatementWe have a cord whose length is a positive integer. We will perform the following condition until the length of the cord becomes at most 2:\n\nOperation:\n  Cut the rope at two positions to obtain three cords, each with a length of a positive integer.\n  Among these, discard one with the longest length and one with the shortest length, and keep the remaining one.\n\nLet f(N) be the maximum possible number of times to perform this operation, starting with a cord with the length N.\nYou are given a positive integer X. Find the maximum integer N such that f(N)=X.\n\n\n\n\nConstraints\n1 \\leq X \\leq 40\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX\n\n\n\n\n\nOutputPrint the value of the maximum integer N such that f(N)=X.\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 114"}
{"id": "p03894", "problem": "Score : 100 points\n\n\nProblem StatementYou have N cups and 1 ball.\nThe cups are arranged in a row, from left to right.\nYou turned down all the cups, then inserted the ball into the leftmost cup.\nThen, you will perform the following Q operations:\n\nThe i-th operation: swap the positions of the A_i-th and B_i-th cups from the left. If one of these cups contains the ball, the ball will also move.\n\nSince you are a magician, you can cast a magic described below:\n\nMagic: When the ball is contained in the i-th cup from the left, teleport the ball into the adjacent cup (that is, the (i-1)-th or (i+1)-th cup, if they exist).\n\nThe magic can be cast before the first operation, between two operations, or after the last operation, but you are allowed to cast it at most once during the whole process.\nFind the number of cups with a possibility of containing the ball after all the operations and possibly casting the magic.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq Q \\leq 10^5\n1 \\leq A_i < B_i \\leq N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN Q\nA_1 B_1\nA_2 B_2\n:          \nA_Q B_Q\n\n\n\n\n\nOutputPrint the number of cups with a possibility of eventually containing the ball.\n\n\n\n\n\n\nSample Input 110 3\n1 3\n2 4\n4 5\n\n\n\n\n\nSample Output 14\n\n\n\n\n\n\nSample Input 220 3\n1 7\n8 20\n1 19\n\n\n\n\n\nSample Output 25"}
{"id": "p03895", "problem": "Score : 100 points\n\n\nProblem StatementTakahashi recorded his daily life for the last few days as a integer sequence of length 2N, as follows:\n\na_1, b_1, a_2, b_2, ... , a_N, b_N\n\nThis means that, starting from a certain time T, he was:\n\nsleeping for exactly a_1 seconds\nthen awake for exactly b_1 seconds\nthen sleeping for exactly a_2 seconds\n:\nthen sleeping for exactly a_N seconds\nthen awake for exactly b_N seconds\n\nIn this record, he waked up N times.\nTakahashi is wondering how many times he waked up early during the recorded period.\nHere, he is said to wake up early if he wakes up between 4:00 AM and 7:00 AM, inclusive.\nIf he wakes up more than once during this period, each of these awakenings is counted as waking up early.\nUnfortunately, he forgot the time T.\nFind the maximum possible number of times he waked up early during the recorded period.\nFor your information, a day consists of 86400 seconds, and the length of the period between 4:00 AM and 7:00 AM is 10800 seconds.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^5\n1 \\leq a_i, b_i \\leq 10^5\na_i and b_i are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 b_1\na_2 b_2\n:\na_N b_N\n\n\n\n\n\nOutputPrint the maximum possible number of times he waked up early during the recorded period.\n\n\n\n\n\n\nSample Input 13\n28800 57600\n28800 57600\n57600 28800\n\n\n\n\n\nSample Output 12\n\n\n\n\n\n\nSample Input 210\n28800 57600\n4800 9600\n6000 1200\n600 600\n300 600\n5400 600\n6000 5760\n6760 2880\n6000 12000\n9000 600\n\n\n\n\n\nSample Output 25"}
{"id": "p03896", "problem": "Score : 100 points\n\n\nProblem StatementThere are N persons, conveniently numbered 1 through N. They will take 3y3s Challenge for N-1 seconds.\nDuring the challenge, each person must look at each of the N-1 other persons for 1 seconds, in some order.\nIf any two persons look at each other during the challenge, the challenge ends in failure.\nFind the order in which each person looks at each of the N-1 other persons, to be successful in the challenge.\n\n\n\n\nConstraints\n2 \\leq N \\leq 100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputIf there exists no way to be successful in the challenge, print -1.\nIf there exists a way to be successful in the challenge, print any such way in the following format:\nA_{1,1} A_{1,2} ... A_{1, N-1}\nA_{2,1} A_{2,2} ... A_{2, N-1}\n:\nA_{N,1} A_{N,2} ... A_{N, N-1}\n\nwhere A_{i, j} is the index of the person that the person numbered i looks at during the j-th second.\n\n\n\n\nJudgingThe output is considered correct only if all of the following conditions are satisfied:\n\n1 \\leq A_{i,j} \\leq N\nFor each i, A_{i,1}, A_{i,2}, ... , A_{i, N-1} are pairwise distinct.\nLet X = A_{i, j}, then A_{X, j} \\neq i always holds.\n\n\n\n\n\n\n\nSample Input 17\n\n\n\n\n\nSample Output 12 3 4 5 6 7\n5 3 1 6 4 7\n2 7 4 1 5 6\n2 1 7 5 3 6\n1 4 3 7 6 2\n2 5 7 3 4 1\n2 6 1 4 5 3\n\n\n\n\n\n\nSample Input 22\n\n\n\n\n\nSample Output 2-1"}
{"id": "p03897", "problem": "Score : 100 points\n\n\nProblem StatementWe have an N\u00d7N checkerboard.\nFrom the square at the upper left corner, a square that is i squares to the right and j squares below is denoted as (i, j). Particularly, the square at the upper left corner is denoted as (0, 0).\nEach square (i, j) such that i+j is even, is colored black, and the other squares are colored white.\nWe will satisfy the following condition by painting some of the white squares:\n\nAny black square can be reached from square (0, 0) by repeatedly moving to a black square that shares a side with the current square.\n\nAchieve the objective by painting at most 170000 squares black.\n\n\n\n\nConstraints\n1 \\leq N \\leq 1,000\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the squares to paint in the following format:\nK\nx_1 y_1\nx_2 y_2\n:\nx_K y_K\n\nThis means that a total of K squares are painted black, the i-th of which is (x_i, y_i).\n\n\n\n\nJudgingThe output is considered correct only if all of the following conditions are satisfied:\n\n0 \\leq K \\leq 170000\n0 \\leq x_i, y_i \\leq N-1\nFor each i, x_i + y_i is odd.\nIf i \\neq j, then (x_i, y_i) \\neq (x_j, y_j).\nThe condition in the statement is satisfied by painting all specified squares.\n\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 11\n1 0\n\n\n\n\n\n\nSample Input 24\n\n\n\n\n\nSample Output 23\n0 1\n2 1\n2 3"}
{"id": "p03898", "problem": "Score : 100 points\n\n\nProblem StatementThere is a tree with N vertices, numbered 1 through N.\nThe i-th of the N-1 edges connects the vertices p_i and q_i.\nAmong the sequences of distinct vertices v_1, v_2, ..., v_M that satisfy the following condition, find the maximum value of M.\n\nFor every 1 \\leq i < M, the path connecting the vertices v_i and v_{i+1} do not contain any vertex in v, except for v_i and v_{i+1}.\n\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq p_i, q_i \\leq N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\np_1 q_1\np_2 q_2\n:\np_{N-1} q_{N-1}\n\n\n\n\n\nOutputPrint the maximum value of M, the number of elements, among the sequences of vertices that satisfy the condition.\n\n\n\n\n\n\nSample Input 14\n1 2\n2 3\n2 4\n\n\n\n\n\nSample Output 13\n\n\n\n\n\n\nSample Input 210\n7 9\n1 2\n6 4\n8 1\n3 7\n6 5\n2 10\n9 6\n2 6\n\n\n\n\n\nSample Output 28"}
{"id": "p03899", "problem": "Score : 700 points\n\n\nProblem StatementThere are N panels arranged in a row in Takahashi's house, numbered 1 through N. The i-th panel has a number A_i written on it. Takahashi is playing by throwing balls at these panels.\nTakahashi threw a ball K times. Let the panel hit by a boll in the i-th throw be panel p_i. He set the score for the i-th throw as i \\times A_{p_i}.\nHe was about to calculate the total score for his throws, when he realized that he forgot the panels hit by balls, p_1,p_2,...,p_K. The only fact he remembers is that for every i (1 \u2266 i \u2266 K-1), 1 \u2266 p_{i+1}-p_i \u2266 M holds. Based on this fact, find the maximum possible total score for his throws.\n\n\n\n\nConstraints\n1 \u2266 M \u2266 N \u2266 100,000\n1 \u2266 K \u2266 min(300,N)\n1 \u2266 A_i \u2266 10^{9}\n\n\n\n\n\nPartial Scores\nIn the test set worth 100 points, M = N.\nIn the test set worth another 200 points, N \u2266 300 and K \u2266 30.\nIn the test set worth another 300 points, K \u2266 30.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M K\nA_1 A_2 \u2026 A_N\n\n\n\n\n\nOutputPrint the maximum possible total score for Takahashi's throws.\n\n\n\n\n\n\nSample Input 15 2 3\n10 2 8 10 2\n\n\n\n\n\nSample Output 156\n\nThe total score is maximized when panels 1,3 and 4 are hit, in this order.\n\n\n\n\n\nSample Input 25 5 2\n5 2 10 5 9\n\n\n\n\n\nSample Output 228\n\nThis case satisfies the additional constraint M = N for a partial score.\n\n\n\n\n\nSample Input 310 3 5\n3 7 2 6 9 4 8 5 1 1000000000\n\n\n\n\n\nSample Output 35000000078"}
{"id": "p03900", "problem": "Score : 1400 points\n\n\nProblem StatementTakahashi found an integer sequence (A_1,A_2,...,A_N) with N terms. Since it was too heavy to carry, he decided to compress it into a single integer.\nThe compression takes place in N-1 steps, each of which shorten the length of the sequence by 1. Let S be a string describing the steps, and the sequence on which the i-th step is performed be (a_1,a_2,...,a_K), then the i-th step will be as follows:\n\nWhen the i-th character in S is M, let b_i = max(a_i,a_{i+1}) (1 \u2266 i \u2266 K-1), and replace the current sequence by (b_1,b_2,...,b_{K-1}).\nWhen the i-th character in S is m, let b_i = min(a_i,a_{i+1}) (1 \u2266 i \u2266 K-1), and replace the current sequence by (b_1,b_2,...,b_{K-1}).\n\nTakahashi decided the steps S, but he is too tired to carry out the compression. On behalf of him, find the single integer obtained from the compression.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 N\nS consists of N-1 characters.\nEach character in S is either M or m.\n\n\n\n\n\nPartial Scores\nIn the test set worth 400 points, there exists i (1 \u2266 i < N-1) such that the first i characters in S are M, and the remaining characters are m, that is, S is in the form M...Mm...m.\nIn the test set worth 800 points, the odd-number-th characters in S are M, and the even-number-th characters are m, that is, S is in the form MmMmMm....\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \u2026 A_N\nS\n\n\n\n\n\nOutputPrint the single integer obtained from the compression.\n\n\n\n\n\n\nSample Input 14\n1 2 3 4\nMmM\n\n\n\n\n\nSample Output 13\n\nThe initial sequence ( 1 , 2 , 3 , 4 ) is compressed as follows:\n\nAfter the first step, the sequence is ( 2 , 3 , 4 ).\nAfter the second step, the sequence is ( 2 , 3 ).\nAfter the third step, the sequence is ( 3 ).\n\nThus, the single integer obtained from the compression is 3.\n\n\n\n\n\nSample Input 25\n3 4 2 2 1\nMMmm\n\n\n\n\n\nSample Output 22\n\n\n\n\n\n\nSample Input 310\n1 8 7 6 8 5 2 2 6 1\nMmmmmMMMm\n\n\n\n\n\nSample Output 35\n\n\n\n\n\n\nSample Input 420\n12 7 16 8 7 19 8 19 20 11 7 13 20 3 4 11 19 11 15 5\nmMMmmmMMMMMMmMmmmMM\n\n\n\n\n\nSample Output 411"}
{"id": "p03901", "problem": "Score : 700 points\n\n\nProblem StatementAoki is in search of Takahashi, who is missing in a one-dimentional world.\nInitially, the coordinate of Aoki is 0, and the coordinate of Takahashi is known to be x, but his coordinate afterwards cannot be known to Aoki.\nTime is divided into turns. In each turn, Aoki and Takahashi take the following actions simultaneously:\n\n\nLet the current coordinate of Aoki be a, then Aoki moves to a coordinate he selects from a-1, a and a+1.\n\n\nLet the current coordinate of Takahashi be b, then Takahashi moves to the coordinate b-1 with probability of p percent, and moves to the coordinate b+1 with probability of 100-p percent.\n\n\nWhen the coordinates of Aoki and Takahashi coincide, Aoki can find Takahashi.\nWhen they pass by each other, Aoki cannot find Takahashi.\nAoki wants to minimize the expected number of turns taken until he finds Takahashi. Find the minimum possible expected number of turns.\n\n\n\n\nConstraints\n1 \u2266 x \u2266 1,000,000,000\n1 \u2266 p \u2266 100\nx and p are integers.\n\n\n\n\n\nPartial Scores\nIn the test set worth 200 points, p=100.\nIn the test set worth 300 points, x \u2266 10.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nx\np\n\n\n\n\n\nOutputPrint the minimum possible expected number of turns.\nThe output is considered correct if the absolute or relative error is at most 10^{-6}.\n\n\n\n\n\n\nSample Input 13\n100\n\n\n\n\n\nSample Output 12.0000000\n\nTakahashi always moves by -1.\nThus, by moving to the coordinate 1 in the 1-st turn and staying at that position in the 2-nd turn, Aoki can find Takahashi in 2 turns.\n\n\n\n\n\nSample Input 26\n40\n\n\n\n\n\nSample Output 27.5000000\n\n\n\n\n\n\nSample Input 3101\n80\n\n\n\n\n\nSample Output 363.7500000"}
{"id": "p03902", "problem": "Score : 1200 points\n\n\nProblem StatementTakahashi is a magician. He can cast a spell on an integer sequence (a_1,a_2,...,a_M) with M terms, to turn it into another sequence (s_1,s_2,...,s_M), where s_i is the sum of the first i terms in the original sequence.\nOne day, he received N integer sequences, each with M terms, and named those sequences A_1,A_2,...,A_N. He will try to cast the spell on those sequences so that A_1 < A_2 < ... < A_N will hold, where sequences are compared lexicographically.\nLet the action of casting the spell on a selected sequence be one cast of the spell. Find the minimum number of casts of the spell he needs to perform in order to achieve his objective.\nHere, for two sequences a = (a_1,a_2,...,a_M), b = (b_1,b_2,...,b_M) with M terms each, a < b holds lexicographically if and only if there exists i (1 \u2266 i \u2266 M) such that a_j = b_j (1 \u2266 j < i) and a_i < b_i.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^3\n1 \u2266 M \u2266 10^3\nLet the j-th term in A_i be A_{(i,j)}, then 1 \u2266 A_{(i,j)} \u2266 10^9.\n\n\n\n\n\nPartial Scores\nIn the test set worth 200 points, Takahashi can achieve his objective by at most 10^4 casts of the spell, while keeping the values of all terms at most 10^9.\nIn the test set worth another 800 points, A_{(i,j)} \u2266 80.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nA_{(1,1)} A_{(1,2)} \u2026 A_{(1,M)}\nA_{(2,1)} A_{(2,2)} \u2026 A_{(2,M)}\n:\nA_{(N,1)} A_{(N,2)} \u2026 A_{(N,M)}\n\n\n\n\n\nOutputPrint the minimum number of casts of the spell Takahashi needs to perform. If he cannot achieve his objective, print -1 instead.\n\n\n\n\n\n\nSample Input 13 3\n2 3 1\n2 1 2\n2 6 3\n\n\n\n\n\nSample Output 11\n\nTakahashi can achieve his objective by casting the spell on A_2 once to turn it into (2 , 3 , 5).\n\n\n\n\n\nSample Input 23 3\n3 2 10\n10 5 4\n9 1 9\n\n\n\n\n\nSample Output 2-1\n\nIn this case, Takahashi cannot achieve his objective by casting the spell any number of times.\n\n\n\n\n\nSample Input 35 5\n2 6 5 6 9\n2 6 4 9 10\n2 6 8 6 7\n2 1 7 3 8\n2 1 4 8 3\n\n\n\n\n\nSample Output 311"}
{"id": "p03903", "problem": "Score : 700 points\n\n\nProblem StatementTakahashi found an undirected connected graph with N vertices and M edges. The vertices are numbered 1 through N. The i-th edge connects vertices a_i and b_i, and has a weight of c_i.\nHe will play Q rounds of a game using this graph. In the i-th round, two vertices S_i and T_i are specified, and he will choose a subset of the edges such that any vertex can be reached from at least one of the vertices S_i or T_i by traversing chosen edges.\nFor each round, find the minimum possible total weight of the edges chosen by Takahashi.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 4,000\n1 \u2266 M \u2266 400,000\n1 \u2266 Q \u2266 100,000\n1 \u2266 a_i,b_i,S_i,T_i \u2266 N\n1 \u2266 c_i \u2266 10^{9}\na_i \\neq b_i\nS_i \\neq T_i\nThe given graph is connected.\n\n\n\n\n\nPartial Scores\nIn the test set worth 200 points, Q = 1.\nIn the test set worth another 300 points, Q \u2266 3000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\na_1 b_1 c_1\na_2 b_2 c_2\n:\na_M b_M c_M\nQ\nS_1 T_1\nS_2 T_2\n:\nS_Q T_Q\n\n\n\n\n\nOutputPrint Q lines. The i-th line should contain the minimum possible total weight of the edges chosen by Takahashi.\n\n\n\n\n\n\nSample Input 14 3\n1 2 3\n2 3 4\n3 4 5\n2\n2 3\n1 4\n\n\n\n\n\nSample Output 18\n7\n\nWe will examine each round:\n\nIn the 1-st round, choosing edges 1 and 3 achieves the minimum total weight of 8.\nIn the 2-nd round, choosing edges 1 and 2 achieves the minimum total weight of 7.\n\n\n\n\n\n\nSample Input 24 6\n1 3 5\n4 1 10\n2 4 6\n3 2 2\n3 4 5\n2 1 3\n1\n2 3\n\n\n\n\n\nSample Output 28\n\nThis input satisfies the additional constraints for both partial scores."}
{"id": "p03904", "problem": "Score : 1000 points\n\n\nProblem StatementYou are given a string S consisting of digits between 1 and 9, inclusive.\nYou will insert at most K commas (,) into this string to separate it into multiple numbers.\nYour task is to minimize the maximum number among those produced by inserting commas. Find minimum possible such value.\n\n\n\n\nConstraints\n0 \u2266 K < |S| \u2266 100,000\nS consists of digits between 1 and 9, inclusive.\n\n\n\n\n\nPartial Scores\nIn the test set worth 100 points, |S| \u2266 2.\nIn the test set worth another 100 points, |S| \u2266 16.\nIn the test set worth another 200 points, |S| \u2266 100.\nIn the test set worth another 200 points, |S| \u2266 2,000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nK\nS\n\n\n\n\n\nOutputPrint the minimum possible value.\n\n\n\n\n\n\nSample Input 12\n15267315\n\n\n\n\n\nSample Output 1315\n\nWhen the string is separated into 152, 67 and 315, the maximum among these is 315, which is the minimum possible value.\n\n\n\n\n\nSample Input 20\n12456174517653111\n\n\n\n\n\nSample Output 212456174517653111\n\n12456174517653111 itself is the answer.\n\n\n\n\n\nSample Input 38\n127356176351764127645176543176531763517635176531278461856198765816581726586715987216581\n\n\n\n\n\nSample Output 35317635176"}
{"id": "p03905", "problem": "Score : 1500 points\n\n\nProblem StatementThere is an undirected connected graph with N vertices numbered 1 through N.\nThe lengths of all edges in this graph are 1.\nIt is known that for each i (1\u2266i\u2266N), the distance between vertex 1 and vertex i is A_i, and the distance between vertex 2 and vertex i is B_i.\nDetermine whether there exists such a graph.\nIf it exists, find the minimum possible number of edges in it.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n0\u2266A_i,B_i\u2266N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\n\n\n\nOutputIf there exists a graph satisfying the conditions, print the minimum possible number of edges in such a graph. Otherwise, print -1.\n\n\n\n\n\n\nSample Input 14\n0 1\n1 0\n1 1\n2 1\n\n\n\n\n\nSample Output 14\n\nThe figure below shows two possible graphs. The graph on the right has fewer edges.\n\n\n\n\n\n\nSample Input 23\n0 1\n1 0\n2 2\n\n\n\n\n\nSample Output 2-1\n\nSuch a graph does not exist."}
{"id": "p03906", "problem": "Score : 1500 points\n\n\nProblem StatementThe currency used in Takahashi Kingdom is Myon.\nThere are 1-, 10-, 100-, 1000- and 10000-Myon coins, and so forth. Formally, there are 10^n-Myon coins for any non-negative integer n.\nThere are N items being sold at Ex Store.\nThe price of the i-th (1\u2266i\u2266N) item is A_i Myon.\nTakahashi is going to buy some, at least one, possibly all, of these N items.\nHe hates receiving change, so he wants to bring coins to the store so that he can pay the total price without receiving change, no matter what items he chooses to buy.\nAlso, since coins are heavy, he wants to bring as few coins as possible.\nFind the minimum number of coins he must bring to the store. It can be assumed that he has an infinite supply of coins.\n\n\n\n\nConstraints\n1\u2266N\u226620,000\n1\u2266A_i\u226610^{12}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the minimum number of coins Takahashi must bring to the store, so that he can pay the total price without receiving change, no matter what items he chooses to buy.\n\n\n\n\n\n\nSample Input 13\n43 24 37\n\n\n\n\n\nSample Output 116\n\nThere are seven possible total prices: 24, 37, 43, 61, 67, 80, and 104.\nWith seven 1-Myon coins, eight 10-Myon coins and one 100-Myon coin, Takahashi can pay any of these without receiving change.\n\n\n\n\n\nSample Input 25\n49735011221 970534221705 411566391637 760836201000 563515091165\n\n\n\n\n\nSample Output 2105"}
{"id": "p03907", "problem": "Score : 1500 points\n\n\nProblem StatementThere is an undirected connected graph with N vertices numbered 1 through N.\nThe lengths of all edges in this graph are 1.\nIt is known that for each i (1\u2266i\u2266N), the distance between vertex 1 and vertex i is A_i, and the distance between vertex 2 and vertex i is B_i.\nDetermine whether there exists such a graph.\nIf it exists, find the minimum possible number of edges in it.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n0\u2266A_i,B_i\u2266N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\n\n\n\nOutputIf there exists a graph satisfying the conditions, print the minimum possible number of edges in such a graph. Otherwise, print -1.\n\n\n\n\n\n\nSample Input 14\n0 1\n1 0\n1 1\n2 1\n\n\n\n\n\nSample Output 14\n\nThe figure below shows two possible graphs. The graph on the right has fewer edges.\n\n\n\n\n\n\nSample Input 23\n0 1\n1 0\n2 2\n\n\n\n\n\nSample Output 2-1\n\nSuch a graph does not exist."}
{"id": "p03908", "problem": "Score : 1500 points\n\n\nProblem StatementThe currency used in Takahashi Kingdom is Myon.\nThere are 1-, 10-, 100-, 1000- and 10000-Myon coins, and so forth. Formally, there are 10^n-Myon coins for any non-negative integer n.\nThere are N items being sold at Ex Store.\nThe price of the i-th (1\u2266i\u2266N) item is A_i Myon.\nTakahashi is going to buy some, at least one, possibly all, of these N items.\nHe hates receiving change, so he wants to bring coins to the store so that he can pay the total price without receiving change, no matter what items he chooses to buy.\nAlso, since coins are heavy, he wants to bring as few coins as possible.\nFind the minimum number of coins he must bring to the store. It can be assumed that he has an infinite supply of coins.\n\n\n\n\nConstraints\n1\u2266N\u226620,000\n1\u2266A_i\u226610^{12}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the minimum number of coins Takahashi must bring to the store, so that he can pay the total price without receiving change, no matter what items he chooses to buy.\n\n\n\n\n\n\nSample Input 13\n43 24 37\n\n\n\n\n\nSample Output 116\n\nThere are seven possible total prices: 24, 37, 43, 61, 67, 80, and 104.\nWith seven 1-Myon coins, eight 10-Myon coins and one 100-Myon coin, Takahashi can pay any of these without receiving change.\n\n\n\n\n\nSample Input 25\n49735011221 970534221705 411566391637 760836201000 563515091165\n\n\n\n\n\nSample Output 2105"}
{"id": "p03910", "problem": "Score : 300 points\n\n\nProblem StatementThe problem set at CODE FESTIVAL 20XX Finals consists of N problems.\nThe score allocated to the i-th (1\u2266i\u2266N) problem is i points.\nTakahashi, a contestant, is trying to score exactly N points. For that, he is deciding which problems to solve.\nAs problems with higher scores are harder, he wants to minimize the highest score of a problem among the ones solved by him.\nDetermine the set of problems that should be solved.\n\n\n\n\nConstraints\n1\u2266N\u226610^7\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 1\u2266N\u22661000.\nAdditional 100 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputAmong the sets of problems with the total score of N, find a set in which the highest score of a problem is minimum, then print the indices of the problems in the set in any order, one per line.\nIf there exists more than one such set, any of them will be accepted.\n\n\n\n\n\n\nSample Input 14\n\n\n\n\n\nSample Output 11\n3\n\nSolving only the 4-th problem will also result in the total score of 4 points, but solving the 1-st and 3-rd problems will lower the highest score of a solved problem.\n\n\n\n\n\nSample Input 27\n\n\n\n\n\nSample Output 21\n2\n4\n\nThe set \\{3,4\\} will also be accepted.\n\n\n\n\n\nSample Input 31\n\n\n\n\n\nSample Output 31"}
{"id": "p03911", "problem": "Score : 400 points\n\n\nProblem StatementOn a planet far, far away, M languages are spoken. They are conveniently numbered 1 through M.\nFor CODE FESTIVAL 20XX held on this planet, N participants gathered from all over the planet.\nThe i-th (1\u2266i\u2266N) participant can speak K_i languages numbered L_{i,1}, L_{i,2}, ..., L_{i,{}K_i}.\nTwo participants A and B can communicate with each other if and only if one of the following conditions is satisfied:\n\nThere exists a language that both A and B can speak.\nThere exists a participant X that both A and B can communicate with.\n\nDetermine whether all N participants can communicate with all other participants.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n1\u2266M\u226610^5\n1\u2266K_i\u2266M\n(The sum of all K_i)\u226610^5\n1\u2266L_{i,j}\u2266M\nL_{i,1}, L_{i,2}, ..., L_{i,{}K_i} are pairwise distinct.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying the following: N\u22661000, M\u22661000 and (The sum of all K_i)\u22661000.\nAdditional 200 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nK_1 L_{1,1} L_{1,2} ... L_{1,{}K_1}\nK_2 L_{2,1} L_{2,2} ... L_{2,{}K_2}\n:\nK_N L_{N,1} L_{N,2} ... L_{N,{}K_N}\n\n\n\n\n\nOutputIf all N participants can communicate with all other participants, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 14 6\n3 1 2 3\n2 4 2\n2 4 6\n1 6\n\n\n\n\n\nSample Output 1YES\n\nAny two participants can communicate with each other, as follows:\n\nParticipants 1 and 2: both can speak language 2.\nParticipants 2 and 3: both can speak language 4.\nParticipants 1 and 3: both can communicate with participant 2.\nParticipants 3 and 4: both can speak language 6.\nParticipants 2 and 4: both can communicate with participant 3.\nParticipants 1 and 4: both can communicate with participant 2.\n\nNote that there can be languages spoken by no participant.\n\n\n\n\n\nSample Input 24 4\n2 1 2\n2 1 2\n1 3\n2 4 3\n\n\n\n\n\nSample Output 2NO\n\nFor example, participants 1 and 3 cannot communicate with each other."}
{"id": "p03912", "problem": "Score : 700 points\n\n\nProblem StatementTakahashi is playing with N cards.\nThe i-th card has an integer X_i on it.\nTakahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions:\n\nThe integers on the two cards are the same.\nThe sum of the integers on the two cards is a multiple of M.\n\nFind the maximum number of pairs that can be created.\nNote that a card cannot be used in more than one pair.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n1\u2266M\u226610^5\n1\u2266X_i\u226610^5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nX_1 X_2 ... X_N\n\n\n\n\n\nOutputPrint the maximum number of pairs that can be created.\n\n\n\n\n\n\nSample Input 17 5\n3 1 4 1 5 9 2\n\n\n\n\n\nSample Output 13\n\nThree pairs (3,2), (1,4) and (1,9) can be created.\nIt is possible to create pairs (3,2) and (1,1), but the number of pairs is not maximized with this.\n\n\n\n\n\nSample Input 215 10\n1 5 6 10 11 11 11 20 21 25 25 26 99 99 99\n\n\n\n\n\nSample Output 26"}
{"id": "p03913", "problem": "Score : 1000 points\n\n\nProblem StatementRng is baking cookies.\nInitially, he can bake one cookie per second.\nHe can also eat the cookies baked by himself.\nWhen there are x cookies not yet eaten, he can choose to eat all those cookies. After he finishes eating those cookies, the number of cookies he can bake per second becomes x. Note that a cookie always needs to be baked for 1 second, that is, he cannot bake a cookie in 1/x seconds when x > 1.\nWhen he choose to eat the cookies, he must eat all of them; he cannot choose to eat only part of them.\nIt takes him A seconds to eat the cookies regardless of how many, during which no cookies can be baked.\nHe wants to give N cookies to Grandma.\nFind the shortest time needed to produce at least N cookies not yet eaten.\n\n\n\n\nConstraints\n1\u2266N\u226610^{12}\n0\u2266A\u226610^{12}\nA is an integer.\n\n\n\n\n\nPartial Score\n500 points will be awarded for passing the test set satisfying N\u226610^6 and A\u226610^6.\nAdditional 500 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A\n\n\n\n\n\nOutputPrint the shortest time needed to produce at least N cookies not yet eaten.\n\n\n\n\n\n\nSample Input 18 1\n\n\n\n\n\nSample Output 17\n\nIt is possible to produce 8 cookies in 7 seconds, as follows:\n\nAfter 1 second: 1 cookie is done.\nAfter 2 seconds: 1 more cookie is done, totaling 2. Now, Rng starts eating those 2 cookies.\nAfter 3 seconds: He finishes eating the cookies, and he can now bake 2 cookies per second.\nAfter 4 seconds: 2 cookies are done.\nAfter 5 seconds: 2 more cookies are done, totaling 4.\nAfter 6 seconds: 2 more cookies are done, totaling 6.\nAfter 7 seconds: 2 more cookies are done, totaling 8.\n\n\n\n\n\n\nSample Input 21000000000000 1000000000000\n\n\n\n\n\nSample Output 21000000000000"}
{"id": "p03914", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N towns in Takahashi Kingdom. They are conveniently numbered 1 through N.\nTakahashi the king is planning to go on a tour of inspection for M days. He will determine a sequence of towns c, and visit town c_i on the i-th day. That is, on the i-th day, he will travel from his current location to town c_i. If he is already at town c_i, he will stay at that town. His location just before the beginning of the tour is town 1, the capital. The tour ends at town c_M, without getting back to the capital. \nThe problem is that there is no paved road in this kingdom. He decided to resolve this issue by paving the road himself while traveling. When he travels from town a to town b, there will be a newly paved one-way road from town a to town b.\nSince he cares for his people, he wants the following condition to be satisfied after his tour is over: \"it is possible to travel from any town to any other town by traversing roads paved by him\". How many sequences of towns c satisfy this condition?\n\n\n\n\nConstraints\n2\u2266N\u2266300\n1\u2266M\u2266300\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the number of sequences of towns satisfying the condition, modulo 1000000007 (=10^9+7).\n\n\n\n\n\n\nSample Input 13 3\n\n\n\n\n\nSample Output 12\n\nAs shown below, the condition is satisfied only when c = (2,3,1) or c = (3,2,1). Sequences such as c = (2,3,2), c = (2,1,3), c = (1,2,2) do not satisfy the condition.\n\n\n\n\n\n\nSample Input 2150 300\n\n\n\n\n\nSample Output 2734286322\n\n\n\n\n\n\nSample Input 3300 150\n\n\n\n\n\nSample Output 30"}
{"id": "p03915", "problem": "Score : 1300 points\n\n\nProblem StatementWe have a graph with N vertices, numbered 0 through N-1. Edges are yet to be added.\nWe will process Q queries to add edges.\nIn the i-th (1\u2266i\u2266Q) query, three integers A_i, B_i and C_i will be given, and we will add infinitely many edges to the graph as follows:\n\nThe two vertices numbered A_i and B_i will be connected by an edge with a weight of C_i.\nThe two vertices numbered B_i and A_i+1 will be connected by an edge with a weight of C_i+1.\nThe two vertices numbered A_i+1 and B_i+1 will be connected by an edge with a weight of C_i+2.\nThe two vertices numbered B_i+1 and A_i+2 will be connected by an edge with a weight of C_i+3.\nThe two vertices numbered A_i+2 and B_i+2 will be connected by an edge with a weight of C_i+4.\nThe two vertices numbered B_i+2 and A_i+3 will be connected by an edge with a weight of C_i+5.\nThe two vertices numbered A_i+3 and B_i+3 will be connected by an edge with a weight of C_i+6.\n...\n\nHere, consider the indices of the vertices modulo N.\nFor example, the vertice numbered N is the one numbered 0, and the vertice numbered 2N-1 is the one numbered N-1.\nThe figure below shows the first seven edges added when N=16, A_i=7, B_i=14, C_i=1:\n\nAfter processing all the queries, find the total weight of the edges contained in a minimum spanning tree of the graph.\n\n\n\n\nConstraints\n2\u2266N\u2266200,000\n1\u2266Q\u2266200,000\n0\u2266A_i,B_i\u2266N-1\n1\u2266C_i\u226610^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN Q\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_Q B_Q C_Q\n\n\n\n\n\nOutputPrint the total weight of the edges contained in a minimum spanning tree of the graph.\n\n\n\n\n\n\nSample Input 17 1\n5 2 1\n\n\n\n\n\nSample Output 121\n\nThe figure below shows the minimum spanning tree of the graph:\n\nNote that there can be multiple edges connecting the same pair of vertices.\n\n\n\n\n\nSample Input 22 1\n0 0 1000000000\n\n\n\n\n\nSample Output 21000000001\n\nAlso note that there can be self-loops.\n\n\n\n\n\nSample Input 35 3\n0 1 10\n0 2 10\n0 4 10\n\n\n\n\n\nSample Output 342"}
{"id": "p03916", "problem": "Score : 1600 points\n\n\nProblem StatementThere are N squares in a row, numbered 1 through N from left to right.\nSnuke and Rng are playing a board game using these squares, described below:\n\nFirst, Snuke writes an integer into each square.\nEach of the two players possesses one piece. Snuke places his piece onto square 1, and Rng places his onto square 2.\nThe player whose piece is to the left of the opponent's, moves his piece. The destination must be a square to the right of the square where the piece is currently placed, and must not be a square where the opponent's piece is placed.\nRepeat step 3. When the pieces cannot be moved any more, the game ends.\nThe score of each player is calculated as the sum of the integers written in the squares where the player has placed his piece before the end of the game.\n\nSnuke has already written an integer A_i into square i (1\u2266i\u2266N-1), but not into square N yet.\nHe has decided to calculate for each of M integers X_1,X_2,...,X_M, if he writes it into square N and the game is played, what the value \"(Snuke's score) - (Rng's score)\" will be.\nHere, it is assumed that each player moves his piece to maximize the value \"(the player's score) - (the opponent's score)\".\n\n\n\n\nConstraints\n3\u2266N\u2266200,000\n0\u2266A_i\u226610^6\nThe sum of all A_i is at most 10^6.\n1\u2266M\u2266200,000\n0\u2266X_i\u226610^9\n\n\n\n\n\nPartial Scores\n700 points will be awarded for passing the test set satisfying M=1.\nAdditional 900 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_{N-1}\nM\nX_1\nX_2\n:\nX_M\n\n\n\n\n\nOutputFor each of the M integers X_1, ..., X_M, print the value \"(Snuke's score) - (Rng's score)\" if it is written into square N, one per line.\n\n\n\n\n\n\nSample Input 15\n2 7 1 8\n1\n2\n\n\n\n\n\nSample Output 10\n\nThe game proceeds as follows, where S represents Snuke's piece, and R represents Rng's.\n\nBoth player scores 10, thus \"(Snuke's score) - (Rng's score)\" is 0.\n\n\n\n\n\nSample Input 29\n2 0 1 6 1 1 2 6\n5\n2016\n1\n1\n2\n6\n\n\n\n\n\nSample Output 22001\n6\n6\n7\n7"}
{"id": "p03917", "problem": "Score : 1900 points\n\n\nProblem StatementSnuke has a grid with H rows and W columns. The square at the i-th row and j-th column contains a character S_{i,j}.\nHe can perform the following two kinds of operation on the grid:\n\nRow-reverse: Reverse the order of the squares in a selected row.\nColumn-reverse: Reverse the order of the squares in a selected column.\n\nFor example, reversing the 2-nd row followed by reversing the 4-th column will result as follows:\n\nBy performing these operations any number of times in any order, how many placements of characters on the grid can be obtained?\n\n\n\n\nConstraints\n1\u2266H,W\u2266200\nS_{i,j} is a lowercase English letter (a-z).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\nS_{1,1}S_{1,2}...S_{1,W}\nS_{2,1}S_{2,2}...S_{2,W}\n:\nS_{H,1}S_{H,2}...S_{H,W}\n\n\n\n\n\nOutputPrint the number of placements of characters on the grid that can be obtained, modulo 1000000007 (=10^9+7).\n\n\n\n\n\n\nSample Input 12 2\ncf\ncf\n\n\n\n\n\nSample Output 16\n\nThe following 6 placements of characters can be obtained:\n\n\n\n\n\n\nSample Input 21 12\ncodefestival\n\n\n\n\n\nSample Output 22"}
{"id": "p03918", "problem": "Score : 2100 points\n\n\nProblem StatementSnuke has a board with an N \\times N grid, and N \\times N tiles.\nEach side of a square that is part of the perimeter of the grid is attached with a socket.\nThat is, each side of the grid is attached with N sockets, for the total of 4 \\times N sockets.\nThese sockets are labeled as follows:\n\nThe sockets on the top side of the grid: U1, U2, ..., UN from left to right\nThe sockets on the bottom side of the grid: D1, D2, ..., DN from left to right\nThe sockets on the left side of the grid: L1, L2, ..., LN from top to bottom\nThe sockets on the right side of the grid: R1, R2, ..., RN from top to bottom\n\n\n\nFigure: The labels of the sockets\n\nSnuke can insert a tile from each socket into the square on which the socket is attached.\nWhen the square is already occupied by a tile, the occupying tile will be pushed into the next square, and when the next square is also occupied by another tile, that another occupying tile will be pushed as well, and so forth.\nSnuke cannot insert a tile if it would result in a tile pushed out of the grid.\nThe behavior of tiles when a tile is inserted is demonstrated in detail at Sample Input/Output 1.\nSnuke is trying to insert the N \\times N tiles one by one from the sockets, to reach the state where every square contains a tile.\nHere, he must insert exactly U_i tiles from socket Ui, D_i tiles from socket Di, L_i tiles from socket Li and R_i tiles from socket Ri.\nDetermine whether it is possible to insert the tiles under the restriction. If it is possible, in what order the tiles should be inserted from the sockets?\n\n\n\n\nConstraints\n1\u2266N\u2266300\nU_i,D_i,L_i and R_i are non-negative integers.\nThe sum of all values U_i,D_i,L_i and R_i is equal to N \\times N.\n\n\n\n\n\nPartial Scores\n2000 points will be awarded for passing the test set satisfying N\u226640.\nAdditional 100 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nU_1 U_2 ... U_N\nD_1 D_2 ... D_N\nL_1 L_2 ... L_N\nR_1 R_2 ... R_N\n\n\n\n\n\nOutputIf it is possible to insert the tiles so that every square will contain a tile, print the labels of the sockets in the order the tiles should be inserted from them, one per line. If it is impossible, print NO instead. If there exists more than one solution, print any of those.\n\n\n\n\n\n\nSample Input 13\n0 0 1\n1 1 0\n3 0 1\n0 1 1\n\n\n\n\n\nSample Output 1L1\nL1\nL1\nL3\nD1\nR2\nU3\nR3\nD2\n\nSnuke can insert the tiles as shown in the figure below. An arrow indicates where a tile is inserted from, a circle represents a tile, and a number written in a circle indicates how many tiles are inserted before and including the tile.\n\n\n\n\n\n\nSample Input 22\n2 0\n2 0\n0 0\n0 0\n\n\n\n\n\nSample Output 2NO"}
{"id": "p03920", "problem": "Score : 300 points\n\n\nProblem StatementThe problem set at CODE FESTIVAL 20XX Finals consists of N problems.\nThe score allocated to the i-th (1\u2266i\u2266N) problem is i points.\nTakahashi, a contestant, is trying to score exactly N points. For that, he is deciding which problems to solve.\nAs problems with higher scores are harder, he wants to minimize the highest score of a problem among the ones solved by him.\nDetermine the set of problems that should be solved.\n\n\n\n\nConstraints\n1\u2266N\u226610^7\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 1\u2266N\u22661000.\nAdditional 100 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputAmong the sets of problems with the total score of N, find a set in which the highest score of a problem is minimum, then print the indices of the problems in the set in any order, one per line.\nIf there exists more than one such set, any of them will be accepted.\n\n\n\n\n\n\nSample Input 14\n\n\n\n\n\nSample Output 11\n3\n\nSolving only the 4-th problem will also result in the total score of 4 points, but solving the 1-st and 3-rd problems will lower the highest score of a solved problem.\n\n\n\n\n\nSample Input 27\n\n\n\n\n\nSample Output 21\n2\n4\n\nThe set \\{3,4\\} will also be accepted.\n\n\n\n\n\nSample Input 31\n\n\n\n\n\nSample Output 31"}
{"id": "p03921", "problem": "Score : 400 points\n\n\nProblem StatementOn a planet far, far away, M languages are spoken. They are conveniently numbered 1 through M.\nFor CODE FESTIVAL 20XX held on this planet, N participants gathered from all over the planet.\nThe i-th (1\u2266i\u2266N) participant can speak K_i languages numbered L_{i,1}, L_{i,2}, ..., L_{i,{}K_i}.\nTwo participants A and B can communicate with each other if and only if one of the following conditions is satisfied:\n\nThere exists a language that both A and B can speak.\nThere exists a participant X that both A and B can communicate with.\n\nDetermine whether all N participants can communicate with all other participants.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n1\u2266M\u226610^5\n1\u2266K_i\u2266M\n(The sum of all K_i)\u226610^5\n1\u2266L_{i,j}\u2266M\nL_{i,1}, L_{i,2}, ..., L_{i,{}K_i} are pairwise distinct.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying the following: N\u22661000, M\u22661000 and (The sum of all K_i)\u22661000.\nAdditional 200 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nK_1 L_{1,1} L_{1,2} ... L_{1,{}K_1}\nK_2 L_{2,1} L_{2,2} ... L_{2,{}K_2}\n:\nK_N L_{N,1} L_{N,2} ... L_{N,{}K_N}\n\n\n\n\n\nOutputIf all N participants can communicate with all other participants, print YES. Otherwise, print NO.\n\n\n\n\n\n\nSample Input 14 6\n3 1 2 3\n2 4 2\n2 4 6\n1 6\n\n\n\n\n\nSample Output 1YES\n\nAny two participants can communicate with each other, as follows:\n\nParticipants 1 and 2: both can speak language 2.\nParticipants 2 and 3: both can speak language 4.\nParticipants 1 and 3: both can communicate with participant 2.\nParticipants 3 and 4: both can speak language 6.\nParticipants 2 and 4: both can communicate with participant 3.\nParticipants 1 and 4: both can communicate with participant 2.\n\nNote that there can be languages spoken by no participant.\n\n\n\n\n\nSample Input 24 4\n2 1 2\n2 1 2\n1 3\n2 4 3\n\n\n\n\n\nSample Output 2NO\n\nFor example, participants 1 and 3 cannot communicate with each other."}
{"id": "p03922", "problem": "Score : 700 points\n\n\nProblem StatementTakahashi is playing with N cards.\nThe i-th card has an integer X_i on it.\nTakahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions:\n\nThe integers on the two cards are the same.\nThe sum of the integers on the two cards is a multiple of M.\n\nFind the maximum number of pairs that can be created.\nNote that a card cannot be used in more than one pair.\n\n\n\n\nConstraints\n2\u2266N\u226610^5\n1\u2266M\u226610^5\n1\u2266X_i\u226610^5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nX_1 X_2 ... X_N\n\n\n\n\n\nOutputPrint the maximum number of pairs that can be created.\n\n\n\n\n\n\nSample Input 17 5\n3 1 4 1 5 9 2\n\n\n\n\n\nSample Output 13\n\nThree pairs (3,2), (1,4) and (1,9) can be created.\nIt is possible to create pairs (3,2) and (1,1), but the number of pairs is not maximized with this.\n\n\n\n\n\nSample Input 215 10\n1 5 6 10 11 11 11 20 21 25 25 26 99 99 99\n\n\n\n\n\nSample Output 26"}
{"id": "p03923", "problem": "Score : 1000 points\n\n\nProblem StatementRng is baking cookies.\nInitially, he can bake one cookie per second.\nHe can also eat the cookies baked by himself.\nWhen there are x cookies not yet eaten, he can choose to eat all those cookies. After he finishes eating those cookies, the number of cookies he can bake per second becomes x. Note that a cookie always needs to be baked for 1 second, that is, he cannot bake a cookie in 1/x seconds when x > 1.\nWhen he choose to eat the cookies, he must eat all of them; he cannot choose to eat only part of them.\nIt takes him A seconds to eat the cookies regardless of how many, during which no cookies can be baked.\nHe wants to give N cookies to Grandma.\nFind the shortest time needed to produce at least N cookies not yet eaten.\n\n\n\n\nConstraints\n1\u2266N\u226610^{12}\n0\u2266A\u226610^{12}\nA is an integer.\n\n\n\n\n\nPartial Score\n500 points will be awarded for passing the test set satisfying N\u226610^6 and A\u226610^6.\nAdditional 500 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A\n\n\n\n\n\nOutputPrint the shortest time needed to produce at least N cookies not yet eaten.\n\n\n\n\n\n\nSample Input 18 1\n\n\n\n\n\nSample Output 17\n\nIt is possible to produce 8 cookies in 7 seconds, as follows:\n\nAfter 1 second: 1 cookie is done.\nAfter 2 seconds: 1 more cookie is done, totaling 2. Now, Rng starts eating those 2 cookies.\nAfter 3 seconds: He finishes eating the cookies, and he can now bake 2 cookies per second.\nAfter 4 seconds: 2 cookies are done.\nAfter 5 seconds: 2 more cookies are done, totaling 4.\nAfter 6 seconds: 2 more cookies are done, totaling 6.\nAfter 7 seconds: 2 more cookies are done, totaling 8.\n\n\n\n\n\n\nSample Input 21000000000000 1000000000000\n\n\n\n\n\nSample Output 21000000000000"}
{"id": "p03924", "problem": "Score : 1000 points\n\n\nProblem StatementThere are N towns in Takahashi Kingdom. They are conveniently numbered 1 through N.\nTakahashi the king is planning to go on a tour of inspection for M days. He will determine a sequence of towns c, and visit town c_i on the i-th day. That is, on the i-th day, he will travel from his current location to town c_i. If he is already at town c_i, he will stay at that town. His location just before the beginning of the tour is town 1, the capital. The tour ends at town c_M, without getting back to the capital. \nThe problem is that there is no paved road in this kingdom. He decided to resolve this issue by paving the road himself while traveling. When he travels from town a to town b, there will be a newly paved one-way road from town a to town b.\nSince he cares for his people, he wants the following condition to be satisfied after his tour is over: \"it is possible to travel from any town to any other town by traversing roads paved by him\". How many sequences of towns c satisfy this condition?\n\n\n\n\nConstraints\n2\u2266N\u2266300\n1\u2266M\u2266300\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\n\n\n\n\n\nOutputPrint the number of sequences of towns satisfying the condition, modulo 1000000007 (=10^9+7).\n\n\n\n\n\n\nSample Input 13 3\n\n\n\n\n\nSample Output 12\n\nAs shown below, the condition is satisfied only when c = (2,3,1) or c = (3,2,1). Sequences such as c = (2,3,2), c = (2,1,3), c = (1,2,2) do not satisfy the condition.\n\n\n\n\n\n\nSample Input 2150 300\n\n\n\n\n\nSample Output 2734286322\n\n\n\n\n\n\nSample Input 3300 150\n\n\n\n\n\nSample Output 30"}
{"id": "p03925", "problem": "Score : 1300 points\n\n\nProblem StatementWe have a graph with N vertices, numbered 0 through N-1. Edges are yet to be added.\nWe will process Q queries to add edges.\nIn the i-th (1\u2266i\u2266Q) query, three integers A_i, B_i and C_i will be given, and we will add infinitely many edges to the graph as follows:\n\nThe two vertices numbered A_i and B_i will be connected by an edge with a weight of C_i.\nThe two vertices numbered B_i and A_i+1 will be connected by an edge with a weight of C_i+1.\nThe two vertices numbered A_i+1 and B_i+1 will be connected by an edge with a weight of C_i+2.\nThe two vertices numbered B_i+1 and A_i+2 will be connected by an edge with a weight of C_i+3.\nThe two vertices numbered A_i+2 and B_i+2 will be connected by an edge with a weight of C_i+4.\nThe two vertices numbered B_i+2 and A_i+3 will be connected by an edge with a weight of C_i+5.\nThe two vertices numbered A_i+3 and B_i+3 will be connected by an edge with a weight of C_i+6.\n...\n\nHere, consider the indices of the vertices modulo N.\nFor example, the vertice numbered N is the one numbered 0, and the vertice numbered 2N-1 is the one numbered N-1.\nThe figure below shows the first seven edges added when N=16, A_i=7, B_i=14, C_i=1:\n\nAfter processing all the queries, find the total weight of the edges contained in a minimum spanning tree of the graph.\n\n\n\n\nConstraints\n2\u2266N\u2266200,000\n1\u2266Q\u2266200,000\n0\u2266A_i,B_i\u2266N-1\n1\u2266C_i\u226610^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN Q\nA_1 B_1 C_1\nA_2 B_2 C_2\n:\nA_Q B_Q C_Q\n\n\n\n\n\nOutputPrint the total weight of the edges contained in a minimum spanning tree of the graph.\n\n\n\n\n\n\nSample Input 17 1\n5 2 1\n\n\n\n\n\nSample Output 121\n\nThe figure below shows the minimum spanning tree of the graph:\n\nNote that there can be multiple edges connecting the same pair of vertices.\n\n\n\n\n\nSample Input 22 1\n0 0 1000000000\n\n\n\n\n\nSample Output 21000000001\n\nAlso note that there can be self-loops.\n\n\n\n\n\nSample Input 35 3\n0 1 10\n0 2 10\n0 4 10\n\n\n\n\n\nSample Output 342"}
{"id": "p03926", "problem": "Score : 1600 points\n\n\nProblem StatementThere are N squares in a row, numbered 1 through N from left to right.\nSnuke and Rng are playing a board game using these squares, described below:\n\nFirst, Snuke writes an integer into each square.\nEach of the two players possesses one piece. Snuke places his piece onto square 1, and Rng places his onto square 2.\nThe player whose piece is to the left of the opponent's, moves his piece. The destination must be a square to the right of the square where the piece is currently placed, and must not be a square where the opponent's piece is placed.\nRepeat step 3. When the pieces cannot be moved any more, the game ends.\nThe score of each player is calculated as the sum of the integers written in the squares where the player has placed his piece before the end of the game.\n\nSnuke has already written an integer A_i into square i (1\u2266i\u2266N-1), but not into square N yet.\nHe has decided to calculate for each of M integers X_1,X_2,...,X_M, if he writes it into square N and the game is played, what the value \"(Snuke's score) - (Rng's score)\" will be.\nHere, it is assumed that each player moves his piece to maximize the value \"(the player's score) - (the opponent's score)\".\n\n\n\n\nConstraints\n3\u2266N\u2266200,000\n0\u2266A_i\u226610^6\nThe sum of all A_i is at most 10^6.\n1\u2266M\u2266200,000\n0\u2266X_i\u226610^9\n\n\n\n\n\nPartial Scores\n700 points will be awarded for passing the test set satisfying M=1.\nAdditional 900 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_{N-1}\nM\nX_1\nX_2\n:\nX_M\n\n\n\n\n\nOutputFor each of the M integers X_1, ..., X_M, print the value \"(Snuke's score) - (Rng's score)\" if it is written into square N, one per line.\n\n\n\n\n\n\nSample Input 15\n2 7 1 8\n1\n2\n\n\n\n\n\nSample Output 10\n\nThe game proceeds as follows, where S represents Snuke's piece, and R represents Rng's.\n\nBoth player scores 10, thus \"(Snuke's score) - (Rng's score)\" is 0.\n\n\n\n\n\nSample Input 29\n2 0 1 6 1 1 2 6\n5\n2016\n1\n1\n2\n6\n\n\n\n\n\nSample Output 22001\n6\n6\n7\n7"}
{"id": "p03927", "problem": "Score : 1900 points\n\n\nProblem StatementSnuke has a grid with H rows and W columns. The square at the i-th row and j-th column contains a character S_{i,j}.\nHe can perform the following two kinds of operation on the grid:\n\nRow-reverse: Reverse the order of the squares in a selected row.\nColumn-reverse: Reverse the order of the squares in a selected column.\n\nFor example, reversing the 2-nd row followed by reversing the 4-th column will result as follows:\n\nBy performing these operations any number of times in any order, how many placements of characters on the grid can be obtained?\n\n\n\n\nConstraints\n1\u2266H,W\u2266200\nS_{i,j} is a lowercase English letter (a-z).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\nS_{1,1}S_{1,2}...S_{1,W}\nS_{2,1}S_{2,2}...S_{2,W}\n:\nS_{H,1}S_{H,2}...S_{H,W}\n\n\n\n\n\nOutputPrint the number of placements of characters on the grid that can be obtained, modulo 1000000007 (=10^9+7).\n\n\n\n\n\n\nSample Input 12 2\ncf\ncf\n\n\n\n\n\nSample Output 16\n\nThe following 6 placements of characters can be obtained:\n\n\n\n\n\n\nSample Input 21 12\ncodefestival\n\n\n\n\n\nSample Output 22"}
{"id": "p03928", "problem": "Score : 2100 points\n\n\nProblem StatementSnuke has a board with an N \\times N grid, and N \\times N tiles.\nEach side of a square that is part of the perimeter of the grid is attached with a socket.\nThat is, each side of the grid is attached with N sockets, for the total of 4 \\times N sockets.\nThese sockets are labeled as follows:\n\nThe sockets on the top side of the grid: U1, U2, ..., UN from left to right\nThe sockets on the bottom side of the grid: D1, D2, ..., DN from left to right\nThe sockets on the left side of the grid: L1, L2, ..., LN from top to bottom\nThe sockets on the right side of the grid: R1, R2, ..., RN from top to bottom\n\n\n\nFigure: The labels of the sockets\n\nSnuke can insert a tile from each socket into the square on which the socket is attached.\nWhen the square is already occupied by a tile, the occupying tile will be pushed into the next square, and when the next square is also occupied by another tile, that another occupying tile will be pushed as well, and so forth.\nSnuke cannot insert a tile if it would result in a tile pushed out of the grid.\nThe behavior of tiles when a tile is inserted is demonstrated in detail at Sample Input/Output 1.\nSnuke is trying to insert the N \\times N tiles one by one from the sockets, to reach the state where every square contains a tile.\nHere, he must insert exactly U_i tiles from socket Ui, D_i tiles from socket Di, L_i tiles from socket Li and R_i tiles from socket Ri.\nDetermine whether it is possible to insert the tiles under the restriction. If it is possible, in what order the tiles should be inserted from the sockets?\n\n\n\n\nConstraints\n1\u2266N\u2266300\nU_i,D_i,L_i and R_i are non-negative integers.\nThe sum of all values U_i,D_i,L_i and R_i is equal to N \\times N.\n\n\n\n\n\nPartial Scores\n2000 points will be awarded for passing the test set satisfying N\u226640.\nAdditional 100 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nU_1 U_2 ... U_N\nD_1 D_2 ... D_N\nL_1 L_2 ... L_N\nR_1 R_2 ... R_N\n\n\n\n\n\nOutputIf it is possible to insert the tiles so that every square will contain a tile, print the labels of the sockets in the order the tiles should be inserted from them, one per line. If it is impossible, print NO instead. If there exists more than one solution, print any of those.\n\n\n\n\n\n\nSample Input 13\n0 0 1\n1 1 0\n3 0 1\n0 1 1\n\n\n\n\n\nSample Output 1L1\nL1\nL1\nL3\nD1\nR2\nU3\nR3\nD2\n\nSnuke can insert the tiles as shown in the figure below. An arrow indicates where a tile is inserted from, a circle represents a tile, and a number written in a circle indicates how many tiles are inserted before and including the tile.\n\n\n\n\n\n\nSample Input 22\n2 0\n2 0\n0 0\n0 0\n\n\n\n\n\nSample Output 2NO"}
{"id": "p03929", "problem": "Max Score: $250$ Points \n\nProblem Statement\n\t\t\t\t\tSnuke has a very long calendar. It has a grid with $n$ rows and $7$ columns. One day, he noticed that calendar has a following regularity. \n\nThe cell at the $i$-th row and $j$-th column contains the integer $7i+j-7$.\n\n\t\t\t\t\tA good sub-grid is a $3 \\times 3$ sub-grid and the sum of integers in this sub-grid mod $11$ is $k$. \n\t\t\t\t\tHow many good sub-grid are there? Write a program and help him. \n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format. \n\n$n \\quad k$\n\n\n\n\n\nOutput\n\nPrint the number of good sub-grid. If there are no solution exists, print 0.\n\n\n\nConstraints\n\n$1 \\le n \\le 10^9$\n$0 \\le k \\le 10$\n\n\n\nSubtasks\nSubtask 1 [ $150$ points ]\n\nThe testcase in the subtask satisfies $1 \\le n \\le 100$.\n\n\nSubtask 2 [ $100$ points ]\n\nThere are no additional constraints.\n\n\n\n\n\n\n\nSample Input 1\n\n7 7\n\n\n\n\n\nSample Output 1\n\n2\n\n\n\n\n\n\t\t\t\t\tIn this case, the calendar likes this matrix.\n\n\n\nSun.\nMon.\nTue.\nWed.\nThu.\nFri.\nSat.\n\n\nWeek 1\n1\n2\n3\n4\n5\n6\n7\n\n\nWeek 2\n8\n9\n10\n11\n12\n13\n14\n\n\nWeek 3\n15\n16\n17\n18\n19\n20\n21\n\n\nWeek 4\n22\n23\n24\n25\n26\n27\n28\n\n\nWeek 5\n29\n30\n31\n32\n33\n34\n35\n\n\nWeek 6\n36\n37\n38\n39\n40\n41\n42\n\n\nWeek 7\n43\n44\n45\n46\n47\n48\n49\n\n\n\n\t\t\t\t\tThe cell at $i$-th row and $j$-th column is denoted $(i, j)$. \n\nIf upper-left is $(1, 5)$, the sum of integers is $5+6+7+12+13+14+19+20+21=117$.\nIf upper-left is $(3, 2)$, the sum of integers is $16+17+18+23+24+25+30+31+32=216$.\n\n\t\t\t\t\tTherefore, there are 2 good sub-grids.\n\n\n\n\nSample Input 2\n\n6 0\n\n\n\n\n\nSample Output 2\n\n2\n\n\t\t\t\t\tIf upper-left is $(1, 3)$ or $(4, 4)$, it is a good sub-grid.\n\n\n\n\n\n\nSample Input 3\n\n18 10"}
{"id": "p03930", "problem": "Max Score: $300$ Points \n\nProblem Statement\n\t\t\t\t\t\tWe are playing a puzzle. An upright board with $H$ rows by $W$ columns of cells, is used in this puzzle. \n\t\t\t\t\t\tA stone in $i$-th row and $j$-th column engraved with a digit, one of 1 through 9, is placed in each of the cells. \n\t\t\t\t\t\tYou can erase 1 cell in the board. \n\n\t\t\t\t\t\tThe game process is following: \n\nWhen $K$ or more stones in horizontally adjacent cells are engraved with the same digit, the stones will disappear. Disappearances of all such groups of stones take place simultaneously.\nWhen stones are in the cells above the emptied cells, these stones drop down so that the emptied cells are filled.\nAfter the completion of all stone drops, if one or more groups of stones satisfy the disappearance condition, repeat by returning to the step 1.\nScore is $\\sum_i 2^i \\times \\left(\\text{Sum of numbers in the stones which disappeared in the $i$-th chain (0-indexed)}\\right)$.\n\n\t\t\t\t\t\tPlease answer the points if he erased the optimal place.\n\n\n\n\n\n\nInput\n\t\t\t\t\t\t\tThe input is given from standard input in the following format."}
{"id": "p03931", "problem": "Max Score: $400$ Points\n\t\t\t\t\t\nProblem Statement\nSample testcase 3 has a mistake, so we erased this case and rejudged all solutions of this problem. (21:01)\n\t\t\t\t\t\tSnuke got a sequence $a$ of length $n$ from AtCoder company. All elements in $a$ are distinct.\n\t\t\t\t\t\tHe made a sequence $b$, but actually, he is not remembered it. \n\t\t\t\t\t\tHowever, he is remembered a few things about sequence $b$. \n\nAll elements in $b$ are distinct. \nAll elements in $b$ is in $a$.\n$b_1 \\oplus b_2 \\oplus \\cdots \\oplus b_r = k$. ($r$ is length of sequence $b$) [$\\oplus$ means XOR]\n\n\n\t\t\t\t\t\tFor example, if $a = { 1, 2, 3 }$ and $k = 1$, he can make $b = { 1 }, { 2, 3 }, { 3, 2 }$. \n\t\t\t\t\t\tHe wants to restore sequence $b$, but he says that there are too many ways and he can't restore it.\n\t\t\t\t\t\tPlease calculate the ways to make $b$ and help him. \n\t\t\t\t\t\tSince the answer can be large, print the answer modulo $1,000,000,007$. \n\n\n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from Standard Input in the following format:\n$n \\ k$\n$a_1 \\ a_2 \\ \\cdots \\ a_n$\n\n\n\n\n\nOutput\n\nPrint the number of ways to make sequence $b$. \nPrint the answer modulo $1,000,000,007$. \n\n\n\nConstraints\n\n$1 \\le n \\le 100$\n$1 \\le a_i, k \\le 255$\n$i \\neq j \\Rightarrow a_i \\neq a_j$\n\n\n\nSubtasks\n\t\t\t\t\t\tSubtask 1 [ $50$ points ] \n\n$1 \\le n \\le 4$\n\n\t\t\t\t\t\tSubtask 2 [ $170$ points ] \n\n$1 \\le n \\le 20$\n\n\t\t\t\t\t\tSubtask 3 [ $180$ points ] \n\nThere are no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n3 1\n1 2 3\n\n\n\n\n\nSample Output 1\n\n3\n\n\t\t\t\t\tYou can make 3 patterns: $b = \\{ 1 \\}, \\{ 2, 3 \\}, \\{ 3, 2 \\}$\n\n\n\n\nSample Input 2\n\n3 10\n8 7 5\n\n\n\n\n\nSample Output 2\n\n6\n\n\t\t\t\t\tYou can make 6 patterns: $b = \\{ 5, 7, 8 \\}, \\{ 5, 8, 7 \\}, \\{ 7, 5, 8 \\}, \\{ 7, 8, 5 \\}, \\{ 8, 5, 7 \\}, \\{ 8, 7, 5 \\}$.\n\n\n\n\nSample Input 4\n\n25 127\n5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 105 110 115 120 125\n\n\n\n\n\nSample Output 4\n\n235924722\n\nPlease output answer mod $1,000,000,007$.\n\n\n\t\t\t\twriter: E869120"}
{"id": "p03932", "problem": "Max Score: $600$ Points \n\nProblem Statement\n\t\t\t\t\tSigma and his brother Sugim are in the $H \\times W$ grid. They wants to buy some souvenirs. \n\t\t\t\t\tTheir start position is upper-left cell, and the goal position is lower-right cell. \n\t\t\t\t\tSome cells has a souvenir shop. At $i$-th row and $j$-th column, there is $a_{i, j}$ souvenirs. \n\t\t\t\t\tIn one move, they can go left, right, down, and up cell. \n\t\t\t\t\tBut they have little time, so they can move only $H+W-2$ times. \n\t\t\t\t\tThey wanted to buy souvenirs as many as possible, but they had no computer, so they couldn't get the maximal numbers of souvenirs. \n\t\t\t\t\tWrite a program and calculate the maximum souvenirs they can get, and help them. \n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format. \n$H \\ W$\n$a_{1, 1} \\ a_{1, 2} \\ \\cdots \\ a_{1, W}$\n$a_{2, 1} \\ a_{2, 2} \\ \\cdots \\ a_{2, W}$\n$\\vdots \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\vdots \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\vdots$\n$a_{H, 1} \\ a_{H, 2} \\ \\cdots \\ a_{H, W}$\n\n\n\n\n\nOutput\n\nPrint the maximum number of souvenirs they can get.\n\n\n\nConstraints\n\n$1 \\le H, W \\le 200$\n$0 \\le a_{i, j} \\le 10^5$\n\n\n\nSubtasks\n\t\t\t\t\t\tSubtask 1 [ 50 points ] \n\nThe testcase in the subtask satisfies $1 \\le H \\le 2$.\n\n\t\t\t\t\t\tSubtask 2 [ 80 points ] \n\nThe testcase in the subtask satisfies $1 \\le H \\le 3$.\n\n\t\t\t\t\t\tSubtask 3 [ 120 points ] \n\nThe testcase in the subtask satisfies $1 \\le H, W \\le 7$.\n\n\t\t\t\t\t\tSubtask 4 [ 150 points ] \n\nThe testcase in the subtask satisfies $1 \\le H, W \\le 30$.\n\n\t\t\t\t\t\tSubtask 5 [ 200 points ] \n\nThere are no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n3 3\n1 0 5\n2 2 3\n4 2 4\n\n\n\n\n\nSample Output 1\n\n21\n\n\t\t\t\t\tThe cell at $i$-th row and $j$-th column is denoted $(i, j)$. \n\t\t\t\t\tIn this case, one of the optimal solution is this:\n\nSigma moves $(1, 1) -> (1, 2) -> (1, 3) -> (2, 3) -> (3, 3)$.\nSugim moves $(1, 1) -> (2, 1) -> (3, 1) -> (3, 2) -> (3, 3)$.\n\n\t\t\t\t\tThen, they can get $21$ souvernirs. \n\n\n\n\nSample Input 2\n\n6 6\n1 2 3 4 5 6\n8 6 9 1 2 0\n3 1 4 1 5 9\n2 6 5 3 5 8\n1 4 1 4 2 1\n2 7 1 8 2 8\n\n\n\n\n\nSample Output 2\n\n97\n\n\n\n\n\t\t\tWriter : square1001"}
{"id": "p03933", "problem": "Max Score: $850$ Points \n\nProblem statement\n\t\t\t\t\t\tThere is a circle which radius is 1. \n\t\t\t\t\t\tThere are $N$ vertices on the circle's circumference. \n\t\t\t\t\t\tThe vertices divides into $N$ equal parts over the circumference. \n\n\n\n\n\t\t\t\t\t\tYou can choose $3$ distinct vertices, and you can make a triangle. \n\t\t\t\t\t\tThere are $\\frac{N(N - 1)(N - 2)}{6}$ ways choosing vertices.\n\t\t\t\t\t\tThe question is: Calculate the area of $K$-th smallest triangle in $\\frac{N(N-1)(N-2)}{6}$ triangles. \n\t\t\t\t\t\tIf the area is same, you can order in any order. \n\n\t\t\t\t\t\tIf $N = 4, K = 3$, the result is following:\n\nIf you select vertices $1$, $2$, and $3$, the area of triangle $= 1$.\nIf you select vertices $1$, $2$, and $4$, the area of triangle $= 1$.\nIf you select vertices $1$, $3$, and $4$, the area of triangle $= 1$.\nIf you select vertices $2$, $3$, and $4$, the area of triangle $= 1$.\n\n\t\t\t\t\t\tAs a result, the 3rd smallest triangle's area $= 1$.\n\n\n\n\n\n\nInput\n\t\t\t\t\t\t\tThe input is given from Standard Input in the following format: \n$N \\ K$\n\n\n\n\n\nOutput\n\nPlease output the $K$-th triangle area.\nPrint a floating number denoting the answer. The relative or absolute error of your answer should not be higher than $10^{\u22129}$.\n\n\n\nConstraints\n\n$3 \\le N \\le 200,000$\n$1 \\le K \\le \\frac{N(N-1)(N-2)}{6}$\n\n\n\nSubtasks\n\t\t\t\t\t\t\tSubtask 1 [ $160$ points ] \n\n$N \\le 100$\n\n\t\t\t\t\t\t\tSubtask 2 [ $240$ points ] \n\n$N \\le 1000$\n\n\t\t\t\t\t\t\tSubtask 3 [ $450$ points ] \n\n$N \\le 200,000$\n\n\n\n\n\n\nSample Input 1\n\n4 3\n\n\n\n\n\nSample Output 1\n\n1.0000000000000\n\n\t\t\t\t\t\tThis example is already explained in the problem statement. \n\n\n\n\nSample Input 2\n\n6 9\n\n\n\n\n\nSample Output 2\n\n0.86602540378\n\n\t\t\t\t\t\tThere are $6$ ways to choose a triangle which area is $\\frac{\\sqrt{3}}{4}$. \n\t\t\t\t\t\tThere are $10$ ways to choose a triangle which area is $\\frac{\\sqrt{3}}{2}$. \n\t\t\t\t\t\tThere are $2$ ways to choose a triangle which area is $\\frac{3 \\sqrt{3}}{4}$. \n\t\t\t\t\t\tTherefore, the 9th smallest triangle's area is $\\frac{\\sqrt{3}}{2}$. \n\n\n\n\nSample Input 3\n\n12 220\n\n\n\n\n\nSample Output 3\n\n1.29903810568\n\n\n\n\t\t\t\tWriter: E869120"}
{"id": "p03934", "problem": "Max Score: $1200$ Points \n\nProblem statement\n\t\t\t\t\t\tThere are $N$ customers in a restaurant. Each customer is numbered $1$ through $N$. \n\t\t\t\t\t\tA sushi chef carried out $Q$ operations for customers. \n\n\t\t\t\t\t\tThe $i$-th operation is follows: \n\nThe sushi chef chooses a customer whose number of dishes of sushi eaten is minimum, in customer $1, 2, 3, \\dots, a_i$. If there are multiple customers who are minimum numbers of dishes, he selects the minimum-numbered customers. \nHe puts a dish of sushi on the selected seats.\nA customer who have selected for professional eats this sushi.\nRepeat 1-3, $b_i$ times.\n\n\n\t\t\t\t\t\tPlease calculate the number of dishes of sushi that have been eaten by each customer.\n\n\n\n\n\n\nInput\n\t\t\t\t\t\t\tThe input is given from Standard Input in the following format: \n$N \\ Q$\n$a_1 \\ b_1$\n$a_2 \\ b_2$\n$ \uff1a  \\ \uff1a $\n$a_Q \\ b_Q$\n\n\n\n\n\nOutput\n\nYou have to print $N$ lines.\nThe $i$-th line should contain the number of dishes of sushi had eaten for customer $i (1 \\le i \\le N)$.\n\n\n\nConstraints\n\n$3 \\le N, Q \\le 100,000$\n$1 \\le a_i \\le N$\n$1 \\le b_i \\le 10^{12}$\nAny final results do not exceed $2 \\times 10^{13}$.\n\n\n\nSubtasks\n\t\t\t\t\t\t\tSubtask 1 [ $60$ points ] \n\n$N, Q \\le 100$\n$b_i = 1$\n\n\t\t\t\t\t\t\tSubtask 2 [ $400$ points ] \n\n$N, Q \\le 100$\n$b_i \\le 10^{12}$\n\n\t\t\t\t\t\t\tSubtask 3 [ $240$ points ] \n\n$N, Q \\le 100,000$\n$b_i = 1$\n\n\t\t\t\t\t\t\tSubtask 4 [ $500$ points ] \n\nThere are no additional constraints.\n\n\n\n\n\n\nSample Input 1\n\n9 3\n5 11\n8 4\n4 7\n\n\n\n\n\nSample Output 1\n\n4\n4\n4\n4\n2\n2\n1\n1\n0\n\n\t\t\t\t\t\tThe change of the number of dishes of sushi have eaten is following: \n\n\n\n\nCustomer 1\nCustomer 2\nCustomer 3\nCustomer 4\nCustomer 5\nCustomer 6\nCustomer 7\nCustomer 8\nCustomer 9\n\n\n1st Operation\n3 2 2 2 2 0 0 0 0\n\n\n2nd Operation\n3 2 2 2 2 2 1 1 0\n\n\n3rd Operation\n4 4 4 4 2 2 1 1 0\n\n\n\n\n\n\n\nSample Input 2\n\n6 6\n3 5\n6 11\n1 6\n4 7\n5 2\n2 5\n\n\n\n\n\nSample Output 2\n\n10\n10\n5\n5\n4\n2\n\n\n\n\n\nSample Input 3\n\n5 6\n1 1\n2 1\n3 1\n1 1\n5 1\n3 1\n\n\n\n\n\nSample Output 3\n\n2\n2\n1\n1\n0\n\n\n\n\n\nSample Input 4\n\n10 10\n10 10\n9 20\n8 30\n7 40\n6 50\n5 60\n4 70\n3 80\n2 90\n1 100\n\n\n\n\n\nSample Output 4\n\n223\n123\n77\n50\n33\n21\n12\n7\n3\n1\n\n\n\n\t\t\t\tWriter: E869120"}
{"id": "p03935", "problem": "Max Score: $1400$ Points \n\nProblem Statement\n\t\t\t\t\tE869120 defined a sequence $a$ like this: \n\n$a_1=a_2=1$, $a_{k+2}=a_{k+1}+a_k \\ (k \\ge 1)$\n\n\n\t\t\t\t\tHe also defined sequences $d_1, d_2, d_3, \\dots , d_n$, as the following recurrence relation : \n\n$d_{1, j} = a_j$\n$d_{i, j} = \\sum_{k = 1}^j d_{i - 1, k} \\ (i \\ge 2)$\n\n\n\t\t\t\t\tYou are given integers $n$ and $m$. Please calculate the value of $d_{n, m}$. \n\t\t\t\t\tSince the answer can be large number, print the answer modulo $998,244,353$. \n\t\t\t\t\tCan you solve this problem??? \n\n\n\n\n\n\nInput\n\t\t\t\t\t\tThe input is given from standard input in the following format. \n\n$n \\quad m$\n\n\n\n\n\nOutput\n\nPrint $d_{n, m}$ modulo $998,244,353$.\n\n\n\nConstraints\n\n$1 \\le n \\le 200,000$\n$1 \\le m \\le 10^{18}$\n\n\n\nSubtasks\n\t\t\t\t\t\tSubtask 1 [ $100$ points ] \n\nThe testcase in this subtask satisfies $1 \\le n, m \\le 3,000$.\n\n\t\t\t\t\t\tSubtask 2 [ $170$ points ] \n\nThe testcase in this subtask satisfies $1 \\le m \\le 200,000$.\n\n\t\t\t\t\t\tSubtask 3 [ $230$ points ] \n\nThe testcase in this subtask satisfies $1 \\le n \\le 3$.\n\n\t\t\t\t\t\tSubtask 4 [ $420$ points ] \n\nThe testcase in this subtask satisfies $1 \\le n \\le 1000$.\n\n\t\t\t\t\t\tSubtask 5 [ $480$ points ] \n\nThere are no additional constraints.\n\n\n\n\n\n\n\nSample Input 1\n\n4 7\n\n\n\n\n\nSample Output 1\n\n176\n\n\t\t\t\t\tThe sequence is following:\n\n\n\n$d_{i, 1}$\n$d_{i, 2}$\n$d_{i, 3}$\n$d_{i, 4}$\n$d_{i, 5}$\n$d_{i, 6}$\n$d_{i, 7}$\n\n\n$d_1$\n1\n1\n2\n3\n5\n8\n13\n\n\n$d_2$\n1\n2\n4\n7\n12\n20\n33\n\n\n$d_3$\n1\n3\n7\n14\n26\n46\n79\n\n\n$d_4$\n1\n4\n11\n25\n51\n97\n176\n\n\n\n\t\t\t\t\tAs a result, the answer is $d_{4, 7} = 176$. \n\n\n\n\n\nSample Input 2\n\n12 20\n\n\n\n\n\nSample Output 2\n\n174174144\n\n\n\t\t\t\tInteresting number. It only contains $1$, $4$ and $7$. \n\n\n\n\nSample Input 3\n\n16 30\n\n\n\n\n\nSample Output 3\n\n102292850\n\n\t\t\t\t\tYou can calculate that $d_{16, 30} = 1,193,004,294,685$.\n\t\t\t\t\tPlease don't forget printing the answer mod $998,244,353$.\n\t\t\t\t\n\n\n\n\t\t\t\t\tWriter\uff1asquare1001"}
{"id": "p03936", "problem": "Max Score: $1500$ Points \n\nProblem Statement\n\t\t\t\t\t\tThere is a $50 \\times 50$ field. The cell at $i$-th row and $j$-th column is denoted $(i, j)$ (0-indexed). \n\t\t\t\t\t\tOne day, square1001 puts $250$ bombs in this field. In each cell, there is 1 or 0 bomb. \n\t\t\t\t\t\tYou want to know where the bombs are by asking some questions. \n\n\n\n\n\t\t\t\t\t\tYou can ask this question many times. \n\nYou can ask the number of bombs in the rectangular area in which upper-left cell is $(a, b)$ and lower-right cell is $(c, d)$.\n\n\n\t\t\t\t\t\tPlease find all bombs' positions asking as few questions as possible. \n\n\t\t\t\t\t\tNote: This problem Input/Output type is special. Please read Input/Output. If you want to use scanf/printf, you have to write fflush(stdout).\n\n\n\n\n\n\nInput and output\n\t\t\t\t\t\t\tThe first line input is following this format:\n$H \\ W \\ N \\ K$\n\n\n$H, W$ is field size. In this problem, $H = 50$ and $W = 50$.\n$N$ is the number of bombs in the field. In this problem, $N = 250$.\n$K$ is modulo. This integer uses to answer the state of the field.\n\n\n\t\t\t\t\t\t\tAfter this input, You can ask some questions, following this output format: \n$? \\ a \\ b \\ c \\ d$\n\n\t\t\t\t\t\t\tIt means that you want to ask the number of bombs in the rectangular area which upper-left cell is $(a, b)$ and lower-right cell is $(c, d)$.\n\n\t\t\t\t\t\t\tYou can know the value of the question, from input in this format:\n$p$\n\n\t\t\t\t\t\t\t$p$ is the result of your question. \n\n\t\t\t\t\t\t\tFinally, you have to output the answer following this format:\n$! \\ ans$\n\n\t\t\t\t\t\t\tThe value of $ans$ is $\\sum_{i=0}^{H-1} \\sum_{j=0}^{W-1} r_{i, j} 2^{iW + j}$ mod $K$.\n\t\t\t\t\t\t\tNote: $r_{i, j}$ is the number of bombs in cell $(i, j)$.\n\n\n\n\nConstraints\n\n$H, W = 50$\n$N = 250$\n$1,000,000,000 \\le K \\le 1,000,010,000$ ($K$ is random)\n\n\n\nScore\n\t\t\t\t\t\t\tThere are 5 testcases in the judge. \n\t\t\t\t\t\t\tThe $score$ in each testcase is defined by following formula: \n\n$Q$ is the number of questions.\nIf $Q > 2500$, $score = 0$ (Wrong Answer).\nIf $930 \\le Q \\le 2500$, $score = max(\\lfloor 125 - 3.2\\sqrt{Q - 920} \\rfloor, 40)$.\nIf $880 \\le Q < 930$, $score = \\lfloor 288 - 22\\sqrt{Q - 870} \\rfloor$.\nIf $Q < 880$, $score = min(2860 - 3Q, 300)$.\n\n\n\n\n\n\nSample Input\u30fbOutput\n\t\t\t\t\t\tIn the case of the following arrangement, this input / output is conceivable.\n\t\t\t\t\t\tThis case is $H,W=4$, so this example is not include in testcases.\n\nH=4, W=4, N=4\n1001\n0000\n0010\n0100\n\n\t\t\t\t\t\tExample of Input\u30fbOutput\n\n\nInput from program\nOutput\n\n\n4 4 4 1000000007\n \n\n\n \n? 0 0 0 1\n\n\n1\n \n\n\n \n? 0 1 0 2\n\n\n0\n \n\n\n \n? 0 3 1 3\n\n\n1\n \n\n\n \n? 2 1 3 2\n\n\n2\n \n\n\n \n? 2 2 2 2\n\n\n1\n \n\n\n \n! 9225\n\n\n\t\t\t\t\t\tThese question is not always meaningful. \n\n\n\t\t\t\tWriter: E869120"}
{"id": "p03937", "problem": "Score : 200 points\n\n\nProblem Statement\nWe have a grid of H rows and W columns. Initially, there is a stone in the top left cell. Shik is trying to move the stone to the bottom right cell. In each step, he can move the stone one cell to its left, up, right, or down (if such cell exists). It is possible that the stone visits a cell multiple times (including the bottom right and the top left cell).\nYou are given a matrix of characters a_{ij} (1 \\leq i \\leq H, 1 \\leq j \\leq W). After Shik completes all moving actions, a_{ij} is # if the stone had ever located at the i-th row and the j-th column during the process of moving. Otherwise, a_{ij} is .. Please determine whether it is possible that Shik only uses right and down moves in all steps.\n\n\n\n\nConstraints\n2 \\leq H, W \\leq 8\na_{i,j} is either # or ..\nThere exists a valid sequence of moves for Shik to generate the map a.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\na_{11}a_{12}...a_{1W}\n:\na_{H1}a_{H2}...a_{HW}\n\n\n\n\n\nOutputIf it is possible that Shik only uses right and down moves, print Possible. Otherwise, print Impossible.\n\n\n\n\n\n\nSample Input 14 5\n##...\n.##..\n..##.\n...##\n\n\n\n\n\nSample Output 1Possible\n\nThe matrix can be generated by a 7-move sequence: right, down, right, down, right, down, and right.\n\n\n\n\n\nSample Input 25 3\n###\n..#\n###\n#..\n###\n\n\n\n\n\nSample Output 2Impossible\n\n\n\n\n\n\nSample Input 34 5\n##...\n.###.\n.###.\n...##\n\n\n\n\n\nSample Output 3Impossible"}
{"id": "p03938", "problem": "Score : 400 points\n\n\nProblem Statement\nYou are given a permutation p of the set {1, 2, ..., N}. Please construct two sequences of positive integers a_1, a_2, ..., a_N and b_1, b_2, ..., b_N satisfying the following conditions:\n\n1 \\leq a_i, b_i \\leq 10^9 for all i\na_1 < a_2 < ... < a_N\nb_1 > b_2 > ... > b_N\na_{p_1}+b_{p_1} < a_{p_2}+b_{p_2} < ... < a_{p_N}+b_{p_N}\n\n\n\n\n\nConstraints\n2 \\leq N \\leq 20,000\np is a permutation of the set {1, 2, ..., N}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\np_1 p_2 ... p_N \n\n\n\n\n\nOutputThe output consists of two lines. The first line contains a_1, a_2, ..., a_N seperated by a space. The second line contains b_1, b_2, ..., b_N seperated by a space. \nIt can be shown that there always exists a solution for any input satisfying the constraints.\n\n\n\n\n\n\nSample Input 12\n1 2\n\n\n\n\n\nSample Output 11 4\n5 4\n\na_1 + b_1 = 6 and a_2 + b_2 = 8. So this output satisfies all conditions.\n\n\n\n\n\nSample Input 23\n3 2 1\n\n\n\n\n\nSample Output 21 2 3\n5 3 1\n\n\n\n\n\n\nSample Input 33\n2 3 1\n\n\n\n\n\nSample Output 35 10 100\n100 10 1"}
{"id": "p03939", "problem": "Score : 1000 points\n\n\nProblem Statement\nThere are N balls and N+1 holes in a line. Balls are numbered 1 through N from left to right. Holes are numbered 1 through N+1 from left to right. The i-th ball is located between the i-th hole and (i+1)-th hole. We denote the distance between neighboring items (one ball and one hole) from left to right as d_i (1 \\leq i \\leq 2 \\times N). You are given two parameters d_1 and x. d_i - d_{i-1} is equal to x for all i (2 \\leq i \\leq 2 \\times N).\nWe want to push all N balls into holes one by one. When a ball rolls over a hole, the ball will drop into the hole if there is no ball in the hole yet. Otherwise, the ball will pass this hole and continue to roll. (In any scenario considered in this problem, balls will never collide.)\nIn each step, we will choose one of the remaining balls uniformly at random and then choose a direction (either left or right) uniformly at random and push the ball in this direction. Please calculate the expected total distance rolled by all balls during this process.\nFor example, when N = 3, d_1 = 1, and x = 1, the following is one possible scenario:\n\n\n\n\nfirst step: push the ball numbered 2 to its left, it will drop into the hole numbered 2. The distance rolled is 3.\nsecond step: push the ball numbered 1 to its right, it will pass the hole numbered 2 and drop into the hole numbered 3. The distance rolled is 9.\nthird step: push the ball numbered 3 to its right, it will drop into the hole numbered 4. The distance rolled is 6.\n\nSo the total distance in this scenario is 18.\nNote that in all scenarios every ball will drop into some hole and there will be a hole containing no ball in the end.\n\n\n\n\nConstraints\n1 \\leq N \\leq 200,000\n1 \\leq d_1 \\leq 100\n0 \\leq x \\leq 100\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN d_1 x\n\n\n\n\n\nOutputPrint a floating number denoting the answer. The relative or absolute error of your answer should not be higher than 10^{-9}.\n\n\n\n\n\n\nSample Input 11 3 3\n\n\n\n\n\nSample Output 14.500000000000000\n\nThe distance between the only ball and the left hole is 3 and distance between the only ball and the right hole is 6. There are only two scenarios (i.e. push left and push right). The only ball will roll 3 and 6 unit distance, respectively. So the answer for this example is (3+6)/2 = 4.5.\n\n\n\n\n\nSample Input 22 1 0\n\n\n\n\n\nSample Output 22.500000000000000\n\n\n\n\n\n\nSample Input 31000 100 100\n\n\n\n\n\nSample Output 3649620280.957660079002380"}
{"id": "p03940", "problem": "Score : 1200 points\n\n\nProblem Statement\nImagine a game played on a line. Initially, the player is located at position 0 with N candies in his possession, and the exit is at position E. There are also N bears in the game. The i-th bear is located at x_i. The maximum moving speed of the player is 1 while the bears do not move at all.\nWhen the player gives a candy to a bear, it will provide a coin after T units of time. More specifically, if the i-th bear is given a candy at time t, it will put a coin at its position at time t+T. The purpose of this game is to give candies to all the bears, pick up all the coins, and go to the exit. Note that the player can only give a candy to a bear if the player is at the exact same position of the bear. Also, each bear will only produce a coin once. If the player visits the position of a coin after or at the exact same time that the coin is put down, the player can pick up the coin. Coins do not disappear until collected by the player.\nShik is an expert of this game. He can give candies to bears and pick up coins instantly. You are given the configuration of the game. Please calculate the minimum time Shik needs to collect all the coins and go to the exit.\n\n\n\n\nConstraints\n1 \\leq N \\leq 100,000\n1 \\leq T, E \\leq 10^9\n0 < x_i < E\nx_i < x_{i+1} for 1 \\leq i < N\nAll input values are integers.\n\n\n\n\n\nPartial Scores\nIn test cases worth 600 points, N \\leq 2,000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN E T\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputPrint an integer denoting the answer.\n\n\n\n\n\n\nSample Input 13 9 1\n1 3 8\n\n\n\n\n\nSample Output 112\n\nThe optimal strategy is to wait for the coin after treating each bear. The total time spent on waiting is 3 and moving is 9. So the answer is 3 + 9 = 12.\n\n\n\n\n\nSample Input 23 9 3\n1 3 8\n\n\n\n\n\nSample Output 216\n\n\n\n\n\n\nSample Input 32 1000000000 1000000000\n1 999999999\n\n\n\n\n\nSample Output 32999999996"}
{"id": "p03941", "problem": "Score : 1400 points\n\n\nProblem Statement\nIn the country there are N cities numbered 1 through N, which are connected by N-1 bidirectional roads. In terms of graph theory, there is a unique simple path connecting every pair of cities. That is, the N cities form a tree. Besides, if we view city 1 as the root of this tree, the tree will be a full binary tree (a tree is a full binary tree if and only if every non-leaf vertex in the tree has exactly two children). Roads are numbered 1 through N-1. The i-th road connects city i+1 and city a_i. When you pass through road i, the toll you should pay is v_i (if v_i is 0, it indicates the road does not require a toll).\nA company in city 1 will give each employee a family travel and cover a large part of the tolls incurred. Each employee can design the travel by themselves. That is, which cities he/she wants to visit in each day and which city to stay at each night. However, there are some constraints. More details are as follows:\n\n\nThe travel must start and end at city 1. If there are m leaves in the tree formed by the cities, then the number of days in the travel must be m+1. At the end of each day, except for the last day, the employee must stay at some hotel in a leaf city. During the whole travel, the employee must stay at all leaf cities exactly once.\n\n\nDuring the whole travel, all roads of the country must be passed through exactly twice.\n\n\nThe amount that the employee must pay for tolls by him/herself is the maximum total toll incurred in a single day during the travel, except the first day and the last day. The remaining tolls will be covered by the company.\n\n\nShik, as an employee of this company, has only one hope for his travel. He hopes that the amount he must pay for tolls by himself will be as small as possible. Please help Shik to design the travel which satisfies his hope.\n\n\n\n\nConstraints\n2 < N < 131,072\n1 \\leq a_i \\leq i for all i\n0 \\leq v_i \\leq 131,072\nv_i is an integer\nThe given tree is a full binary tree\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 v_1\na_2 v_2\n:\na_{N-1} v_{N-1}\n\n\n\n\n\nOutputPrint an integer denoting the minimum amount Shik must pay by himself for tolls incurred during the travel.\n\n\n\n\n\n\nSample Input 17\n1 1\n1 1\n2 1\n2 1\n3 1\n3 1\n\n\n\n\n\nSample Output 14\n\nThere are 4 leaves in the tree formed by the cities (cities 4, 5, 6, and 7), so the travel must be 5 days long. There are 4! = 24 possible arrangements of the leaf cities to stay during the travel, but some of them are invalid. For example, (4,5,6,7) and (6,7,5,4) are valid orders, but (5,6,7,4) is invalid because the route passes 4 times through the road connecting city 1 and city 2. The figure below shows the routes of the travel for these arrangements.\n\n\n\nFor all valid orders, day 3 is the day with the maximum total incurred toll of 4, passing through 4 roads.\n\n\n\n\n\nSample Input 29\n1 2\n1 2\n3 2\n3 2\n5 2\n5 2\n7 2\n7 2\n\n\n\n\n\nSample Output 26\n\nThe following figure shows the route of the travel for one possible arrangement of the stayed cities for the solution. Note that the tolls incurred in the first day and the last day are always covered by the company.\n\n\n\n\n\n\n\n\nSample Input 315\n1 2\n1 5\n3 3\n4 3\n4 3\n6 5\n5 4\n5 3\n6 3\n3 2\n11 5\n11 3\n13 2\n13 1\n\n\n\n\n\nSample Output 315\n\n\n\n\n\n\nSample Input 43\n1 0\n1 0\n\n\n\n\n\nSample Output 40"}
{"id": "p03942", "problem": "Score : 1500 points\n\n\nProblem Statement\nShik's job is very boring. At day 0, his boss gives him a string S_0 of length N which consists of only lowercase English letters. In the i-th day after day 0, Shik's job is to copy the string S_{i-1} to a string S_i. We denote the j-th letter of S_i as S_i[j].\nShik is inexperienced in this job. In each day, when he is copying letters one by one from the first letter to the last letter, he would make mistakes. That is, he sometimes accidentally writes down the same letter that he wrote previously instead of the correct one. More specifically, S_i[j] is equal to either S_{i-1}[j] or S_{i}[j-1]. (Note that S_i[1] always equals to S_{i-1}[1].)\nYou are given the string S_0 and another string T.\nPlease determine the smallest integer i such that S_i could be equal to T. If no such i exists, please print -1.\n\n\n\n\nConstraints\n1 \\leq N \\leq 1,000,000\nThe lengths of S_0 and T are both N.\nBoth S_0 and T consist of lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nS_0\nT\n\n\n\n\n\nOutputPrint the smallest integer i such that S_i could be equal to T. If no such i exists, print -1 instead.\n\n\n\n\n\n\nSample Input 15\nabcde\naaacc\n\n\n\n\n\nSample Output 12\n\nS_0 = abcde, S_1 = aaccc and S_2 = aaacc is a possible sequence such that S_2 = T.\n\n\n\n\n\nSample Input 25\nabcde\nabcde\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 34\nacaa\naaca\n\n\n\n\n\nSample Output 32\n\n\n\n\n\n\nSample Input 45\nabcde\nbbbbb\n\n\n\n\n\nSample Output 4-1"}
{"id": "p03943", "problem": "Score : 100 points\n\n\nProblem StatementTwo students of AtCoder Kindergarten are fighting over candy packs.\nThere are three candy packs, each of which contains a, b, and c candies, respectively.\nTeacher Evi is trying to distribute the packs between the two students so that each student gets the same number of candies. Determine whether it is possible.\nNote that Evi cannot take candies out of the packs, and the whole contents of each pack must be given to one of the students.\n\n\n\n\nConstraints\n1 \u2266 a, b, c \u2266 100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na b c\n\n\n\n\n\nOutputIf it is possible to distribute the packs so that each student gets the same number of candies, print Yes. Otherwise, print No.\n\n\n\n\n\n\nSample Input 110 30 20\n\n\n\n\n\nSample Output 1Yes\n\nGive the pack with 30 candies to one student, and give the two packs with 10 and 20 candies to the other. Then, each gets 30 candies.\n\n\n\n\n\nSample Input 230 30 100\n\n\n\n\n\nSample Output 2No\n\nIn this case, the student who gets the pack with 100 candies always has more candies than the other.\nNote that every pack must be given to one of them.\n\n\n\n\n\nSample Input 356 25 31\n\n\n\n\n\nSample Output 3Yes"}
{"id": "p03944", "problem": "Score : 200 points\n\n\nProblem StatementThere is a rectangle in the xy-plane, with its lower left corner at (0, 0) and its upper right corner at (W, H). Each of its sides is parallel to the x-axis or y-axis. Initially, the whole region within the rectangle is painted white.\nSnuke plotted N points into the rectangle. The coordinate of the i-th (1 \u2266 i \u2266 N) point was (x_i, y_i).\nThen, he created an integer sequence a of length N, and for each 1 \u2266 i \u2266 N, he painted some region within the rectangle black, as follows:\n\nIf a_i = 1, he painted the region satisfying x < x_i within the rectangle.\nIf a_i = 2, he painted the region satisfying x > x_i within the rectangle.\nIf a_i = 3, he painted the region satisfying y < y_i within the rectangle.\nIf a_i = 4, he painted the region satisfying y > y_i within the rectangle.\n\nFind the area of the white region within the rectangle after he finished painting.\n\n\n\n\nConstraints\n1 \u2266 W, H \u2266 100\n1 \u2266 N \u2266 100\n0 \u2266 x_i \u2266 W (1 \u2266 i \u2266 N)\n0 \u2266 y_i \u2266 H (1 \u2266 i \u2266 N)\nW, H (21:32, added), x_i and y_i are integers.\na_i (1 \u2266 i \u2266 N) is 1, 2, 3 or 4.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nW H N\nx_1 y_1 a_1\nx_2 y_2 a_2\n:\nx_N y_N a_N\n\n\n\n\n\nOutputPrint the area of the white region within the rectangle after Snuke finished painting.\n\n\n\n\n\n\nSample Input 15 4 2\n2 1 1\n3 3 4\n\n\n\n\n\nSample Output 19\n\nThe figure below shows the rectangle before Snuke starts painting.\n\n\n\nFirst, as (x_1, y_1) = (2, 1) and a_1 = 1, he paints the region satisfying x < 2 within the rectangle:\n\n\n\nThen, as (x_2, y_2) = (3, 3) and a_2 = 4, he paints the region satisfying y > 3 within the rectangle:\n\n\n\nNow, the area of the white region within the rectangle is 9.\n\n\n\n\n\nSample Input 25 4 3\n2 1 1\n3 3 4\n1 4 2\n\n\n\n\n\nSample Output 20\n\nIt is possible that the whole region within the rectangle is painted black.\n\n\n\n\n\nSample Input 310 10 5\n1 6 1\n4 1 3\n6 9 4\n9 4 2\n3 1 3\n\n\n\n\n\nSample Output 364"}
{"id": "p03945", "problem": "Score : 300 points\n\n\nProblem StatementTwo foxes Jiro and Saburo are playing a game called 1D Reversi. This game is played on a board, using black and white stones. On the board, stones are placed in a row, and each player places a new stone to either end of the row. Similarly to the original game of Reversi, when a white stone is placed, all black stones between the new white stone and another white stone, turn into white stones, and vice versa.\nIn the middle of a game, something came up and Saburo has to leave the game. The state of the board at this point is described by a string S. There are |S| (the length of S) stones on the board, and each character in S represents the color of the i-th (1 \u2266 i \u2266 |S|) stone from the left. If the i-th character in S is B, it means that the color of the corresponding stone on the board is black. Similarly, if the i-th character in S is W, it means that the color of the corresponding stone is white.\nJiro wants all stones on the board to be of the same color. For this purpose, he will place new stones on the board according to the rules. Find the minimum number of new stones that he needs to place.\n\n\n\n\nConstraints\n1 \u2266 |S| \u2266 10^5\nEach character in S is B or W.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the minimum number of new stones that Jiro needs to place for his purpose.\n\n\n\n\n\n\nSample Input 1BBBWW\n\n\n\n\n\nSample Output 11\n\nBy placing a new black stone to the right end of the row of stones, all white stones will become black. Also, by placing a new white stone to the left end of the row of stones, all black stones will become white.\nIn either way, Jiro's purpose can be achieved by placing one stone.\n\n\n\n\n\nSample Input 2WWWWWW\n\n\n\n\n\nSample Output 20\n\nIf all stones are already of the same color, no new stone is necessary.\n\n\n\n\n\nSample Input 3WBWBWBWBWB\n\n\n\n\n\nSample Output 39"}
{"id": "p03946", "problem": "Score : 400 points\n\n\nProblem StatementThere are N towns located in a line, conveniently numbered 1 through N. Takahashi the merchant is going on a travel from town 1 to town N, buying and selling apples.\nTakahashi will begin the travel at town 1, with no apple in his possession. The actions that can be performed during the travel are as follows:\n\nMove: When at town i (i < N), move to town i + 1.\nMerchandise: Buy or sell an arbitrary number of apples at the current town. Here, it is assumed that one apple can always be bought and sold for A_i yen (the currency of Japan) at town i (1 \u2266 i \u2266 N), where A_i are distinct integers. Also, you can assume that he has an infinite supply of money.\n\nFor some reason, there is a constraint on merchandising apple during the travel: the sum of the number of apples bought and the number of apples sold during the whole travel, must be at most T. (Note that a single apple can be counted in both.)\nDuring the travel, Takahashi will perform actions so that the profit of the travel is maximized. Here, the profit of the travel is the amount of money that is gained by selling apples, minus the amount of money that is spent on buying apples. Note that we are not interested in apples in his possession at the end of the travel.\nAoki, a business rival of Takahashi, wants to trouble Takahashi by manipulating the market price of apples. Prior to the beginning of Takahashi's travel, Aoki can change A_i into another arbitrary non-negative integer A_i' for any town i, any number of times. The cost of performing this operation is |A_i - A_i'|. After performing this operation, different towns may have equal values of A_i.\nAoki's objective is to decrease Takahashi's expected profit by at least 1 yen. Find the minimum total cost to achieve it. You may assume that Takahashi's expected profit is initially at least 1 yen.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 10^9 (1 \u2266 i \u2266 N)\nA_i are distinct.\n2 \u2266 T \u2266 10^9\nIn the initial state, Takahashi's expected profit is at least 1 yen.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN T\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the minimum total cost to decrease Takahashi's expected profit by at least 1 yen.\n\n\n\n\n\n\nSample Input 13 2\n100 50 200\n\n\n\n\n\nSample Output 11\n\nIn the initial state, Takahashi can achieve the maximum profit of 150 yen as follows:\n\nMove from town 1 to town 2.\nBuy one apple for 50 yen at town 2.\nMove from town 2 to town 3.\nSell one apple for 200 yen at town 3.\n\nIf, for example, Aoki changes the price of an apple at town 2 from 50 yen to 51 yen, Takahashi will not be able to achieve the profit of 150 yen. The cost of performing this operation is 1, thus the answer is 1.\nThere are other ways to decrease Takahashi's expected profit, such as changing the price of an apple at town 3 from 200 yen to 199 yen.\n\n\n\n\n\nSample Input 25 8\n50 30 40 10 20\n\n\n\n\n\nSample Output 22\n\n\n\n\n\n\nSample Input 310 100\n7 10 4 5 9 3 6 8 2 1\n\n\n\n\n\nSample Output 32"}
{"id": "p03947", "problem": "Score : 300 points\n\n\nProblem StatementTwo foxes Jiro and Saburo are playing a game called 1D Reversi. This game is played on a board, using black and white stones. On the board, stones are placed in a row, and each player places a new stone to either end of the row. Similarly to the original game of Reversi, when a white stone is placed, all black stones between the new white stone and another white stone, turn into white stones, and vice versa.\nIn the middle of a game, something came up and Saburo has to leave the game. The state of the board at this point is described by a string S. There are |S| (the length of S) stones on the board, and each character in S represents the color of the i-th (1 \u2266 i \u2266 |S|) stone from the left. If the i-th character in S is B, it means that the color of the corresponding stone on the board is black. Similarly, if the i-th character in S is W, it means that the color of the corresponding stone is white.\nJiro wants all stones on the board to be of the same color. For this purpose, he will place new stones on the board according to the rules. Find the minimum number of new stones that he needs to place.\n\n\n\n\nConstraints\n1 \u2266 |S| \u2266 10^5\nEach character in S is B or W.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the minimum number of new stones that Jiro needs to place for his purpose.\n\n\n\n\n\n\nSample Input 1BBBWW\n\n\n\n\n\nSample Output 11\n\nBy placing a new black stone to the right end of the row of stones, all white stones will become black. Also, by placing a new white stone to the left end of the row of stones, all black stones will become white.\nIn either way, Jiro's purpose can be achieved by placing one stone.\n\n\n\n\n\nSample Input 2WWWWWW\n\n\n\n\n\nSample Output 20\n\nIf all stones are already of the same color, no new stone is necessary.\n\n\n\n\n\nSample Input 3WBWBWBWBWB\n\n\n\n\n\nSample Output 39"}
{"id": "p03948", "problem": "Score : 400 points\n\n\nProblem StatementThere are N towns located in a line, conveniently numbered 1 through N. Takahashi the merchant is going on a travel from town 1 to town N, buying and selling apples.\nTakahashi will begin the travel at town 1, with no apple in his possession. The actions that can be performed during the travel are as follows:\n\nMove: When at town i (i < N), move to town i + 1.\nMerchandise: Buy or sell an arbitrary number of apples at the current town. Here, it is assumed that one apple can always be bought and sold for A_i yen (the currency of Japan) at town i (1 \u2266 i \u2266 N), where A_i are distinct integers. Also, you can assume that he has an infinite supply of money.\n\nFor some reason, there is a constraint on merchandising apple during the travel: the sum of the number of apples bought and the number of apples sold during the whole travel, must be at most T. (Note that a single apple can be counted in both.)\nDuring the travel, Takahashi will perform actions so that the profit of the travel is maximized. Here, the profit of the travel is the amount of money that is gained by selling apples, minus the amount of money that is spent on buying apples. Note that we are not interested in apples in his possession at the end of the travel.\nAoki, a business rival of Takahashi, wants to trouble Takahashi by manipulating the market price of apples. Prior to the beginning of Takahashi's travel, Aoki can change A_i into another arbitrary non-negative integer A_i' for any town i, any number of times. The cost of performing this operation is |A_i - A_i'|. After performing this operation, different towns may have equal values of A_i.\nAoki's objective is to decrease Takahashi's expected profit by at least 1 yen. Find the minimum total cost to achieve it. You may assume that Takahashi's expected profit is initially at least 1 yen.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 A_i \u2266 10^9 (1 \u2266 i \u2266 N)\nA_i are distinct.\n2 \u2266 T \u2266 10^9\nIn the initial state, Takahashi's expected profit is at least 1 yen.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN T\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the minimum total cost to decrease Takahashi's expected profit by at least 1 yen.\n\n\n\n\n\n\nSample Input 13 2\n100 50 200\n\n\n\n\n\nSample Output 11\n\nIn the initial state, Takahashi can achieve the maximum profit of 150 yen as follows:\n\nMove from town 1 to town 2.\nBuy one apple for 50 yen at town 2.\nMove from town 2 to town 3.\nSell one apple for 200 yen at town 3.\n\nIf, for example, Aoki changes the price of an apple at town 2 from 50 yen to 51 yen, Takahashi will not be able to achieve the profit of 150 yen. The cost of performing this operation is 1, thus the answer is 1.\nThere are other ways to decrease Takahashi's expected profit, such as changing the price of an apple at town 3 from 200 yen to 199 yen.\n\n\n\n\n\nSample Input 25 8\n50 30 40 10 20\n\n\n\n\n\nSample Output 22\n\n\n\n\n\n\nSample Input 310 100\n7 10 4 5 9 3 6 8 2 1\n\n\n\n\n\nSample Output 32"}
{"id": "p03949", "problem": "Score : 800 points\n\n\nProblem StatementWe have a tree with N vertices. The vertices are numbered 1, 2, ..., N. The i-th (1 \u2266 i \u2266 N - 1) edge connects the two vertices A_i and B_i.\nTakahashi wrote integers into K of the vertices. Specifically, for each 1 \u2266 j \u2266 K, he wrote the integer P_j into vertex V_j. The remaining vertices are left empty. After that, he got tired and fell asleep.\nThen, Aoki appeared. He is trying to surprise Takahashi by writing integers into all empty vertices so that the following condition is satisfied:\n\nCondition: For any two vertices directly connected by an edge, the integers written into these vertices differ by exactly 1.\n\nDetermine if it is possible to write integers into all empty vertices so that the condition is satisfied. If the answer is positive, find one specific way to satisfy the condition.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 K \u2266 N\n1 \u2266 A_i, B_i \u2266 N (1 \u2266 i \u2266 N - 1)\n1 \u2266 V_j \u2266 N (1 \u2266 j \u2266 K) (21:18, a mistake in this constraint was corrected)\n0 \u2266 P_j \u2266 10^5 (1 \u2266 j \u2266 K)\nThe given graph is a tree.\nAll v_j are distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 B_1\nA_2 B_2\n:\nA_{N-1} B_{N-1}\nK\nV_1 P_1\nV_2 P_2\n:\nV_K P_K\n\n\n\n\n\nOutputIf it is possible to write integers into all empty vertices so that the condition is satisfied, print Yes. Otherwise, print No.\nIf it is possible to satisfy the condition, print N lines in addition. The v-th (1 \u2266 v \u2266 N) of these N lines should contain the integer that should be written into vertex v. If there are multiple ways to satisfy the condition, any of those is accepted.\n\n\n\n\n\n\nSample Input 15\n1 2\n3 1\n4 3\n3 5\n2\n2 6\n5 7\n\n\n\n\n\nSample Output 1Yes\n5\n6\n6\n5\n7\n\nThe figure below shows the tree when Takahashi fell asleep. For each vertex, the integer written beside it represents the index of the vertex, and the integer written into the vertex is the integer written by Takahashi.\n\n\n\nAoki can, for example, satisfy the condition by writing integers into the remaining vertices as follows:\n\n\n\nThis corresponds to Sample Output 1. Note that other outputs that satisfy the condition will also be accepted, such as:\nYes\n7\n6\n8\n7\n7\n\n\n\n\n\n\nSample Input 25\n1 2\n3 1\n4 3\n3 5\n3\n2 6\n4 3\n5 7\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 34\n1 2\n2 3\n3 4\n1\n1 0\n\n\n\n\n\nSample Output 3Yes\n0\n-1\n-2\n-3\n\nThe integers written by Aoki may be negative or exceed 10^6."}
{"id": "p03950", "problem": "Score : 1600 points\n\n\nProblem StatementThere is a rectangle in the xy-plane, with its lower left corner at (0, 0) and its upper right corner at (W, H). Each of its sides is parallel to the x-axis or y-axis. Initially, the whole region within the rectangle is painted white.\nSnuke plotted N points into the rectangle. The coordinate of the i-th (1 \u2266 i \u2266 N) point was (x_i, y_i).\nThen, for each 1 \u2266 i \u2266 N, he will paint one of the following four regions black:\n\nthe region satisfying x < x_i within the rectangle\nthe region satisfying x > x_i within the rectangle\nthe region satisfying y < y_i within the rectangle\nthe region satisfying y > y_i within the rectangle\n\nFind the longest possible perimeter of the white region of a rectangular shape within the rectangle after he finishes painting.\n\n\n\n\nConstraints\n1 \u2266 W, H \u2266 10^8\n1 \u2266 N \u2266 3 \\times 10^5\n0 \u2266 x_i \u2266 W (1 \u2266 i \u2266 N)\n0 \u2266 y_i \u2266 H (1 \u2266 i \u2266 N)\nW, H (21:32, added), x_i and y_i are integers.\nIf i \u2260 j, then x_i \u2260 x_j and y_i \u2260 y_j.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nW H N\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n\n\n\n\nOutputPrint the longest possible perimeter of the white region of a rectangular shape within the rectangle after Snuke finishes painting.\n\n\n\n\n\n\nSample Input 110 10 4\n1 6\n4 1\n6 9\n9 4\n\n\n\n\n\nSample Output 132\n\nIn this case, the maximum perimeter of 32 can be obtained by painting the rectangle as follows:\n\n\n\n\n\n\n\n\nSample Input 25 4 5\n0 0\n1 1\n2 2\n4 3\n5 4\n\n\n\n\n\nSample Output 212\n\n\n\n\n\n\nSample Input 3100 100 8\n19 33\n8 10\n52 18\n94 2\n81 36\n88 95\n67 83\n20 71\n\n\n\n\n\nSample Output 3270\n\n\n\n\n\n\nSample Input 4100000000 100000000 1\n3 4\n\n\n\n\n\nSample Output 4399999994"}
{"id": "p03951", "problem": "Score : 200 points\n\n\nProblem StatementSnuke is interested in strings that satisfy the following conditions:\n\nThe length of the string is at least N.\nThe first N characters equal to the string s.\nThe last N characters equal to the string t.\n\nFind the length of the shortest string that satisfies the conditions.\n\n\n\n\nConstraints\n1\u2264N\u2264100\nThe lengths of s and t are both N.\ns and t consist of lowercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\ns\nt\n\n\n\n\n\nOutputPrint the length of the shortest string that satisfies the conditions.\n\n\n\n\n\n\nSample Input 13\nabc\ncde\n\n\n\n\n\nSample Output 15\n\nThe shortest string is abcde.\n\n\n\n\n\nSample Input 21\na\nz\n\n\n\n\n\nSample Output 22\n\nThe shortest string is az.\n\n\n\n\n\nSample Input 34\nexpr\nexpr\n\n\n\n\n\nSample Output 34\n\nThe shortest string is expr."}
{"id": "p03952", "problem": "Score : 400 points\n\n\nProblem StatementWe have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1\u2264i\u2264N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically.\n\n\nA pyramid with N=4 steps\n\nSnuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule:\n\nThe integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b.\n\n\n\nWriting integers into the blocks\n\nAfterwards, he erased all integers written into the blocks.\nNow, he only remembers that the integer written into the block of step 1 was x.\nConstruct a permutation of (1, 2, ..., 2N-1) that could have been written into the blocks of step N, or declare that Snuke's memory is incorrect and such a permutation does not exist.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n1\u2264x\u22642N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN x\n\n\n\n\n\nOutputIf no permutation of (1, 2, ..., 2N-1) could have been written into the blocks of step N, print No.\nOtherwise, print Yes in the first line, then print 2N-1 lines in addition.\nThe i-th of these 2N-1 lines should contain the i-th element of a possible permutation.\n\n\n\n\n\n\nSample Input 14 4\n\n\n\n\n\nSample Output 1Yes\n1\n6\n3\n7\n4\n5\n2\n\nThis case corresponds to the figure in the problem statement.\n\n\n\n\n\nSample Input 22 1\n\n\n\n\n\nSample Output 2No\n\nNo matter what permutation was written into the blocks of step N, the integer written into the block of step 1 would be 2."}
{"id": "p03953", "problem": "Score : 800 points\n\n\nProblem StatementThere are N rabbits on a number line.\nThe rabbits are conveniently numbered 1 through N.\nThe coordinate of the initial position of rabbit i is x_i.\nThe rabbits will now take exercise on the number line, by performing sets described below.\nA set consists of M jumps. The j-th jump of a set is performed by rabbit a_j (2\u2264a_j\u2264N-1).\nFor this jump, either rabbit a_j-1 or rabbit a_j+1 is chosen with equal probability (let the chosen rabbit be rabbit x), then rabbit a_j will jump to the symmetric point of its current position with respect to rabbit x.\nThe rabbits will perform K sets in succession.\nFor each rabbit, find the expected value of the coordinate of its eventual position after K sets are performed.\n\n\n\n\nConstraints\n3\u2264N\u226410^5\nx_i is an integer.\n|x_i|\u226410^9\n1\u2264M\u226410^5\n2\u2264a_j\u2264N-1\n1\u2264K\u226410^{18}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 x_2 ... x_N\nM K\na_1 a_2 ... a_M\n\n\n\n\n\nOutputPrint N lines.\nThe i-th line should contain the expected value of the coordinate of the eventual position of rabbit i after K sets are performed.\nThe output is considered correct if the absolute or relative error is at most 10^{-9}.\n\n\n\n\n\n\nSample Input 13\n-1 0 2\n1 1\n2\n\n\n\n\n\nSample Output 1-1.0\n1.0\n2.0\n\nRabbit 2 will perform the jump.\nIf rabbit 1 is chosen, the coordinate of the destination will be -2.\nIf rabbit 3 is chosen, the coordinate of the destination will be 4.\nThus, the expected value of the coordinate of the eventual position of rabbit 2 is 0.5\u00d7(-2)+0.5\u00d74=1.0.\n\n\n\n\n\nSample Input 23\n1 -1 1\n2 2\n2 2\n\n\n\n\n\nSample Output 21.0\n-1.0\n1.0\n\nx_i may not be distinct.\n\n\n\n\n\nSample Input 35\n0 1 3 6 10\n3 10\n2 3 4\n\n\n\n\n\nSample Output 30.0\n3.0\n7.0\n8.0\n10.0"}
{"id": "p03954", "problem": "Score : 1300 points\n\n\nProblem StatementWe have a pyramid with N steps, built with blocks.\nThe steps are numbered 1 through N from top to bottom.\nFor each 1\u2264i\u2264N, step i consists of 2i-1 blocks aligned horizontally.\nThe pyramid is built so that the blocks at the centers of the steps are aligned vertically.\n\n\nA pyramid with N=4 steps\n\nSnuke wrote a permutation of (1, 2, ..., 2N-1) into the blocks of step N.\nThen, he wrote integers into all remaining blocks, under the following rule:\n\nThe integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b.\n\n\n\nWriting integers into the blocks\n\nAfterwards, he erased all integers written into the blocks.\nNow, he only remembers that the permutation written into the blocks of step N was (a_1, a_2, ..., a_{2N-1}).\nFind the integer written into the block of step 1.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n(a_1, a_2, ..., a_{2N-1}) is a permutation of (1, 2, ..., 2N-1).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_{2N-1}\n\n\n\n\n\nOutputPrint the integer written into the block of step 1.\n\n\n\n\n\n\nSample Input 14\n1 6 3 7 4 5 2\n\n\n\n\n\nSample Output 14\n\nThis case corresponds to the figure in the problem statement.\n\n\n\n\n\nSample Input 22\n1 2 3\n\n\n\n\n\nSample Output 22"}
{"id": "p03955", "problem": "Score : 1500 points\n\n\nProblem StatementWe have a grid with 3 rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, each cell (i, j) contains the integer i+3j-3.\n\n\nA grid with N=5 columns\n\nSnuke can perform the following operation any number of times:\n\nChoose a 3\u00d73 subrectangle of the grid. The placement of integers within the subrectangle is now rotated by 180\u00b0.\n\n\n\nAn example sequence of operations (each chosen subrectangle is colored blue)\n\nSnuke's objective is to manipulate the grid so that each cell (i, j) contains the integer a_{i,j}.\nDetermine whether it is achievable.\n\n\n\n\nConstraints\n5\u2264N\u226410^5\n1\u2264a_{i,j}\u22643N\nAll a_{i,j} are distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_{1,1} a_{1,2} ... a_{1,N}\na_{2,1} a_{2,2} ... a_{2,N}\na_{3,1} a_{3,2} ... a_{3,N}\n\n\n\n\n\nOutputIf Snuke's objective is achievable, print Yes. Otherwise, print No.\n\n\n\n\n\n\nSample Input 15\n9 6 15 12 1\n8 5 14 11 2\n7 4 13 10 3\n\n\n\n\n\nSample Output 1Yes\n\nThis case corresponds to the figure in the problem statement.\n\n\n\n\n\nSample Input 25\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 35\n1 4 7 10 13\n2 5 8 11 14\n3 6 9 12 15\n\n\n\n\n\nSample Output 3Yes\n\nThe objective is already achieved with the initial placement of the integers.\n\n\n\n\n\nSample Input 46\n15 10 3 4 9 16\n14 11 2 5 8 17\n13 12 1 6 7 18\n\n\n\n\n\nSample Output 4Yes\n\n\n\n\n\n\nSample Input 57\n21 12 1 16 13 6 7\n20 11 2 17 14 5 8\n19 10 3 18 15 4 9\n\n\n\n\n\nSample Output 5No"}
{"id": "p03956", "problem": "Score : 1700 points\n\n\nProblem StatementWe have a grid with N rows and N columns.\nThe cell at the i-th row and j-th column is denoted (i, j).\nInitially, M of the cells are painted black, and all other cells are white.\nSpecifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_M, b_M) are painted black.\nSnuke will try to paint as many white cells black as possible, according to the following rule:\n\nIf two cells (x, y) and (y, z) are both black and a cell (z, x) is white for integers 1\u2264x,y,z\u2264N, paint the cell (z, x) black.\n\nFind the number of black cells when no more white cells can be painted black.\n\n\n\n\nConstraints\n1\u2264N\u226410^5\n1\u2264M\u226410^5\n1\u2264a_i,b_i\u2264N\nAll pairs (a_i, b_i) are distinct.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\n\n\n\nOutputPrint the number of black cells when no more white cells can be painted black.\n\n\n\n\n\n\nSample Input 13 2\n1 2\n2 3\n\n\n\n\n\nSample Output 13\n\nIt is possible to paint one white cell black, as follows:\n\nSince cells (1, 2) and (2, 3) are both black and a cell (3, 1) is white, paint the cell (3, 1) black.\n\n\n\n\n\n\nSample Input 22 2\n1 1\n1 2\n\n\n\n\n\nSample Output 24\n\nIt is possible to paint two white cells black, as follows:\n\nSince cells (1, 1) and (1, 2) are both black and a cell (2, 1) is white, paint the cell (2, 1) black.\nSince cells (2, 1) and (1, 2) are both black and a cell (2, 2) is white, paint the cell (2, 2) black.\n\n\n\n\n\n\nSample Input 34 3\n1 2\n1 3\n4 4\n\n\n\n\n\nSample Output 33\n\nNo white cells can be painted black."}
{"id": "p03957", "problem": "Score : 100 points\n\n\nProblem StatementThis contest is CODEFESTIVAL, which can be shortened to the string CF by deleting some characters.  \nMr. Takahashi, full of curiosity, wondered if he could obtain CF from other strings in the same way.  \nYou are given a string s consisting of uppercase English letters.\nDetermine whether the string CF can be obtained from the string s by deleting some characters.\n\n\n\n\nConstraints\n2 \u2264 |s| \u2264 100\nAll characters in s are uppercase English letters (A-Z).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint Yes if the string CF can be obtained from the string s by deleting some characters.\nOtherwise print No.\n\n\n\n\n\n\nSample Input 1CODEFESTIVAL\n\n\n\n\n\nSample Output 1Yes\n\nCF is obtained by deleting characters other than the first character C and the fifth character F.\n\n\n\n\n\nSample Input 2FESTIVALCODE\n\n\n\n\n\nSample Output 2No\n\nFC can be obtained but CF cannot be obtained because you cannot change the order of the characters.\n\n\n\n\n\nSample Input 3CF\n\n\n\n\n\nSample Output 3Yes\n\nIt is also possible not to delete any characters.\n\n\n\n\n\nSample Input 4FCF\n\n\n\n\n\nSample Output 4Yes\n\nCF is obtained by deleting the first character."}
{"id": "p03958", "problem": "Score : 200 points\n\n\nProblem StatementThere are K pieces of cakes.\nMr. Takahashi would like to eat one cake per day, taking K days to eat them all.\nThere are T types of cake, and the number of the cakes of type i (1 \u2264 i \u2264 T) is a_i.  \nEating the same type of cake two days in a row would be no fun,\nso Mr. Takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before.  \nCompute the minimum number of days on which the same type of cake as the previous day will be eaten.\n\n\n\n\nConstraints\n1 \u2264 K \u2264 10000\n1 \u2264 T \u2264 100\n1 \u2264 a_i \u2264 100\na_1 + a_2 + ... + a_T = K\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nK T\na_1 a_2 ... a_T\n\n\n\n\n\nOutputPrint the minimum number of days on which the same type of cake as the previous day will be eaten.\n\n\n\n\n\n\nSample Input 17 3\n3 2 2\n\n\n\n\n\nSample Output 10\n\nFor example, if Mr. Takahashi eats cakes in the order of 2, 1, 2, 3, 1, 3, 1, he can avoid eating the same type of cake as the previous day.\n\n\n\n\n\nSample Input 26 3\n1 4 1\n\n\n\n\n\nSample Output 21\n\nThere are 6 cakes.\nFor example, if Mr. Takahashi eats cakes in the order of 2, 3, 2, 2, 1, 2, he has to eat the same type of cake (i.e., type 2) as the previous day only on the fourth day.\nSince this is the minimum number, the answer is 1.\n\n\n\n\n\nSample Input 3100 1\n100\n\n\n\n\n\nSample Output 399\n\nSince Mr. Takahashi has only one type of cake, he has no choice but to eat the same type of cake as the previous day from the second day and after."}
{"id": "p03959", "problem": "Score : 400 points\n\n\nProblem StatementMountaineers Mr. Takahashi and Mr. Aoki recently trekked across a certain famous mountain range.\nThe mountain range consists of N mountains, extending from west to east in a straight line as Mt. 1, Mt. 2, ..., Mt. N.\nMr. Takahashi traversed the range from the west and Mr. Aoki from the east.  \nThe height of Mt. i is h_i, but they have forgotten the value of each h_i.\nInstead, for each i (1 \u2264 i \u2264 N), they recorded the maximum height of the mountains climbed up to the time they reached the peak of Mt. i (including Mt. i).\nMr. Takahashi's record is T_i and Mr. Aoki's record is A_i.  \nWe know that the height of each mountain h_i is a positive integer.\nCompute the number of the possible sequences of the mountains' heights, modulo 10^9 + 7.\nNote that the records may be incorrect and thus there may be no possible sequence of the mountains' heights.\nIn such a case, output 0.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 10^5\n1 \u2264 T_i \u2264 10^9\n1 \u2264 A_i \u2264 10^9\nT_i \u2264 T_{i+1} (1 \u2264 i \u2264 N - 1)\nA_i \u2265 A_{i+1} (1 \u2264 i \u2264 N - 1)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nT_1 T_2 ... T_N\nA_1 A_2 ... A_N\n\n\n\n\n\nOutputPrint the number of possible sequences of the mountains' heights, modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 15\n1 3 3 3 3\n3 3 2 2 2\n\n\n\n\n\nSample Output 14\n\nThe possible sequences of the mountains' heights are:\n\n1, 3, 2, 2, 2 \n1, 3, 2, 1, 2 \n1, 3, 1, 2, 2 \n1, 3, 1, 1, 2 \n\nfor a total of four sequences.\n\n\n\n\n\nSample Input 25\n1 1 1 2 2\n3 2 1 1 1\n\n\n\n\n\nSample Output 20\n\nThe records are contradictory, since Mr. Takahashi recorded 2 as the highest peak after climbing all the mountains but Mr. Aoki recorded 3.\n\n\n\n\n\nSample Input 310\n1 3776 3776 8848 8848 8848 8848 8848 8848 8848\n8848 8848 8848 8848 8848 8848 8848 8848 3776 5\n\n\n\n\n\nSample Output 3884111967\n\nDon't forget to compute the number modulo 10^9 + 7.\n\n\n\n\n\nSample Input 41\n17\n17\n\n\n\n\n\nSample Output 41\n\nSome mountain ranges consist of only one mountain."}
{"id": "p03960", "problem": "Score : 800 points\n\n\nProblem StatementMr. Takahashi has in his room an art object with H rows and W columns, made up of H \\times W blocks.\nEach block has a color represented by a lowercase English letter (a-z).\nThe color of the block at the i-th row and j-th column is c_{i,j}.  \nMr. Takahashi would like to dismantle the object, finding it a bit kitschy for his tastes.\nThe dismantling is processed by repeating the following operation:  \n\nChoose one of the W columns and push down that column one row.\nThe block at the bottom of that column disappears.\n\nEach time the operation is performed, a cost is incurred.\nSince blocks of the same color have a property to draw each other together, the cost of the operation is the number of the pairs of blocks (p, q) such that:\n\nThe block p is in the selected column.\nThe two blocks p and q are horizontally adjacent (before pushing down the column).\nThe two blocks p and q have the same color.\n\nMr. Takahashi dismantles the object by repeating the operation H \\times W times to get rid of all the blocks.\nCompute the minimum total cost to dismantle the object.\n\n\n\n\nConstraints\n1 \u2264 H \u2264 300\n2 \u2264 W \u2264 300\nAll characters c_{i,j} are lowercase English letters (a-z).\n\n\n\n\n\nPartial Score\nIn test cases worth 300 points, W = 3.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\nc_{1,1}c_{1,2}..c_{1,W}\nc_{2,1}c_{2,2}..c_{2,W}\n:\nc_{H,1}c_{H,2}..c_{H,W}\n\n\n\n\n\nOutputPrint the minimum total cost to dismantle the object.\n\n\n\n\n\n\nSample Input 12 3\nrrr\nbrg\n\n\n\n\n\nSample Output 12\n\nFor example, the total cost of 2 can be achieved by performing the operation as follows and this is the minimum value.\n\n\n\n\n\n\n\n\nSample Input 26 3\nxya\nxya\nayz\nayz\nxaz\nxaz\n\n\n\n\n\nSample Output 20\n\nThe total cost of 0 can be achieved by first pushing down all blocks of the middle column, then all of the left column, and all of the right column.\n\n\n\n\n\nSample Input 34 2\nay\nxa\nxy\nay\n\n\n\n\n\nSample Output 30\n\nThe total cost of 0 can be achieved by the following operations:\n\npushing down the right column one row;\npushing down the left column one row;\npushing down all of the right column;\nand pushing down all of the left column.\n\n\n\n\n\n\nSample Input 45 5\naaaaa\nabbba\nababa\nabbba\naaaaa\n\n\n\n\n\nSample Output 424\n\n\n\n\n\n\nSample Input 57 10\nxxxxxxxxxx\nccccxxffff\ncxxcxxfxxx\ncxxxxxffff\ncxxcxxfxxx\nccccxxfxxx\nxxxxxxxxxx\n\n\n\n\n\nSample Output 5130"}
{"id": "p03961", "problem": "Score : 1200 points\n\n\nProblem StatementOne day Mr. Takahashi picked up a dictionary containing all of the N! permutations of integers 1 through N.\nThe dictionary has N! pages, and page i (1 \u2264 i \u2264 N!) contains the i-th permutation in the lexicographical order.\nMr. Takahashi wanted to look up a certain permutation of length N in this dictionary, but he forgot some part of it.\nHis memory of the permutation is described by a sequence P_1, P_2, ..., P_N.\nIf P_i = 0, it means that he forgot the i-th element of the permutation; otherwise, it means that he remembered the i-th element of the permutation and it is P_i.\nHe decided to look up all the possible permutations in the dictionary.\nCompute the sum of the page numbers of the pages he has to check, modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \u2264 N \u2264 500000\n0 \u2264 P_i \u2264 N\nP_i \u2260 P_j if i \u2260 j (1 \u2264 i, j \u2264 N), P_i \u2260 0 and P_j \u2260 0.\n\n\n\n\n\nPartial Score\nIn test cases worth 500 points, 1 \u2264 N \u2264 3000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nP_1 P_2 ... P_N\n\n\n\n\n\nOutputPrint the sum of the page numbers of the pages he has to check, as modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 14\n0 2 3 0\n\n\n\n\n\nSample Output 123\n\nThe possible permutations are [1, 2, 3, 4] and [4, 2, 3, 1].\nSince the former is on page 1 and the latter is on page 22, the answer is 23.\n\n\n\n\n\nSample Input 23\n0 0 0\n\n\n\n\n\nSample Output 221\n\nSince all permutations of length 3 are possible, the answer is 1 + 2 + 3 + 4 + 5 + 6 = 21.\n\n\n\n\n\nSample Input 35\n1 2 3 5 4\n\n\n\n\n\nSample Output 32\n\nMr. Takahashi remembered all the elements of the permutation.\n\n\n\n\n\nSample Input 41\n0\n\n\n\n\n\nSample Output 41\n\nThe dictionary consists of one page.\n\n\n\n\n\nSample Input 510\n0 3 0 0 1 0 4 0 0 0\n\n\n\n\n\nSample Output 5953330050"}
{"id": "p03962", "problem": "Score : 100 points\n\n\nProblem StatementAtCoDeer the deer recently bought three paint cans.\nThe color of the one he bought two days ago is a, the color of the one he bought yesterday is b, and the color of the one he bought today is c.\nHere, the color of each paint can is represented by an integer between 1 and 100, inclusive.\nSince he is forgetful, he might have bought more than one paint can in the same color.\nCount the number of different kinds of colors of these paint cans and tell him.\n\n\n\n\nConstraints\n1\u2266a,b,c\u2266100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na b c\n\n\n\n\n\nOutputPrint the number of different kinds of colors of the paint cans.\n\n\n\n\n\n\nSample Input 13 1 4\n\n\n\n\n\nSample Output 13\n\nThree different colors: 1, 3, and 4.\n\n\n\n\n\nSample Input 23 3 33\n\n\n\n\n\nSample Output 22\n\nTwo different colors: 3 and 33."}
{"id": "p03963", "problem": "Score : 200 points\n\n\nProblem StatementThere are N balls placed in a row.\nAtCoDeer the deer is painting each of these in one of the K colors of his paint cans.\nFor aesthetic reasons, any two adjacent balls must be painted in different colors.\nFind the number of the possible ways to paint the balls.\n\n\n\n\nConstraints\n1\u2266N\u22661000\n2\u2266K\u22661000\nThe correct answer is at most 2^{31}-1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the number of the possible ways to paint the balls.\n\n\n\n\n\n\nSample Input 12 2\n\n\n\n\n\nSample Output 12\n\nWe will denote the colors by 0 and 1. There are two possible ways: we can either paint the left ball in color 0 and the right ball in color 1, or paint the left in color 1 and the right in color 0.\n\n\n\n\n\nSample Input 21 10\n\n\n\n\n\nSample Output 210\n\nSince there is only one ball, we can use any of the ten colors to paint it. Thus, the answer is ten."}
{"id": "p03964", "problem": "Score : 300 points\n\n\nProblem StatementAtCoDeer the deer is seeing a quick report of election results on TV.\nTwo candidates are standing for the election: Takahashi and Aoki.\nThe report shows the ratio of the current numbers of votes the two candidates have obtained, but not the actual numbers of votes.\nAtCoDeer has checked the report N times, and when he checked it for the i-th (1\u2266i\u2266N) time, the ratio was T_i:A_i.\nIt is known that each candidate had at least one vote when he checked the report for the first time.\nFind the minimum possible total number of votes obtained by the two candidates when he checked the report for the N-th time.\nIt can be assumed that the number of votes obtained by each candidate never decreases.\n\n\n\n\nConstraints\n1\u2266N\u22661000\n1\u2266T_i,A_i\u22661000 (1\u2266i\u2266N)\nT_i and A_i (1\u2266i\u2266N) are coprime.\nIt is guaranteed that the correct answer is at most 10^{18}.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nT_1 A_1\nT_2 A_2\n:\nT_N A_N\n\n\n\n\n\nOutputPrint the minimum possible total number of votes obtained by Takahashi and Aoki when AtCoDeer checked the report for the N-th time.\n\n\n\n\n\n\nSample Input 13\n2 3\n1 1\n3 2\n\n\n\n\n\nSample Output 110\n\nWhen the numbers of votes obtained by the two candidates change as 2,3 \u2192 3,3 \u2192 6,4, the total number of votes at the end is 10, which is the minimum possible number.\n\n\n\n\n\nSample Input 24\n1 1\n1 1\n1 5\n1 100\n\n\n\n\n\nSample Output 2101\n\nIt is possible that neither candidate obtained a vote between the moment when he checked the report, and the moment when he checked it for the next time.\n\n\n\n\n\nSample Input 35\n3 10\n48 17\n31 199\n231 23\n3 2\n\n\n\n\n\nSample Output 36930"}
{"id": "p03965", "problem": "Score : 300 points\n\n\nProblem StatementAtCoDeer the deer and his friend TopCoDeer is playing a game.\nThe game consists of N turns.\nIn each turn, each player plays one of the two gestures, Rock and Paper, as in Rock-paper-scissors, under the following condition:\n(\u203b) After each turn, (the number of times the player has played Paper)\u2266(the number of times the player has played Rock).\nEach player's score is calculated by (the number of turns where the player wins) - (the number of turns where the player loses), where the outcome of each turn is determined by the rules of Rock-paper-scissors.\n(For those who are not familiar with Rock-paper-scissors: If one player plays Rock and the other plays Paper, the latter player will win and the former player will lose. If both players play the same gesture, the round is a tie and neither player will win nor lose.)\nWith his supernatural power, AtCoDeer was able to foresee the gesture that TopCoDeer will play in each of the N turns, before the game starts.\nPlan AtCoDeer's gesture in each turn to maximize AtCoDeer's score.\nThe gesture that TopCoDeer will play in each turn is given by a string s. If the i-th (1\u2266i\u2266N) character in s is g, TopCoDeer will play Rock in the i-th turn. Similarly, if the i-th (1\u2266i\u2266N) character of s in p, TopCoDeer will play Paper in the i-th turn.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\nN=|s|\nEach character in s is g or p.\nThe gestures represented by s satisfy the condition (\u203b).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the AtCoDeer's maximum possible score.\n\n\n\n\n\n\nSample Input 1gpg\n\n\n\n\n\nSample Output 10\n\nPlaying the same gesture as the opponent in each turn results in the score of 0, which is the maximum possible score.\n\n\n\n\n\nSample Input 2ggppgggpgg\n\n\n\n\n\nSample Output 22\n\nFor example, consider playing gestures in the following order: Rock, Paper, Rock, Paper, Rock, Rock, Paper, Paper, Rock, Paper. This strategy earns three victories and suffers one defeat, resulting in the score of 2, which is the maximum possible score."}
{"id": "p03966", "problem": "Score : 300 points\n\n\nProblem StatementAtCoDeer the deer is seeing a quick report of election results on TV.\nTwo candidates are standing for the election: Takahashi and Aoki.\nThe report shows the ratio of the current numbers of votes the two candidates have obtained, but not the actual numbers of votes.\nAtCoDeer has checked the report N times, and when he checked it for the i-th (1\u2266i\u2266N) time, the ratio was T_i:A_i.\nIt is known that each candidate had at least one vote when he checked the report for the first time.\nFind the minimum possible total number of votes obtained by the two candidates when he checked the report for the N-th time.\nIt can be assumed that the number of votes obtained by each candidate never decreases.\n\n\n\n\nConstraints\n1\u2266N\u22661000\n1\u2266T_i,A_i\u22661000 (1\u2266i\u2266N)\nT_i and A_i (1\u2266i\u2266N) are coprime.\nIt is guaranteed that the correct answer is at most 10^{18}.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nT_1 A_1\nT_2 A_2\n:\nT_N A_N\n\n\n\n\n\nOutputPrint the minimum possible total number of votes obtained by Takahashi and Aoki when AtCoDeer checked the report for the N-th time.\n\n\n\n\n\n\nSample Input 13\n2 3\n1 1\n3 2\n\n\n\n\n\nSample Output 110\n\nWhen the numbers of votes obtained by the two candidates change as 2,3 \u2192 3,3 \u2192 6,4, the total number of votes at the end is 10, which is the minimum possible number.\n\n\n\n\n\nSample Input 24\n1 1\n1 1\n1 5\n1 100\n\n\n\n\n\nSample Output 2101\n\nIt is possible that neither candidate obtained a vote between the moment when he checked the report, and the moment when he checked it for the next time.\n\n\n\n\n\nSample Input 35\n3 10\n48 17\n31 199\n231 23\n3 2\n\n\n\n\n\nSample Output 36930"}
{"id": "p03967", "problem": "Score : 300 points\n\n\nProblem StatementAtCoDeer the deer and his friend TopCoDeer is playing a game.\nThe game consists of N turns.\nIn each turn, each player plays one of the two gestures, Rock and Paper, as in Rock-paper-scissors, under the following condition:\n(\u203b) After each turn, (the number of times the player has played Paper)\u2266(the number of times the player has played Rock).\nEach player's score is calculated by (the number of turns where the player wins) - (the number of turns where the player loses), where the outcome of each turn is determined by the rules of Rock-paper-scissors.\n(For those who are not familiar with Rock-paper-scissors: If one player plays Rock and the other plays Paper, the latter player will win and the former player will lose. If both players play the same gesture, the round is a tie and neither player will win nor lose.)\nWith his supernatural power, AtCoDeer was able to foresee the gesture that TopCoDeer will play in each of the N turns, before the game starts.\nPlan AtCoDeer's gesture in each turn to maximize AtCoDeer's score.\nThe gesture that TopCoDeer will play in each turn is given by a string s. If the i-th (1\u2266i\u2266N) character in s is g, TopCoDeer will play Rock in the i-th turn. Similarly, if the i-th (1\u2266i\u2266N) character of s in p, TopCoDeer will play Paper in the i-th turn.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\nN=|s|\nEach character in s is g or p.\nThe gestures represented by s satisfy the condition (\u203b).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the AtCoDeer's maximum possible score.\n\n\n\n\n\n\nSample Input 1gpg\n\n\n\n\n\nSample Output 10\n\nPlaying the same gesture as the opponent in each turn results in the score of 0, which is the maximum possible score.\n\n\n\n\n\nSample Input 2ggppgggpgg\n\n\n\n\n\nSample Output 22\n\nFor example, consider playing gestures in the following order: Rock, Paper, Rock, Paper, Rock, Rock, Paper, Paper, Rock, Paper. This strategy earns three victories and suffers one defeat, resulting in the score of 2, which is the maximum possible score."}
{"id": "p03968", "problem": "Score : 900 points\n\n\nProblem StatementAtCoDeer the deer has N square tiles. The tiles are numbered 1 through N, and the number given to each tile is written on one side of the tile. Also, each corner of each tile is painted in one of the 1000 colors, which are represented by the integers 0 between 999. The top-left, top-right, bottom-right and bottom-left corner of the tile with the number i are painted in color C_{i,0}, C_{i,1}, C_{i,2} and C_{i,3}, respectively, when seen in the direction of the number written on the tile (See Figure 1).\n\n\nFigure 1: The correspondence between the colors of a tile and the input\n\nAtCoDeer is constructing a cube using six of these tiles, under the following conditions:\n\nFor each tile, the side with the number must face outward.\nFor each vertex of the cube, the three corners of the tiles that forms it must all be painted in the same color.\n\nHelp him by finding the number of the different cubes that can be constructed under the conditions.\nSince each tile has a number written on it, two cubes are considered different if the set of the used tiles are different, or the tiles are used in different directions, even if the formation of the colors are the same. (Each tile can be used in one of the four directions, obtained by 90\u00b0 rotations.) Two cubes are considered the same only if rotating one in the three dimensional space can obtain an exact copy of the other, including the directions of the tiles.\n\n\nFigure 2: The four directions of a tile\n\n\n\n\n\nConstraints\n6\u2266N\u2266400\n0\u2266C_{i,j}\u2266999 (1\u2266i\u2266N , 0\u2266j\u22663)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nC_{1,0} C_{1,1} C_{1,2} C_{1,3}\nC_{2,0} C_{2,1} C_{2,2} C_{2,3}\n:\nC_{N,0} C_{N,1} C_{N,2} C_{N,3}\n\n\n\n\n\nOutputPrint the number of the different cubes that can be constructed under the conditions.\n\n\n\n\n\n\nSample Input 16\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\n\n\n\n\n\nSample Output 11\n\nThe cube below can be constructed.\n\n\n\n\n\n\nSample Input 28\n0 0 0 0\n0 0 1 1\n0 1 0 1\n0 1 1 0\n1 0 0 1\n1 0 1 0\n1 1 0 0\n1 1 1 1\n\n\n\n\n\nSample Output 2144\n\n\n\n\n\n\nSample Input 36\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\n\n\n\n\nSample Output 3122880"}
{"id": "p03969", "problem": "Score : 1300 points\n\n\nProblem StatementOne day, AtCoDeer the deer found a simple graph (that is, a graph without self-loops and multiple edges) with N vertices and M edges, and brought it home.\nThe vertices are numbered 1 through N and mutually distinguishable, and the edges are represented by (a_i,b_i) (1\u2266i\u2266M).\nHe is painting each edge in the graph in one of the K colors of his paint cans. As he has enough supply of paint, the same color can be used to paint more than one edge.\nThe graph is made of a special material, and has a strange property. He can choose a simple cycle (that is, a cycle with no repeated vertex), and perform a circular shift of the colors along the chosen cycle. More formally, let e_1, e_2, ..., e_a be the edges along a cycle in order, then he can perform the following simultaneously: paint e_2 in the current color of e_1, paint e_3 in the current color of e_2, ..., paint e_a in the current color of e_{a-1}, and paint e_1 in the current color of e_{a}.\n\n\nFigure 1: An example of a circular shift\n\nTwo ways to paint the edges, A and B, are considered the same if A can be transformed into B by performing a finite number of circular shifts. Find the number of ways to paint the edges. Since this number can be extremely large, print the answer modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2266N\u226650\n1\u2266M\u2266100\n1\u2266K\u2266100\n1\u2266a_i,b_i\u2266N (1\u2266i\u2266M)\nThe graph has neither self-loops nor multiple edges.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M K\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\n\n\n\nOutputPrint the number of ways to paint the edges, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 14 4 2\n1 2\n2 3\n3 1\n3 4\n\n\n\n\n\nSample Output 18\n\n\n\n\n\n\nSample Input 25 2 3\n1 2\n4 5\n\n\n\n\n\nSample Output 29\n\n\n\n\n\n\nSample Input 311 12 48\n3 1\n8 2\n4 9\n5 4\n1 6\n2 9\n8 3\n10 8\n4 10\n8 6\n11 7\n1 8\n\n\n\n\n\nSample Output 3569519295"}
{"id": "p03970", "problem": "Score : 100 points\n\n\nProblem StatementCODE FESTIVAL 2016 is going to be held. For the occasion, Mr. Takahashi decided to make a signboard.\nHe intended to write CODEFESTIVAL2016 on it, but he mistakenly wrote a different string S. Fortunately, the string he wrote was the correct length.\nSo Mr. Takahashi decided to perform an operation that replaces a certain character with another in the minimum number of iterations, changing the string to CODEFESTIVAL2016.\nFind the minimum number of iterations for the rewrite operation.\n\n\n\n\nConstraints\nS is 16 characters long.\nS consists of uppercase and lowercase alphabet letters and numerals.\n\n\n\n\n\n\n\nInputInputs are provided from Standard Input in the following form.\nS\n\n\n\n\n\nOutputOutput an integer representing the minimum number of iterations needed for the rewrite operation.\n\n\n\n\n\n\nSample Input 1C0DEFESTIVAL2O16\n\n\n\n\n\nSample Output 12\n\nThe second character 0 must be changed to O and the 14th character O changed to 0.\n\n\n\n\n\nSample Input 2FESTIVAL2016CODE\n\n\n\n\n\nSample Output 216"}
{"id": "p03971", "problem": "Score : 200 points\n\n\nProblem StatementThere are N participants in the CODE FESTIVAL 2016 Qualification contests. The participants are either students in Japan, students from overseas, or neither of these.\nOnly Japanese students or overseas students can pass the Qualification contests. The students pass when they satisfy the conditions listed below, from the top rank down. Participants who are not students cannot pass the Qualification contests.\n\nA Japanese student passes the Qualification contests if the number of the participants who have already definitively passed is currently fewer than A+B.\nAn overseas student passes the Qualification contests if the number of the participants who have already definitively passed is currently fewer than A+B and the student ranks B-th or above among all overseas students.\n\nA string S is assigned indicating attributes of all participants. If the i-th character of string S is a, this means the participant ranked i-th in the Qualification contests is a Japanese student; b means the participant ranked i-th is an overseas student; and c means the participant ranked i-th is neither of these.\nWrite a program that outputs for all the participants in descending rank either Yes if they passed the Qualification contests or No if they did not pass.\n\n\n\n\nConstraints\n1\u2266N,A,B\u2266100000\nA+B\u2266N\nS is N characters long.\nS consists only of the letters a, b and c.\n\n\n\n\n\n\n\nInputInputs are provided from Standard Input in the following form.\nN A B\nS\n\n\n\n\n\nOutputOutput N lines. On the i-th line, output Yes if the i-th participant passed the Qualification contests or No if that participant did not pass.\n\n\n\n\n\n\nSample Input 110 2 3\nabccabaabb\n\n\n\n\n\nSample Output 1Yes\nYes\nNo\nNo\nYes\nYes\nYes\nNo\nNo\nNo\n\nThe first, second, fifth, sixth, and seventh participants pass the Qualification contests.\n\n\n\n\n\nSample Input 212 5 2\ncabbabaacaba\n\n\n\n\n\nSample Output 2No\nYes\nYes\nYes\nYes\nNo\nYes\nYes\nNo\nYes\nNo\nNo\n\nThe sixth participant is third among overseas students and thus does not pass the Qualification contests.\n\n\n\n\n\nSample Input 35 2 2\nccccc\n\n\n\n\n\nSample Output 3No\nNo\nNo\nNo\nNo"}
{"id": "p03972", "problem": "Score : 500 points\n\n\nProblem StatementOn an xy plane, in an area satisfying 0 \u2264 x \u2264 W, 0 \u2264 y \u2264 H, there is one house at each and every point where both x and y are integers.\nThere are unpaved roads between every pair of points for which either the x coordinates are equal and the difference between the y coordinates is 1, or the y coordinates are equal and the difference between the x coordinates is 1.\nThe cost of paving a road between houses on coordinates (i,j) and (i+1,j) is p_i for any value of j, while the cost of paving a road between houses on coordinates (i,j) and (i,j+1) is q_j for any value of i.\nMr. Takahashi wants to pave some of these roads and be able to travel between any two houses on paved roads only. Find the solution with the minimum total cost.\n\n\n\n\nConstraints\n1 \u2266 W,H \u2266 10^5\n1 \u2266 p_i \u2266 10^8(0 \u2266 i \u2266 W-1)\n1 \u2266 q_j \u2266 10^8(0 \u2266 j \u2266 H-1)\np_i (0 \u2266 i \u2266 W\u22121) is an integer.\nq_j (0 \u2266 j \u2266 H\u22121) is an integer.\n\n\n\n\n\n\n\nInputInputs are provided from Standard Input in the following form.\nW H\np_0\n:\np_{W-1}\nq_0\n:\nq_{H-1}\n\n\n\n\n\nOutputOutput an integer representing the minimum total cost.\n\n\n\n\n\n\nSample Input 12 2\n3\n5\n2\n7\n\n\n\n\n\nSample Output 129\n\nIt is enough to pave the following eight roads.\n\nRoad connecting houses at (0,0) and (0,1)\nRoad connecting houses at (0,1) and (1,1)\nRoad connecting houses at (0,2) and (1,2)\nRoad connecting houses at (1,0) and (1,1)\nRoad connecting houses at (1,0) and (2,0)\nRoad connecting houses at (1,1) and (1,2)\nRoad connecting houses at (1,2) and (2,2)\nRoad connecting houses at (2,0) and (2,1)\n\n\n\n\n\n\nSample Input 24 3\n2\n4\n8\n1\n2\n9\n3\n\n\n\n\n\nSample Output 260"}
{"id": "p03973", "problem": "Score : 700 points\n\n\nProblem StatementN people are waiting in a single line in front of the Takahashi Store. The cash on hand of the i-th person from the front of the line is a positive integer A_i.\nMr. Takahashi, the shop owner, has decided on the following scheme: He picks a product, sets a positive integer P indicating its price, and shows this product to customers in order, starting from the front of the line. This step is repeated as described below.\nAt each step, when a product is shown to a customer, if price P is equal to or less than the cash held by that customer at the time, the customer buys the product and Mr. Takahashi ends the current step. That is, the cash held by the first customer in line with cash equal to or greater than P decreases by P, and the next step begins.\nMr. Takahashi can set the value of positive integer P independently at each step.\nHe would like to sell as many products as possible. However, if a customer were to end up with 0 cash on hand after a purchase, that person would not have the fare to go home. Customers not being able to go home would be a problem for Mr. Takahashi, so he does not want anyone to end up with 0 cash.\nHelp out Mr. Takahashi by writing a program that determines the maximum number of products he can sell, when the initial cash in possession of each customer is given.\n\n\n\n\nConstraints\n1 \u2266 | N | \u2266 100000\n1 \u2266 A_i \u2266 10^9(1 \u2266 i \u2266 N)\nAll inputs are integers.\n\n\n\n\n\n\n\nInputInputs are provided from Standard Inputs in the following form.\nN\nA_1\n:\nA_N\n\n\n\n\n\nOutputOutput an integer representing the maximum number of products Mr. Takahashi can sell.\n\n\n\n\n\n\nSample Input 13\n3\n2\n5\n\n\n\n\n\nSample Output 13\n\nAs values of P, select in order 1, 4, 1.\n\n\n\n\n\nSample Input 215\n3\n1\n4\n1\n5\n9\n2\n6\n5\n3\n5\n8\n9\n7\n9\n\n\n\n\n\nSample Output 218"}
{"id": "p03974", "problem": "Score : 1100 points\n\n\nProblem StatementThere are N strings of lowercase alphabet only. The i-th string is S_i. Every string is unique.\nProvide answers for the Q queries below. The i-th query has the following format:\nQuery: An integer k_i and a string p_{i,1}p_{i,2}...p_{i,26} that results from permuting {a,b,...,z} are given. Output the sequence of the string S_{k_i} among the N strings in lexicographical order when the literal sequence is p_{i,1}<p_{i,2}<...<p_{i,26}.\n\n\n\n\nConstraints\n1 \u2266 N,Q \u2266 100000\n1 \u2266 |S_i| (1 \u2266 i \u2266 N)\nS_i (1 \u2266 i \u2266 N) is a string of lowercase alphabet.\nThe sum of |S_i| is no more than 400000.\nEvery S_i is unique.\n1 \u2266 k_i \u2266 N (1 \u2266 i \u2266 Q)\nFor all 1 \u2266 i \u2266 Q, p_{i,1}p_{i,2}...p_{i,26} is a permutation of abcd...z.\n\n\n\n\n\n\n\nInputInputs are provided from standard inputs in the following form.\nN\nS_1\n:\nS_N\nQ\nk_1 p_{1,1}p_{1,2}...p_{1,26}\n:\nk_Q p_{Q,1}p_{Q,2}...p_{Q,26}\n\n\n\n\n\nOutputOutput Q lines.\nOn line i, for the i-th query, output an integer indicating the sequence of the string S_{k_i} among the N strings in lexicographical order.\n\n\n\n\n\n\nSample Input 15\naa\nabbaa\nabbba\naaab\naaaaaba\n5\n1 abcdefghijklmnopqrstuvwxyz\n2 bacdefghijklmnopqrstuvwxyz\n3 abcdefghijklmnopqrstuvwxyz\n4 bacdefghijklmnopqrstuvwxyz\n5 abcdefghijklmnopqrstuvwxyz\n\n\n\n\n\nSample Output 11\n2\n5\n4\n2\n\nWhen the literal sequence is a < b, sorting the input strings in lexicographical order yields aa, aaaaaba, aaab, abbaa, abbba. The answers to queries 1, 3, and 5 are thus 1, 5, and 2, respectively.\nWhen the literal sequence is b < a, sorting the input strings in lexicographical order yields abbba, abbaa, aa, aaab, aaaaaba. The answers to queries 2 and 4 are thus 2 and 4, respectively.\n\n\n\n\n\nSample Input 28\nabrakatabra\nabadaba\nabracadabra\natcoder\ngrand\ncontest\nababa\na\n6\n3 abcdefghijklmnopqrstuvwxyz\n6 qwertyuiopasdfghjklzxcvbnm\n8 poiuytrewqlkjhgfdsamnbvcxz\n2 qazwsxedcrfvtgbyhnujmikolp\n1 plokmijnuhbygvtfcrdxeszwaq\n4 mnbvcxzasdfghjklpoiuytrewq\n\n\n\n\n\nSample Output 24\n8\n2\n3\n4\n7"}
{"id": "p03975", "problem": "Score : 66 points\n\n\nProblem Statement\n\n  Summer vacation ended at last and the second semester has begun.\n  You, a Kyoto University student, came to university and heard a rumor that somebody will barricade the entrance of your classroom.\n  The barricade will be built just before the start of the A-th class and removed by Kyoto University students just before the start of the B-th class.\n  All the classes conducted when the barricade is blocking the entrance will be cancelled and you will not be able to attend them.\n  Today you take N classes and class i is conducted in the t_i-th period.\n  You take at most one class in each period.\n  Find the number of classes you can attend.\n\n\n\n\n\nConstraints\n\n1 \\leq N \\leq 1000\n1 \\leq A < B \\leq 10^9 \n1 \\leq t_i \\leq 10^9\nAll t_i values are distinct.\n\n\n\n\n\n\n\nInput\nN, A and B are given on the first line and t_i is given on the (i+1)-th line. \n\nN A B\nt1\n:\ntN\n\n\n\n\n\nOutput\nPrint the number of classes you can attend. \n\n\n\n\n\n\nSample Input 1\n\n5 5 9\n4\n3\n6\n9\n1\n\n\n\n\n\nSample Output 1\n\n4\n\nYou can not only attend the third class. \n\n\n\n\nSample Input 2\n\n5 4 9\n5\n6\n7\n8\n9\n\n\n\n\n\nSample Output 2\n\n1\n\nYou can only attend the fifth class. \n\n\n\n\nSample Input 3\n\n4 3 6\n9\n6\n8\n1\n\n\n\n\n\nSample Output 3\n\n4\n\nYou can attend all the classes. \n\n\n\n\nSample Input 4\n\n2 1 2\n1\n2\n\n\n\n\n\nSample Output 4\n\n1\n\nYou can not attend the first class, but can attend the second."}
{"id": "p03976", "problem": "Score : 100 points\n\n\nProblem Statement\n\n\n\t\t                Kyoto University Programming Contest is a programming contest voluntarily held by some Kyoto University students.\n\t\t                This contest is abbreviated as Kyoto University Programming Contest and called KUPC.\n                    \n\n\t\t                source: Kyoto University Programming Contest Information\n\n\n\n\t\t            The problem-preparing committee met to hold this year's KUPC and N problems were proposed there.\n\t\t            The problems are numbered from 1 to N and the name of i-th problem is P_i.\n\t\t            However, since they proposed too many problems, they decided to divide them into some sets for several contests.\n                \n\n\t\t            They decided to divide this year's KUPC into several KUPCs by dividing problems under the following conditions.\n                    \n One KUPC provides K problems. \n Each problem appears at most once among all the KUPCs. \n All the first letters of the problem names in one KUPC must be different. \n\n\n\n\t\t            You, one of the committee members, want to hold as many KUPCs as possible.\n\t\t            Write a program to find the maximum number of KUPCs that can be held this year.\n                \nConstraints\n\n 1 \\leq N \\leq 10^4\n 1 \\leq K \\leq 26\n 1 \\leq |P_i| \\leq 10\n All characters in P_i are capital letters.\n\n\n\t\t            Note that, for each i and j (1 \\leq i < j \\leq N),\n                    P_i \\neq P_j are not necessarily satisfied.\n                \n\n\n\n\n\n\nInput\nThe input is given from Standard Input in the following format:\n\nN K\nP_1\n:\nP_N\n\n\n\n\n\nOutput\n\n\t\t                Print the maximum number of KUPCs that can be held on one line.\n                    \n\n\n\n\n\n\nSample Input 1\n\n9 3\nAPPLE\nANT\nATCODER\nBLOCK\nBULL\nBOSS\nCAT\nDOG\nEGG\n\nFor example, three KUPCs can be held by dividing the problems as follows. \n\n First: APPLE, BLOCK, CAT\n Second: ANT, BULL, DOG\n Third: ATCODER, BOSS, EGG\n\n\n\n\n\nSample Output 1\n\n3\n\n\n\n\n\nSample Input 2\n\n3 2\nKU\nKYOUDAI\nKYOTOUNIV\n\n\n\n\n\nSample Output 2\n\n0\n\nNo KUPC can be held."}
{"id": "p03977", "problem": "Score : 100 points\n\nProblem Statement\nA professor invented Cookie Breeding Machine for his students who like cookies very much. \nWhen one cookie with the taste of x is put into the machine and a non-negative integer y less than or equal to 127 is input on the machine,\n        it consumes the cookie and generates two cookies with the taste of y and (x XOR y). \nHere, XOR represents Bitwise Exclusive OR. \nAt first, there is only one cookie and the taste of it is D . \nFind the maximum value of the sum of the taste of the exactly N cookies generated after the following operation is conducted N-1 times. \n\nPut one of the cookies into the machine. \nInput a non-negative integer less than or equal to 127 on the machine. \n\n\n\nConstraints\n\n1 \\leq T \\leq 1000\n1 \\leq N_t \\leq 1000 (1 \\leq t \\leq T)\n1 \\leq D_t \\leq 127 (1 \\leq t \\leq T)\n\n\n\n\n\nInput\nThe input is given from Standard Input in the following format:\n\nT\nN_1 D_1\n:\nN_T D_T\n\n\n            The input consists of multiple test cases. An Integer T that represents the number of test cases is given on line 1. \n            Each test case is given on the next T lines. \n            In the t-th test case ( 1 \\leq t \\leq T ),\n            N_t that represents the number of cookies generated through the operations and D_t that represents the taste of the initial cookie are given separated by space. \n\n\n\nOutput\nFor each test case, print the maximum value of the sum of the taste of the N cookies generated through the operations on one line. \n\n\n\n\nSample Input 1\n\n3\n3 1\n4 108\n1 10\n\n\n\nSample Output 1\n\n255\n400\n10\n\n\n        On the 1st test case, if the machine is used as follows, three cookies with the taste of 61, 95 and 99 are generated.\n        Since the sum of these values is maximum among all possible ways, the answer is 255.\n        \nPut the cookie with the taste of 1 and input an integer 60 on the machine, lose the cookie and get two cookies with the taste of 60 and 61. \nPut the cookie with the taste of 60 and input an integer 99 on the machine, lose the cookie and get two cookies with the taste of 99 and 95. \n\n\n\n        On the 3rd test case, the machine may not be used."}
{"id": "p03978", "problem": "Score : 150 points\n\n\nProblem Statement\n\n  There is a long blackboard with 2 rows and N columns in a classroom of Kyoto University. \n  This blackboard is so long that it is impossible to tell which cells are already used and which unused. \n\n\n  Recently, a blackboard retrieval device was installed at the classroom. \n  To use this device, you type a search query that forms a rectangle with 2 rows and any length of columns, where each cell is used or unused. \n  When you input a query, the decive answers whether the rectangle that corresponds to the query exists in the blackboard. \n  Here, for a rectangle that corresponds to a search query, if two integer i, j ( i < j ) exist\n  and the rectangle equals to the partial blackboard between column i and j ,\n  the rectangle is called a sub-blackboard of the blackboard. \n\n\n  You are currently preparing for a presentation at this classroom.\n  To make the presentation go well, you decided to write a program to detect the status of the whole blackboard using the retrieval device. \n  Since it takes time to use the device, you want to use it as few times as possible. \n\n\n  The status of the whole blackboard is already determined at the beginning and does not change while you are using the device. \n\n\n\n\n\n\n\nInput\nThe first input is given in the following format:\n\nN\n\n N (1 \\leq N \\leq 100) is an integer that represents the length of the blackboard. \n\n  After this input value, your program must print search queries. \n  A search query has the following format. \n\n\ns_1\ns_2\n\n\n  Here, s_1 represents the upper part of the blackboard and s_2 represents the lower. \n  # in s_1 and s_2 represents the cell is already used and . represents the cell is still unused. \n  The lengths of s_1 and s_2 are arbitrary, but they must be the same. \n  Make sure to insert a line break at the end of the lines. \n\n\n  Every time your program prints a search query, a string that represents the search result of the device is returned in the followin format. \n\n\nr\n\n\nr is either T or F . \n  The meaning of each character is as follows. \n\n\n T represents that the sub-blackboard that corresponds to the search query exists in the blackboard. \n F represents that the sub-blackboard that corresponds to the search query does not exist in the blackboard. \n\n\n  If the search query equals to the whole blackboard or the number of the search queries exceeds the limit, string end is given instead of r .\n  Once you receive this string, exit your program immediately. \n  If your program prints the whole blackboard as a search query before exceedin the limit, it is judged as Accepted. Note that the search query that represents the whole blackboard is also counted as the number of search queries. \n\n\n\n\n\n  Note that the output needs to be flushed every time the output is printed. \n  For example, In C/C++, search query s1, s2 can be printed as follows. \n\nprintf(\"%s\\n%s\\n\", s1, s2); fflush(stdout);\n\n  Make sure your program receive all the input from the device. Otherwise, the result may be Time Limit Exceeded . \n\n\n\n\nQuery Limit\n\n  The maximun number of search queries is 420.\n  If the number of queries exceeds the limit, the result will be Query Limit Exceeded . \n\n\n\n\n\n\nSample Input and Output\nThe following is an example where N=3 and the blackboard is as follows. \n\n.#.\n...\n\nNote that your program does not know the state of the blackboard. \n\n\n  \n    Output of your program\n    Input to your program\n    Explanation\n  \n  \n    \n    3\n    The length of the blackboard is given\n  \n  \n    ..##\n    \n    Output a search query\n  \n  \n    \n    F\n    The sub-blackboard does not exist\n  \n  \n    ..\n    \n    Output a search query\n  \n  \n    \n    T\n    The sub-blackboard exists\n  \n  \n    ....\n    \n    Output a search query\n  \n  \n    \n    F\n    The sub-blackboard does not exist\n  \n  \n    .#..\n    \n    Output a search query\n  \n  \n    \n    T\n    The sub-blackboard exists\n  \n  \n    .#....\n    \n    Output a search query\n  \n  \n    \n    end\n    Exit your program because the above sub-blackboard equals to the whole blackboard."}
{"id": "p03979", "problem": "Score : 150 points\n\n\nProblem Statement\n\n  There are some goats on a grid with H rows and W columns. \n  Alice wants to put some fences at some cells where goats do not exist so that no goat can get outside the grid. \n  Goats can move in the four directions, that is, up, down, right and left.\n  Goats can not move onto the cells where fences are placed. \n  If a goat exists at one of the outermost cells in the grid, it can move outside.\n  Goats do not move until all fences are placed.  \n  Find the minimum number of fences to be placed. \n\n\n\n\n\nConstraints\n\n 1 \\leq H \\leq 100 \n 1 \\leq W \\leq 100 \n There is at least one goat on the given grid. \n\n\n\n\n\n\n\nInput\nThe input is given from the Standart Input in the following format:\n\nH W\nS_1\n:\nS_H\n\n\n  The j-th (1 \\leq j \\leq W) character in S_i (1 \\leq i \\leq H) represents \n  whether a goat exists at the cell located at row i and column j. \n  Character . represents there is no goat, and X represents there is one goat at the cell."}
{"id": "p03980", "problem": "Score : 150 points\n\n\n\n\nProblem Statement\n\n            Gorillas in Kyoto University are good at math.\n            They are currently trying to solve problems to find the value of an expression that contains two functions, _ , ^.\n            Each of these functions takes two input values. _ function returns the smaller of the two input values and ^ function returns the larger.\n            Gorillas know that integers in the expression are non-negative and less than or equal to 99,\n            but can not find out the length of the expression until they read a terminal symbol ? that represents the end of the expression. The number of characters included in each expression is less than or equal to 1000, but they do not even know this fact.\n            Ai, a smart gorilla, noticed that she may be able to know the value of the expression even if they don't read the whole expression.\n          \n\n            For example,\n          \nAssume you read the following sentence from the left.\n^(41,3)?\nWhen you read the sixth character, that is, when you read the following expression,\n^(41,3\nyou can tell the second input value of the funcion is whether 3 or an integer between 30 and 39, and the value turns out 41. \n\n            Since Ai wants to solve problems earlier than other gorillas, she decided to solve the problems such that she reads as fewer characters as possible from the left.\n            For each expression, Find the value of the expression and the minimum number of characters Ai needs to read to know the value.\n          \n\n\n\n\nConstraints\n\n1 \\leq Q \\leq 200\nThe number of characters each expression contains is less than or equal to 1000. \n\n\n\n\n\n\n\nInput\nThe input consists of multiple test cases and is given from Standard Input in the following format:\n\nQ\nstatement_1\n...\nstatement_Q\n\n\n\n\nEach statement_i (1 \\leq i \\leq Q) is given in the following BNF format.\n\n<statement> ::= <expression> ?\n<expression> ::= (^ | _)  ( <expression> , <expression> ) | <number> \n<number> :: = 0 | 1 | 2 | ... | 98 | 99\n\n\n\n\nOutput\n\n              Output consists of Q lines.\n              On line i (1 \\leq i \\leq Q), print the value of the expression and the number of character Ai needs to read for the test case i separated by space.\n            \n\n\n\n\n\n\nSample Input 1\n\n4\n_(4,51)?\n^(99,_(3,67))?\n_(0,87)?\n3?\n\n\n\n\n\nSample Output 1\n\n4 5\n99 4\n0 3\n3 2\n\n\nFor the first test case, when you read the fifth character, that is, when you read _(4,5, you will know the value is 4. \nFor the second test case, when you read the fourth character, that is, when you read ^(99, you will know the value is 99. \nFor the third test case, when you read the third character, that is, when you read _(0, you will know the value is 0. \nFor the fourth test case, you will not know the value is 3 untill you read the terminal symbol.\n\n\n\n\n\nSample Input 2\n\n7\n_(23,^(_(22,40),4))?\n_(0,99)?\n^(99,_(^(19,2),5))?\n_(^(43,20),^(30,29))?\n^(_(20,3),_(50,41))?\n^(_(20,3),_(3,41))?\n^(_(20,3),_(4,41))?\n\n\n\n\n\nSample Output 2\n\n22 18\n0 3\n99 4\n30 17\n41 17\n3 14\n4 15"}
{"id": "p03981", "problem": "Score : 200 points\n\n\nProblem Statement\n\n          You are going to take the entrance examination of Kyoto University tomorrow \n          and have decided to memorize a set of strings S that is expected to appear in the examination. \n          Since it is really tough to memorize S as it is, \n          you have decided to memorize a single string T that efficiently contains all the strings in S.\n        \n        You have already confirmed the following conditions for S and T are satisfied.\n        \nEvery string in S is a consecutive subsequence(1) in T . \nFor every pair of strings x, y (x \\neq y) in S , \n            x is not a subsequence(2) of y. \n\n Note that (1) is ''consecutive subsequence'', while (2) is ''subsequence''. \n\n          The next day, you opened the problem booklet at the examination \n          and found that you can get a full score only if you remember S. \n          However, You have forgot how to reconstruct S from T .\n          Since all you remember is that T satisfies the above conditions, \n          first you have decided to find the maximum possible number of elements in S . \n        \n\n\n\n\nConstraints\n\n1 \\leq |T| \\leq 10^5\nT consists of only lowercase letters. \n\nPartial points\n\n30 points will be awarded for passing the test set satisfying the condition: 1 \\leq |T| \\leq 50 .\nAnother 30 points will be awarded for passing the test set satisfying the condition: 1 \\leq |T| \\leq 10^3. \n\n\n\n\n\n\n\nInput\nThe input is given from Standard Input in the following format:\nT\nThe input only consists of T on one line. \n\n\n\n\nOutput\nPrint the maximum number of elements inS .\n\n\n\n\n\n\nSample Input 1\nabcabc\n\n\n\n\nSample Output 1\n3\n        In this case, ab\uff0cca and bc are an example of the optimum answers. \n      \n\n\n\nSample Input 2\nabracadabra\n\n\n\n\nSample Output 2\n7\n\n\n\n\nSample Input 3\nabcbabbcabbc\n\n\n\n\nSample Output 3\n8\n\n\n\n\nSample Input 4\nbbcacbcbcabbabacccbbcacbaaababbacabaaccbccabcaabba\n\n\n\n\nSample Output 4\n44"}
{"id": "p03982", "problem": "Score : 200 points\n\nProblem Statement\n\n            Kyoto University decided to build a straight wall on the west side of the university to protect against gorillas that attack the university from the west every night.\n            Since it is difficult to protect the university at some points along the wall where gorillas attack violently, reinforcement materials are also built at those points.\n            Although the number of the materials is limited, the state-of-the-art technology can make a prediction about the points where gorillas will attack next and the number of gorillas that will attack at each point.\n            The materials are moved along the wall everyday according to the prediction.\n            You, a smart student majoring in computer science, are called to find the way to move the materials more efficiently.\n        \n\n            Theare are N points where reinforcement materials can be build along the straight wall. They are numbered 1 through N.\n            Because of the protection against the last attack of gorillas, A_i materials are build at point i (1 \\leq i \\leq N).\n            For the next attack, the materials need to be rearranged such that at least B_i materials are built at point i (1 \\leq i \\leq N).\n            It costs |i - j| to move 1 material from point i to point j.\n            Find the minimum total cost required to satisfy the condition by moving materials.\n            You do not need to consider the attack after the next.\n        \n\n\nConstraints\n\n1 \\leq N \\leq 10^5\nA_i \\geq 1\nB_i \\geq 1\nA_1 + A_2 + ... + A_N \\leq 10^{12}\nB_1 + B_2 + ... + B_N \\leq A_1 + A_2 + ... + A_N\nThere is at least one way to satisfy the condition. \n\n\n\n\n\nInput\nThe input is given from Standard Input in the following format: \nN\nA_1 A_2 ... A_N\nB_1 B_2 ... B_N\n\n\nOutput\nPrint the minimum total cost required to satisfy the condition. \nPartial Scores\n\n30 points will be awarded for passing the test set satisfying the following:\n                \nN \\leq 100\nA_1 + A_2 + ... + A_N \\leq 400\n\n\n\n                Another 30 points will be awarded for passing the test set satisfying the following:\n                \nN \\leq 10^3\n\n\n\n                Another 140 points will be awarded for passing the test set without addtional constraints and you can get 200 points in total.\n            \n\n\n\n\nSample Input 1\n2\n1 5\n3 1\n\n\n\n\nSample Output 1\n2\nIt costs least to move 2 materials from point 2 to point 1. \n\n\nSample Input 2\n5\n1 2 3 4 5\n3 3 1 1 1\n\n\n\n\nSample Output 2\n6\n\n\nSample Input 3\n27\n46 3 4 2 10 2 5 2 6 7 20 13 9 49 3 8 4 3 19 9 3 5 4 13 9 5 7\n10 2 5 6 2 6 3 2 2 5 3 11 13 2 2 7 7 3 9 5 13 4 17 2 2 2 4\n\n\n\n\nSample Output 3\n48\nThe input of this test case satisfies both the first and second additional constraints. \n\n\nSample Input 4\n18\n3878348 423911 8031742 1035156 24256 10344593 19379 3867285 4481365 1475384 1959412 1383457 164869 4633165 6674637 9732852 10459147 2810788\n1236501 770807 4003004 131688 1965412 266841 3980782 565060 816313 192940 541896 250801 217586 3806049 1220252 1161079 31168 2008961\n\n\n\n\nSample Output 4\n6302172\nThe input of this test case satisfies the second additional constraint. \n\n\nSample Input 5\n2\n1 99999999999\n1234567891 1\n\n\n\n\nSample Output 5\n1234567890\nThe input and output values may exceed the range of 32-bit integer."}
{"id": "p03983", "problem": "Score : 300 points\n\n\nProblem Statement\n\n          Eli- 1 started a part-time job handing out leaflets for N seconds. \n          Eli- 1 wants to hand out as many leaflets as possible with her special ability, Cloning.  \n          Eli- gen can perform two kinds of actions below. \n\t\n\n Clone herself and generate Eli- (gen + 1) .  (one Eli- gen (cloning) and one Eli- (gen + 1) (cloned) exist as a result of Eli-gen 's cloning.)\n            This action takes gen \\times C ( C is a coefficient related to cloning. ) seconds. \n Hand out one leaflet. This action takes one second regardress of the generation ( =gen ). \n\n\n          They can not hand out leaflets while cloning. \n          Given N and C , find the maximum number of leaflets Eli- 1 and her clones can hand out in total modulo 1000000007 (= 10^9 + 7). \n\t\n\n\n\n\nConstraints\n\n 1 \\leq Q \\leq 100000 = 10^5 \n 1 \\leq N_q \\leq 100000 = 10^5 \n 1 \\leq C_q \\leq 20000 = 2 \\times 10^4 \n\n\n\n\n\n\n\nInput\nThe input is given from Standard Input in the following format: \n\nQ\nN_1 C_1\n:\nN_Q C_Q\n\nThe input consists of multiple test cases. On line 1 ,  Q that represents the number of test cases is given. \n            Each test case is given on the next Q lines.\n            For the test case q ( 1 \\leq q \\leq Q ) , N_q and \n            C_q are given separated by a single space. \n            N_q and C_q represent the working time and the coefficient related to cloning for test case q respectively. \n\t  \n\n\n\n\nOutput\n\n            For each test case, Print the maximum number of leaflets Eli- 1 and her clones can hand out modulo 1000000007 ( = 10^9 + 7 ). \n\t\n\n\n\nPartial Scores\n 30 points will be awarded for passing the test set satisfying the condition: Q = 1 . \nAnother 270 points will be awarded for passing the test set without addtional constraints and you can get 300 points in total. \n\n\n\n\n\n\nSample Input 1\n\n2\n20 8\n20 12\n\n\n\n\n\nSample Output 1\n\n24\n20\n\n For the first test case, while only 20 leaflets can be handed out without cloning,\n\t  24 leaflets can be handed out by cloning first and two people handing out12 leaflets each. \n For the second test case, since two people can only hand out 8 leaflets each if Eli- 1 clones, she should hand out 20 leaflets without cloning. \n\n\n\n\nSample Input 2\n\n1\n20 3\n\n\n\n\n\nSample Output 2\n\n67\n\nOne way of handing out 67 leaflets is like the following image. Each black line means cloning, and each red line means handing out. \n\n\n\n This case satisfies the constraint of the partial score. \n\n\n\n\nSample Input 3\n\n1\n200 1\n\n\n\n\n\nSample Output 3\n\n148322100\n\n Note that the value modulo 1000000007 ( 10^9 + 7 ) must be printed. \n This case satisfies the constraint of the partial score."}
{"id": "p03984", "problem": "Score : 300 points\n\n\nProblem Statement\n\nMikan's birthday is coming soon. Since Mikan likes graphs very much, Aroma decided to give her a undirected graph this year too. \n\n\nAroma bought a connected undirected graph, which consists of n vertices and n edges. \nThe vertices are numbered from 1 to n and for each i(1 \\leq i \\leq n), vertex i and vartex a_i are connected with an undirected edge. \nAroma thinks it is not interesting only to give the ready-made graph and decided to paint it. \nCount the number of ways to paint the vertices of the purchased graph in k colors modulo 10^9 + 7. \nTwo ways are considered to be the same if the graph painted in one way can be identical to the graph painted in the other way by permutating the numbers of the vertices. \n\n\n\n\n\nConstraints\n\n 1 \\leq n \\leq 10^5 \n 1 \\leq k \\leq 10^5 \n 1 \\leq a_i \\leq n (1 \\leq i \\leq n) \n The given graph is connected\n The given graph contains no self-loops or multiple edges.\n\n\n\n\n\n\n\nInput\nEach data set is given in the following format from the standard input.\n\nn k\na_1\n:\na_n\n\n\n\n\n\nOutput\nOutput the number of ways to paint the vertices of the given graph in k colors modulo 10^9 + 7 in one line. \n\n\n\n\n\n\nSample Input 1\n\n4 2\n2\n3\n1\n1\n\n\n\n\n\nSample Output 1\n\n12\n\n\n\n\n\nSample Input 2\n\n4 4\n2\n3\n4\n1\n\n\n\n\n\nSample Output 2\n\n55\n\n\n\n\n\nSample Input 3\n\n10 5\n2\n3\n4\n1\n1\n1\n2\n3\n3\n4\n\n\n\n\n\nSample Output 3\n\n926250"}
{"id": "p03985", "problem": "Score : 300 points\n\n\nStory\nI am a Summoner who can invoke monsters. I can embody the pictures of monsters drawn on sketchbooks. \nI recently have received a request from Primate Research Institute of Kyoto University to invoke \"Hundred Eyes Monster\". \nWhat an great honor it is to contribute to the prosperity of the primate research of Kyoto University!\nI decided to paint an extremely high-quarity monster to the best of my ability. \nI have already painted the forehead and mouth and this time I am going to paint as many eyes as possible between the forehead and mouth. \nWell...I cannot wait to see the complete painting. \n\nProblem Statement\n\nTwo circles A, B are given on a two-dimensional plane. \nThe coordinate of the center and radius of circle A is (x_A, y_A) and r_A respectively. \nThe coordinate of the center and radius of circle B is (x_B, y_B) and r_B respectively. \nThese two circles have no intersection inside. \nHere, we consider a set of circles S that satisfies the following conditions. \n\n\nEach circle in S touches both A and B, and does not have common points with them inside the circle. \nAny two different circles in S have no common points inside them.\n\n\nWrite a program that finds the maximum number of elements in S. \n\n\n\n\n\nConstraints\n\n1 \\leq T \\leq 50000\n-10^5 \\leq x_A \\leq 10^5\n-10^5 \\leq y_A \\leq 10^5\n-10^5 \\leq x_B \\leq 10^5\n-10^5 \\leq y_B \\leq 10^5\n1 \\leq r_A \\leq 10^5\n1 \\leq r_B \\leq 10^5\n{r_A}^2 + {r_B}^2 < (x_A - x_B)^2 + (y_A - y_B)^2\nAll values given as input are integers.\nIt is guaranteed that, when the radiuses of A and B change by 0.0005, the answer does not change.\n\n\n\n\n\n\n\nInput\nThe input consists of multiple test cases and is given from Standard Input in the following format:\n\nT\ntestcase_1\n:\ntestcase_T\n\nEach test case is given with the following format. \n\nx_A y_A r_A x_B y_B r_B\n\n\n\n\n\nOutput\n\nThe output consists of T lines. \nOn line i (1 \\leq i \\leq T), putput the maximum number of elements in S in i-th test case.\n\n\n\n\n\n\n\nSample Input 1\n\n4\n0 -3 2 0 3 2\n0 0 9 8 8 2\n0 0 9 10 10 5\n0 0 707 1000 1000 707\n\n\n\n\n\nSample Output 1\n\n3\n10\n21\n180\n\nYou can arrange circles ,for example, like the following images in Sample 1, 2."}
{"id": "p03986", "problem": "Score : 300 points\n\n\nProblem StatementWe have a string X, which has an even number of characters. Half the characters are S, and the other half are T.\nTakahashi, who hates the string ST, will perform the following operation 10^{10000} times:\n\nAmong the occurrences of ST in X as (contiguous) substrings, remove the leftmost one. If there is no occurrence, do nothing.\n\nFind the eventual length of X.\n\n\n\n\nConstraints\n2 \u2266 |X| \u2266 200,000\nThe length of X is even.\nHalf the characters in X are S, and the other half are T.\n\n\n\n\n\nPartial Scores\nIn test cases worth 200 points, |X| \u2266 200.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nX\n\n\n\n\n\nOutputPrint the eventual length of X.\n\n\n\n\n\n\nSample Input 1TSTTSS\n\n\n\n\n\nSample Output 14\n\nIn the 1-st operation, the 2-nd and 3-rd characters of TSTTSS are removed.\nX becomes TTSS, and since it does not contain ST anymore, nothing is done in the remaining 10^{10000}-1 operations.\nThus, the answer is 4.\n\n\n\n\n\nSample Input 2SSTTST\n\n\n\n\n\nSample Output 20\n\nX will eventually become an empty string: SSTTST \u21d2 STST \u21d2 ST \u21d2 ``.\n\n\n\n\n\nSample Input 3TSSTTTSS\n\n\n\n\n\nSample Output 34\n\nX will become: TSSTTTSS \u21d2 TSTTSS \u21d2 TTSS."}
{"id": "p03987", "problem": "Score : 400 points\n\n\nProblem StatementOne day, Snuke was given a permutation of length N, a_1, a_2, ..., a_N, from his friend.\nFind the following:\n\n\n\n\n\nConstraints\n1 \u2266 N \u2266 200,000\n(a_1, a_2, ..., a_N) is a permutation of (1, 2, ..., N).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the answer.\nNote that the answer may not fit into a 32-bit integer.\n\n\n\n\n\n\nSample Input 13\n2 1 3\n\n\n\n\n\nSample Output 19\n\n\n\n\n\n\nSample Input 24\n1 3 2 4\n\n\n\n\n\nSample Output 219\n\n\n\n\n\n\nSample Input 38\n5 4 8 1 2 6 7 3\n\n\n\n\n\nSample Output 385"}
{"id": "p03988", "problem": "Score : 700 points\n\n\nProblem StatementAoki loves numerical sequences and trees.\nOne day, Takahashi gave him an integer sequence of length N, a_1, a_2, ..., a_N, which made him want to construct a tree.\nAoki wants to construct a tree with N vertices numbered 1 through N, such that for each i = 1,2,...,N, the distance between vertex i and the farthest vertex from it is a_i, assuming that the length of each edge is 1.\nDetermine whether such a tree exists.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 100\n1 \u2266 a_i \u2266 N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputIf there exists a tree that satisfies the condition, print Possible. Otherwise, print Impossible.\n\n\n\n\n\n\nSample Input 15\n3 2 2 3 3\n\n\n\n\n\nSample Output 1Possible\n\n\nThe diagram above shows an example of a tree that satisfies the conditions. The red arrows show paths from each vertex to the farthest vertex from it.\n\n\n\n\n\nSample Input 23\n1 1 2\n\n\n\n\n\nSample Output 2Impossible\n\n\n\n\n\n\nSample Input 310\n1 2 2 2 2 2 2 2 2 2\n\n\n\n\n\nSample Output 3Possible\n\n\n\n\n\n\nSample Input 410\n1 1 2 2 2 2 2 2 2 2\n\n\n\n\n\nSample Output 4Impossible\n\n\n\n\n\n\nSample Input 56\n1 1 1 1 1 5\n\n\n\n\n\nSample Output 5Impossible\n\n\n\n\n\n\nSample Input 65\n4 3 2 3 4\n\n\n\n\n\nSample Output 6Possible"}
{"id": "p03989", "problem": "Score : 900 points\n\n\nProblem StatementSnuke loves permutations. He is making a permutation of length N.\nSince he hates the integer K, his permutation will satisfy the following:\n\nLet the permutation be a_1, a_2, ..., a_N. For each i = 1,2,...,N, |a_i - i| \\neq K.\n\nAmong the N! permutations of length N, how many satisfies this condition?\nSince the answer may be extremely large, find the answer modulo 924844033(prime).\n\n\n\n\nConstraints\n2 \u2266 N \u2266 2000\n1 \u2266 K \u2266 N-1\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the answer modulo 924844033.\n\n\n\n\n\n\nSample Input 13 1\n\n\n\n\n\nSample Output 12\n\n2 permutations (1, 2, 3), (3, 2, 1) satisfy the condition.\n\n\n\n\n\nSample Input 24 1\n\n\n\n\n\nSample Output 25\n\n5 permutations (1, 2, 3, 4), (1, 4, 3, 2), (3, 2, 1, 4), (3, 4, 1, 2), (4, 2, 3, 1) satisfy the condition.\n\n\n\n\n\nSample Input 34 2\n\n\n\n\n\nSample Output 39\n\n\n\n\n\n\nSample Input 44 3\n\n\n\n\n\nSample Output 414\n\n\n\n\n\n\nSample Input 5425 48\n\n\n\n\n\nSample Output 5756765083"}
{"id": "p03990", "problem": "Score : 1400 points\n\n\nProblem StatementSigma and Sugim are playing a game.\nThe game is played on a graph with N vertices numbered 1 through N. The graph has N-1 red edges and N-1 blue edges, and the N-1 edges in each color forms a tree. The red edges are represented by pairs of integers (a_i, b_i), and the blue edges are represented by pairs of integers (c_i, d_i).\nEach player has his own piece. Initially, Sigma's piece is at vertex X, and Sugim's piece is at vertex Y.\nThe game is played in turns, where turns are numbered starting from turn 1. Sigma takes turns 1, 3, 5, ..., and Sugim takes turns 2, 4, 6, ....\nIn each turn, the current player either moves his piece, or does nothing. Here, Sigma can only move his piece to a vertex that is directly connected to the current vertex by a red edge. Similarly, Sugim can only move his piece to a vertex that is directly connected to the current vertex by a blue edge.\nWhen the two pieces come to the same vertex, the game ends immediately. If the game ends just after the operation in turn i, let i be the total number of turns in the game.\nSigma's objective is to make the total number of turns as large as possible, while Sugim's objective is to make it as small as possible.\nDetermine whether the game will end in a finite number of turns, assuming both players plays optimally to achieve their respective objectives. If the answer is positive, find the number of turns in the game.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 200,000\n1 \u2266 X, Y \u2266 N\nX \\neq Y\n1 \u2266 a_i, b_i, c_i, d_i \u2266 N\nThe N-1 edges in each color (red and blue) forms a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN X Y\na_1 b_1\na_2 b_2\n:\na_{N-1} b_{N-1}\nc_1 d_1\nc_2 d_2\n:\nc_{N-1} d_{N-1}\n\n\n\n\n\nOutputIf the game will end in a finite number of turns, print the number of turns.\nOtherwise, print -1.\n\n\n\n\n\n\nSample Input 14 1 2\n1 2\n1 3\n1 4\n2 1\n2 3\n1 4\n\n\n\n\n\nSample Output 14\n\n\n\n\n\n\n\nSample Input 23 3 1\n1 2\n2 3\n1 2\n2 3\n\n\n\n\n\nSample Output 24\n\n\n\n\n\n\n\nSample Input 34 1 2\n1 2\n3 4\n2 4\n1 2\n3 4\n1 3\n\n\n\n\n\nSample Output 32\n\n\n\n\n\n\n\nSample Input 44 2 1\n1 2\n3 4\n2 4\n1 2\n3 4\n1 3\n\n\n\n\n\nSample Output 4-1\n\n\n\n\n\n\nSample Input 55 1 2\n1 2\n1 3\n1 4\n4 5\n2 1\n1 3\n1 5\n5 4\n\n\n\n\n\nSample Output 56"}
{"id": "p03991", "problem": "Score : 1900 points\n\n\nProblem Statement\nOne day, Takahashi was given the following problem from Aoki:\n\nYou are given a tree with N vertices and an integer K. The vertices are numbered 1 through N. The edges are represented by pairs of integers (a_i, b_i).\nFor a set S of vertices in the tree, let f(S) be the minimum number of the vertices in a subtree of the given tree that contains all vertices in S.\nThere are  ways to choose K vertices from the trees. For each of them, let S be the set of the chosen vertices, and find the sum of f(S) over all  ways.\nSince the answer may be extremely large, print it modulo 924844033(prime).\n\nSince it was too easy for him, he decided to solve this problem for all K = 1,2,...,N.\n\n\n\n\nConstraints\n2 \u2266 N \u2266 200,000\n1 \u2266 a_i, b_i \u2266 N\nThe given graph is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 b_1\na_2 b_2\n:\na_{N-1} b_{N-1}\n\n\n\n\n\nOutputPrint N lines. The i-th line should contain the answer to the problem where K=i, modulo 924844033.\n\n\n\n\n\n\nSample Input 13\n1 2\n2 3\n\n\n\n\n\nSample Output 13\n7\n3\n\n\nThe diagram above illustrates the case where K=2. The chosen vertices are colored pink, and the subtrees with the minimum number of vertices are enclosed by red lines.\n\n\n\n\n\nSample Input 24\n1 2\n1 3\n1 4\n\n\n\n\n\nSample Output 24\n15\n13\n4\n\n\n\n\n\n\nSample Input 37\n1 2\n2 3\n2 4\n4 5\n4 6\n6 7\n\n\n\n\n\nSample Output 37\n67\n150\n179\n122\n45\n7"}
{"id": "p03992", "problem": "Score : 100 points\n\n\nProblem StatementThis contest is CODE FESTIVAL.\nHowever, Mr. Takahashi always writes it CODEFESTIVAL, omitting the single space between CODE and FESTIVAL.\nSo he has decided to make a program that puts the single space he omitted.\nYou are given a string s with 12 letters.\nOutput the string putting a single space between the first 4 letters and last 8 letters in the string s.\n\n\n\n\nConstraints\ns contains exactly 12 letters.\nAll letters in s are uppercase English letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the string putting a single space between the first 4 letters and last 8 letters in the string s.\nPut a line break at the end.\n\n\n\n\n\n\nSample Input 1CODEFESTIVAL\n\n\n\n\n\nSample Output 1CODE FESTIVAL\n\nPutting a single space between the first 4 letters and last 8 letters in CODEFESTIVAL makes it CODE FESTIVAL.\n\n\n\n\n\nSample Input 2POSTGRADUATE\n\n\n\n\n\nSample Output 2POST GRADUATE\n\n\n\n\n\n\nSample Input 3ABCDEFGHIJKL\n\n\n\n\n\nSample Output 3ABCD EFGHIJKL"}
{"id": "p03993", "problem": "Score : 200 points\n\n\nProblem StatementThere are N rabbits, numbered 1 through N.\nThe i-th (1\u2264i\u2264N) rabbit likes rabbit a_i.\nNote that no rabbit can like itself, that is, a_i\u2260i.\nFor a pair of rabbits i and j (i\uff1cj), we call the pair (i\uff0cj) a friendly pair if the following condition is met.\n\nRabbit i likes rabbit j and rabbit j likes rabbit i.\n\nCalculate the number of the friendly pairs.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n1\u2264a_i\u2264N\na_i\u2260i\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the number of the friendly pairs.\n\n\n\n\n\n\nSample Input 14\n2 1 4 3\n\n\n\n\n\nSample Output 12\n\nThere are two friendly pairs: (1\uff0c2) and (3\uff0c4).\n\n\n\n\n\nSample Input 23\n2 3 1\n\n\n\n\n\nSample Output 20\n\nThere are no friendly pairs.\n\n\n\n\n\nSample Input 35\n5 5 5 5 1\n\n\n\n\n\nSample Output 31\n\nThere is one friendly pair: (1\uff0c5)."}
{"id": "p03994", "problem": "Score : 400 points\n\n\nProblem StatementMr. Takahashi has a string s consisting of lowercase English letters.\nHe repeats the following operation on s exactly K times.\n\nChoose an arbitrary letter on s and change that letter to the next alphabet. Note that the next letter of z is a.\n\nFor example, if you perform an operation for the second letter on aaz, aaz becomes abz.\nIf you then perform an operation for the third letter on abz, abz becomes aba.\nMr. Takahashi wants to have the lexicographically smallest string after performing exactly K operations on s.\nFind the such string.\n\n\n\n\nConstraints\n1\u2264|s|\u226410^5\nAll letters in s are lowercase English letters.\n1\u2264K\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\nK\n\n\n\n\n\nOutputPrint the lexicographically smallest string after performing exactly K operations on s.\n\n\n\n\n\n\nSample Input 1xyz\n4\n\n\n\n\n\nSample Output 1aya\n\nFor example, you can perform the following operations: xyz, yyz, zyz, ayz, aya.\n\n\n\n\n\nSample Input 2a\n25\n\n\n\n\n\nSample Output 2z\n\nYou have to perform exactly K operations.\n\n\n\n\n\nSample Input 3codefestival\n100\n\n\n\n\n\nSample Output 3aaaafeaaivap"}
{"id": "p03995", "problem": "Score : 800 points\n\n\nProblem StatementThere is a grid with R rows and C columns.\nWe call the cell in the r-th row and c-th column (r\uff0cc).\nMr. Takahashi wrote non-negative integers into N of the cells, that is, he wrote a non-negative integer a_i into (r_i\uff0cc_i) for each i (1\u2264i\u2264N).\nAfter that he fell asleep.\nMr. Aoki found the grid and tries to surprise Mr. Takahashi by writing integers into all remaining cells.\nThe grid must meet the following conditions to really surprise Mr. Takahashi.\n\nCondition 1: Each cell contains a non-negative integer.\nCondition 2: For any 2\u00d72 square formed by cells on the grid, the sum of the top left and bottom right integers must always equal to the sum of the top right and bottom left integers.\n\nDetermine whether it is possible to meet those conditions by properly writing integers into all remaining cells.\n\n\n\n\nConstraints\n2\u2264R\uff0cC\u226410^5\n1\u2264N\u226410^5\n1\u2264r_i\u2264R\n1\u2264c_i\u2264C\n(r_i\uff0cc_i) \u2260 (r_j\uff0cc_j) (i\u2260j)\na_i is an integer.\n0\u2264a_i\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nR C\nN\nr_1 c_1 a_1\nr_2 c_2 a_2\n:\nr_N c_N a_N\n\n\n\n\n\nOutputPrint Yes if it is possible to meet the conditions by properly writing integers into all remaining cells.\nOtherwise, print No.\n\n\n\n\n\n\nSample Input 12 2\n3\n1 1 0\n1 2 10\n2 1 20\n\n\n\n\n\nSample Output 1Yes\n\nYou can write integers as follows.\n\n\n\n\n\n\nSample Input 22 3\n5\n1 1 0\n1 2 10\n1 3 20\n2 1 30\n2 3 40\n\n\n\n\n\nSample Output 2No\n\nThere are two 2\u00d72 squares on the grid, formed by the following cells:\n\nCells (1\uff0c1), (1\uff0c2), (2\uff0c1) and (2\uff0c2)\nCells (1\uff0c2), (1\uff0c3), (2\uff0c2) and (2\uff0c3)\n\nYou have to write 40 into the empty cell to meet the condition on the left square, but then it does not satisfy the condition on the right square.\n\n\n\n\n\n\nSample Input 32 2\n3\n1 1 20\n1 2 10\n2 1 0\n\n\n\n\n\nSample Output 3No\n\nYou have to write -10 into the empty cell to meet condition 2, but then it does not satisfy condition 1.\n\n\n\n\n\n\nSample Input 43 3\n4\n1 1 0\n1 3 10\n3 1 10\n3 3 20\n\n\n\n\n\nSample Output 4Yes\n\nYou can write integers as follows.\n\n\n\n\n\n\nSample Input 52 2\n4\n1 1 0\n1 2 10\n2 1 30\n2 2 20\n\n\n\n\n\nSample Output 5No\n\nAll cells already contain a integer and condition 2 is not satisfied."}
{"id": "p03996", "problem": "Score : 1200 points\n\n\nProblem StatementThere are N arrays.\nThe length of each array is M and initially each array contains integers (1\uff0c2\uff0c...\uff0cM) in this order.\nMr. Takahashi has decided to perform Q operations on those N arrays.\nFor the i-th (1\u2264i\u2264Q) time, he performs the following operation.\n\nChoose an arbitrary array from the N arrays and move the integer a_i (1\u2264a_i\u2264M) to the front of that array. For example, after performing the operation on a_i=2 and the array (5\uff0c4\uff0c3\uff0c2\uff0c1), this array becomes (2\uff0c5\uff0c4\uff0c3\uff0c1).\n\nMr. Takahashi wants to make N arrays exactly the same after performing the Q operations.\nDetermine if it is possible or not.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n2\u2264M\u226410^5\n1\u2264Q\u226410^5\n1\u2264a_i\u2264M\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nQ\na_1 a_2 ... a_Q\n\n\n\n\n\nOutputPrint Yes if it is possible to make N arrays exactly the same after performing the Q operations.\nOtherwise, print No.\n\n\n\n\n\n\nSample Input 12 2\n3\n2 1 2\n\n\n\n\n\nSample Output 1Yes\n\nYou can perform the operations as follows.\n\n\n\n\n\n\nSample Input 23 2\n3\n2 1 2\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 32 3\n3\n3 2 1\n\n\n\n\n\nSample Output 3Yes\n\nYou can perform the operations as follows.\n\n\n\n\n\n\nSample Input 43 3\n6\n1 2 2 3 3 3\n\n\n\n\n\nSample Output 4No"}
{"id": "p03997", "problem": "Score : 100 points\n\n\nProblem StatementYou are given a trapezoid. The lengths of its upper base, lower base, and height are a, b, and h, respectively.\n\n\nAn example of a trapezoid\n\nFind the area of this trapezoid.\n\n\n\n\nConstraints\n1\u2266a\u2266100\n1\u2266b\u2266100\n1\u2266h\u2266100\nAll input values are integers.\nh is even.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na\nb\nh\n\n\n\n\n\nOutputPrint the area of the given trapezoid. It is guaranteed that the area is an integer.\n\n\n\n\n\n\nSample Input 13\n4\n2\n\n\n\n\n\nSample Output 17\n\nWhen the lengths of the upper base, lower base, and height are 3, 4, and 2, respectively, the area of the trapezoid is (3+4)\u00d72/2 = 7.\n\n\n\n\n\nSample Input 24\n4\n4\n\n\n\n\n\nSample Output 216\n\nIn this case, a parallelogram is given, which is also a trapezoid."}
{"id": "p03998", "problem": "Score : 200 points\n\n\nProblem StatementAlice, Bob and Charlie are playing Card Game for Three, as below:\n\nAt first, each of the three players has a deck consisting of some number of cards. Each card has a letter a, b or c written on it. The orders of the cards in the decks cannot be rearranged.\nThe players take turns. Alice goes first.\nIf the current player's deck contains at least one card, discard the top card in the deck. Then, the player whose name begins with the letter on the discarded card, takes the next turn. (For example, if the card says a, Alice takes the next turn.)\nIf the current player's deck is empty, the game ends and the current player wins the game.\n\nYou are given the initial decks of the players.\nMore specifically, you are given three strings S_A, S_B and S_C. The i-th (1\u2266i\u2266|S_A|) letter in S_A is the letter on the i-th card in Alice's initial deck. S_B and S_C describes Bob's and Charlie's initial decks in the same way.\nDetermine the winner of the game.\n\n\n\n\nConstraints\n1\u2266|S_A|\u2266100\n1\u2266|S_B|\u2266100\n1\u2266|S_C|\u2266100\nEach letter in S_A, S_B, S_C is a, b or c.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS_A\nS_B\nS_C\n\n\n\n\n\nOutputIf Alice will win, print A. If Bob will win, print B. If Charlie will win, print C.\n\n\n\n\n\n\nSample Input 1aca\naccc\nca\n\n\n\n\n\nSample Output 1A\n\nThe game will progress as below:\n\nAlice discards the top card in her deck, a. Alice takes the next turn.\nAlice discards the top card in her deck, c. Charlie takes the next turn.\nCharlie discards the top card in his deck, c. Charlie takes the next turn.\nCharlie discards the top card in his deck, a. Alice takes the next turn.\nAlice discards the top card in her deck, a. Alice takes the next turn.\nAlice's deck is empty. The game ends and Alice wins the game.\n\n\n\n\n\n\nSample Input 2abcb\naacb\nbccc\n\n\n\n\n\nSample Output 2C"}
{"id": "p03999", "problem": "Score : 300 points\n\n\nProblem StatementYou are given a string S consisting of digits between 1 and 9, inclusive.\nYou can insert the letter + into some of the positions (possibly none) between two letters in this string.\nHere, + must not occur consecutively after insertion.\nAll strings that can be obtained in this way can be evaluated as formulas.\nEvaluate all possible formulas, and print the sum of the results.\n\n\n\n\nConstraints\n1 \\leq |S| \\leq 10\nAll letters in S are digits between 1 and 9, inclusive.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the sum of the evaluated value over all possible formulas.\n\n\n\n\n\n\nSample Input 1125\n\n\n\n\n\nSample Output 1176\n\nThere are 4 formulas that can be obtained: 125, 1+25, 12+5 and 1+2+5. When each formula is evaluated,\n\n125\n1+25=26\n12+5=17\n1+2+5=8\n\nThus, the sum is 125+26+17+8=176.\n\n\n\n\n\nSample Input 29999999999\n\n\n\n\n\nSample Output 212656242944"}
{"id": "p04000", "problem": "Score : 400 points\n\n\nProblem StatementWe have a grid with H rows and W columns. At first, all cells were painted white.\nSnuke painted N of these cells. The i-th ( 1 \\leq i \\leq N ) cell he painted is the cell at the a_i-th row and b_i-th column.\nCompute the following:\n\nFor each integer j ( 0 \\leq j \\leq 9 ), how many subrectangles of size 3\u00d73 of the grid contains exactly j black cells, after Snuke painted N cells?\n\n\n\n\n\nConstraints\n3 \\leq H \\leq 10^9\n3 \\leq W \\leq 10^9\n0 \\leq N \\leq min(10^5,H\u00d7W)\n1 \\leq a_i \\leq H (1 \\leq i \\leq N)\n1 \\leq b_i \\leq W (1 \\leq i \\leq N)\n(a_i, b_i) \\neq (a_j, b_j) (i \\neq j)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W N\na_1 b_1\n:\na_N b_N\n\n\n\n\n\nOutputPrint 10 lines.\nThe (j+1)-th ( 0 \\leq j \\leq 9 ) line should contain the number of the subrectangles of size 3\u00d73 of the grid that contains exactly j black cells.\n\n\n\n\n\n\nSample Input 14 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4\n\n\n\n\n\nSample Output 10\n0\n0\n2\n4\n0\n0\n0\n0\n0\n\n\nThere are six subrectangles of size 3\u00d73. Two of them contain three black cells each, and the remaining four contain four black cells each.\n\n\n\n\n\nSample Input 210 10 20\n1 1\n1 4\n1 9\n2 5\n3 10\n4 2\n4 7\n5 9\n6 4\n6 6\n6 7\n7 1\n7 3\n7 7\n8 1\n8 5\n8 10\n9 2\n10 4\n10 9\n\n\n\n\n\nSample Output 24\n26\n22\n10\n2\n0\n0\n0\n0\n0\n\n\n\n\n\n\nSample Input 31000000000 1000000000 0\n\n\n\n\n\nSample Output 3999999996000000004\n0\n0\n0\n0\n0\n0\n0\n0\n0"}
{"id": "p04001", "problem": "Score : 300 points\n\n\nProblem StatementYou are given a string S consisting of digits between 1 and 9, inclusive.\nYou can insert the letter + into some of the positions (possibly none) between two letters in this string.\nHere, + must not occur consecutively after insertion.\nAll strings that can be obtained in this way can be evaluated as formulas.\nEvaluate all possible formulas, and print the sum of the results.\n\n\n\n\nConstraints\n1 \\leq |S| \\leq 10\nAll letters in S are digits between 1 and 9, inclusive.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint the sum of the evaluated value over all possible formulas.\n\n\n\n\n\n\nSample Input 1125\n\n\n\n\n\nSample Output 1176\n\nThere are 4 formulas that can be obtained: 125, 1+25, 12+5 and 1+2+5. When each formula is evaluated,\n\n125\n1+25=26\n12+5=17\n1+2+5=8\n\nThus, the sum is 125+26+17+8=176.\n\n\n\n\n\nSample Input 29999999999\n\n\n\n\n\nSample Output 212656242944"}
{"id": "p04002", "problem": "Score : 400 points\n\n\nProblem StatementWe have a grid with H rows and W columns. At first, all cells were painted white.\nSnuke painted N of these cells. The i-th ( 1 \\leq i \\leq N ) cell he painted is the cell at the a_i-th row and b_i-th column.\nCompute the following:\n\nFor each integer j ( 0 \\leq j \\leq 9 ), how many subrectangles of size 3\u00d73 of the grid contains exactly j black cells, after Snuke painted N cells?\n\n\n\n\n\nConstraints\n3 \\leq H \\leq 10^9\n3 \\leq W \\leq 10^9\n0 \\leq N \\leq min(10^5,H\u00d7W)\n1 \\leq a_i \\leq H (1 \\leq i \\leq N)\n1 \\leq b_i \\leq W (1 \\leq i \\leq N)\n(a_i, b_i) \\neq (a_j, b_j) (i \\neq j)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W N\na_1 b_1\n:\na_N b_N\n\n\n\n\n\nOutputPrint 10 lines.\nThe (j+1)-th ( 0 \\leq j \\leq 9 ) line should contain the number of the subrectangles of size 3\u00d73 of the grid that contains exactly j black cells.\n\n\n\n\n\n\nSample Input 14 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4\n\n\n\n\n\nSample Output 10\n0\n0\n2\n4\n0\n0\n0\n0\n0\n\n\nThere are six subrectangles of size 3\u00d73. Two of them contain three black cells each, and the remaining four contain four black cells each.\n\n\n\n\n\nSample Input 210 10 20\n1 1\n1 4\n1 9\n2 5\n3 10\n4 2\n4 7\n5 9\n6 4\n6 6\n6 7\n7 1\n7 3\n7 7\n8 1\n8 5\n8 10\n9 2\n10 4\n10 9\n\n\n\n\n\nSample Output 24\n26\n22\n10\n2\n0\n0\n0\n0\n0\n\n\n\n\n\n\nSample Input 31000000000 1000000000 0\n\n\n\n\n\nSample Output 3999999996000000004\n0\n0\n0\n0\n0\n0\n0\n0\n0"}
{"id": "p04003", "problem": "Score : 600 points\n\n\nProblem StatementSnuke's town has a subway system, consisting of N stations and M railway lines. The stations are numbered 1 through N. Each line is operated by a company. Each company has an identification number.\nThe i-th ( 1 \\leq i \\leq M ) line connects station p_i and q_i bidirectionally. There is no intermediate station. This line is operated by company c_i.\nYou can change trains at a station where multiple lines are available.\nThe fare system used in this subway system is a bit strange. When a passenger only uses lines that are operated by the same company, the fare is 1 yen (the currency of Japan). Whenever a passenger changes to a line that is operated by a different company from the current line, the passenger is charged an additional fare of 1 yen. In a case where a passenger who changed from some company A's line to another company's line changes to company A's line again, the additional fare is incurred again.\nSnuke is now at station 1 and wants to travel to station N by subway. Find the minimum required fare.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n0 \\leq M \\leq 2\u00d710^5\n1 \\leq p_i \\leq N (1 \\leq i \\leq M)\n1 \\leq q_i \\leq N (1 \\leq i \\leq M)\n1 \\leq c_i \\leq 10^6 (1 \\leq i \\leq M)\np_i \\neq q_i (1 \\leq i \\leq M)\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\np_1 q_1 c_1\n:\np_M q_M c_M\n\n\n\n\n\nOutputPrint the minimum required fare. If it is impossible to get to station N by subway, print -1 instead.\n\n\n\n\n\n\nSample Input 13 3\n1 2 1\n2 3 1\n3 1 2\n\n\n\n\n\nSample Output 11\n\nUse company 1's lines: 1 \u2192 2 \u2192 3. The fare is 1 yen.\n\n\n\n\n\nSample Input 28 11\n1 3 1\n1 4 2\n2 3 1\n2 5 1\n3 4 3\n3 6 3\n3 7 3\n4 8 4\n5 6 1\n6 7 5\n7 8 5\n\n\n\n\n\nSample Output 22\n\nFirst, use company 1's lines: 1 \u2192 3 \u2192 2 \u2192 5 \u2192 6. Then, use company 5's lines: 6 \u2192 7 \u2192 8. The fare is 2 yen.\n\n\n\n\n\nSample Input 32 0\n\n\n\n\n\nSample Output 3-1"}
{"id": "p04004", "problem": "Score : 1100 points\n\n\nProblem StatementAlice, Bob and Charlie are playing Card Game for Three, as below:\n\nAt first, each of the three players has a deck consisting of some number of cards. Alice's deck has N cards, Bob's deck has M cards, and Charlie's deck has K cards. Each card has a letter a, b or c written on it. The orders of the cards in the decks cannot be rearranged.\nThe players take turns. Alice goes first.\nIf the current player's deck contains at least one card, discard the top card in the deck. Then, the player whose name begins with the letter on the discarded card, takes the next turn. (For example, if the card says a, Alice takes the next turn.)\nIf the current player's deck is empty, the game ends and the current player wins the game.\n\nThere are 3^{N+M+K} possible patters of the three player's initial decks. Among these patterns, how many will lead to Alice's victory?\nSince the answer can be large, print the count modulo 1\\,000\\,000\\,007 (=10^9+7).\n\n\n\n\nConstraints\n1 \\leq N \\leq 3\u00d710^5\n1 \\leq M \\leq 3\u00d710^5\n1 \\leq K \\leq 3\u00d710^5\n\n\n\n\n\nPartial Scores\n500 points will be awarded for passing the test set satisfying the following: 1 \\leq N \\leq 1000, 1 \\leq M \\leq 1000, 1 \\leq K \\leq 1000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M K\n\n\n\n\n\nOutputPrint the answer modulo 1\\,000\\,000\\,007 (=10^9+7).\n\n\n\n\n\n\nSample Input 11 1 1\n\n\n\n\n\nSample Output 117\n\n\nIf Alice's card is a, then Alice will win regardless of Bob's and Charlie's card. There are 3\u00d73=9 such patterns.\nIf Alice's card is b, Alice will only win when Bob's card is a, or when Bob's card is c and Charlie's card is a. There are 3+1=4 such patterns.\nIf Alice's card is c, Alice will only win when Charlie's card is a, or when Charlie's card is b and Bob's card is a. There are 3+1=4 such patterns.\n\nThus, there are total of 9+4+4=17 patterns that will lead to Alice's victory.\n\n\n\n\n\nSample Input 24 2 2\n\n\n\n\n\nSample Output 21227\n\n\n\n\n\n\nSample Input 31000 1000 1000\n\n\n\n\n\nSample Output 3261790852"}
{"id": "p04005", "problem": "Score : 200 points\n\n\nProblem StatementWe have a rectangular parallelepiped of size A\u00d7B\u00d7C, built with blocks of size 1\u00d71\u00d71. Snuke will paint each of the A\u00d7B\u00d7C blocks either red or blue, so that:\n\nThere is at least one red block and at least one blue block.\nThe union of all red blocks forms a rectangular parallelepiped.\nThe union of all blue blocks forms a rectangular parallelepiped.\n\nSnuke wants to minimize the difference between the number of red blocks and the number of blue blocks. Find the minimum possible difference.\n\n\n\n\nConstraints\n2\u2264A,B,C\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B C\n\n\n\n\n\nOutputPrint the minimum possible difference between the number of red blocks and the number of blue blocks.\n\n\n\n\n\n\nSample Input 13 3 3\n\n\n\n\n\nSample Output 19\n\nFor example, Snuke can paint the blocks as shown in the diagram below.\nThere are 9 red blocks and 18 blue blocks, thus the difference is 9.\n\n\n\n\n\n\nSample Input 22 2 4\n\n\n\n\n\nSample Output 20\n\nFor example, Snuke can paint the blocks as shown in the diagram below.\nThere are 8 red blocks and 8 blue blocks, thus the difference is 0.\n\n\n\n\n\n\nSample Input 35 3 5\n\n\n\n\n\nSample Output 315\n\nFor example, Snuke can paint the blocks as shown in the diagram below.\nThere are 45 red blocks and 30 blue blocks, thus the difference is 9."}
{"id": "p04006", "problem": "Score : 400 points\n\n\nProblem StatementSnuke lives in another world, where slimes are real creatures and kept by some people.\nSlimes come in N colors. Those colors are conveniently numbered 1 through N.\nSnuke currently has no slime. His objective is to have slimes of all the colors together.\nSnuke can perform the following two actions:\n\n\nSelect a color i (1\u2264i\u2264N), such that he does not currently have a slime in color i, and catch a slime in color i. This action takes him a_i seconds.\n\n\nCast a spell, which changes the color of all the slimes that he currently has. The color of a slime in color i (1\u2264i\u2264N-1) will become color i+1, and the color of a slime in color N will become color 1. This action takes him x seconds.\n\n\nFind the minimum time that Snuke needs to have slimes in all N colors.\n\n\n\n\nConstraints\n2\u2264N\u22642,000\na_i are integers.\n1\u2264a_i\u226410^9\nx is an integer.\n1\u2264x\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN x\na_1 a_2 ... a_N\n\n\n\n\n\nOutputFind the minimum time that Snuke needs to have slimes in all N colors.\n\n\n\n\n\n\nSample Input 12 10\n1 100\n\n\n\n\n\nSample Output 112\n\nSnuke can act as follows:\n\nCatch a slime in color 1. This takes 1 second.\nCast the spell. The color of the slime changes: 1 \u2192 2. This takes 10 seconds.\nCatch a slime in color 1. This takes 1 second.\n\n\n\n\n\n\nSample Input 23 10\n100 1 100\n\n\n\n\n\nSample Output 223\n\nSnuke can act as follows:\n\nCatch a slime in color 2. This takes 1 second.\nCast the spell. The color of the slime changes: 2 \u2192 3. This takes 10 seconds.\nCatch a slime in color 2. This takes 1 second.\nCast the soell. The color of each slime changes: 3 \u2192 1, 2 \u2192 3. This takes 10 seconds.\nCatch a slime in color 2. This takes 1 second.\n\n\n\n\n\n\nSample Input 34 10\n1 2 3 4\n\n\n\n\n\nSample Output 310\n\nSnuke can act as follows:\n\nCatch a slime in color 1. This takes 1 second.\nCatch a slime in color 2. This takes 2 seconds.\nCatch a slime in color 3. This takes 3 seconds.\nCatch a slime in color 4. This takes 4 seconds."}
{"id": "p04007", "problem": "Score : 700 points\n\n\nProblem StatementSnuke and Ciel went to a strange stationery store. Each of them got a transparent graph paper with H rows and W columns.\nSnuke painted some of the cells red in his paper. Here, the cells painted red were 4-connected, that is, it was possible to traverse from any red cell to any other red cell, by moving to vertically or horizontally adjacent red cells only.\nCiel painted some of the cells blue in her paper. Here, the cells painted blue were 4-connected.\nAfterwards, they precisely overlaid the two sheets in the same direction. Then, the intersection of the red cells and the blue cells appeared purple.\nYou are given a matrix of letters a_{ij} (1\u2264i\u2264H, 1\u2264j\u2264W) that describes the positions of the purple cells. If the cell at the i-th row and j-th column is purple, then a_{ij} is #, otherwise a_{ij} is .. Here, it is guaranteed that no outermost cell is purple. That is, if i=1, H or j = 1, W, then a_{ij} is ..\nFind a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation described. It can be shown that a solution always exists.\n\n\n\n\nConstraints\n3\u2264H,W\u2264500\na_{ij} is # or ..\nIf i=1,H or j=1,W, then a_{ij} is ..\nAt least one of a_{ij} is #.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\na_{11}...a_{1W}\n:\na_{H1}...a_{HW}\n\n\n\n\n\nOutputPrint a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation, as follows:\n\nThe first H lines should describe the positions of the red cells.\nThe following 1 line should be empty.\nThe following H lines should describe the positions of the blue cells.\n\nThe description of the positions of the red or blue cells should follow the format of the description of the positions of the purple cells.\n\n\n\n\n\n\nSample Input 15 5\n.....\n.#.#.\n.....\n.#.#.\n.....\n\n\n\n\n\nSample Output 1.....\n#####\n#....\n#####\n.....\n\n.###.\n.#.#.\n.#.#.\n.#.#.\n.....\n\nOne possible pair of the set of the positions of the red cells and the blue cells is as follows:\n\n\n\n\n\n\nSample Input 27 13\n.............\n.###.###.###.\n.#.#.#...#...\n.###.#...#...\n.#.#.#.#.#...\n.#.#.###.###.\n.............\n\n\n\n\n\nSample Output 2.............\n.###########.\n.###.###.###.\n.###.###.###.\n.###.###.###.\n.###.###.###.\n.............\n\n.............\n.###.###.###.\n.#.#.#...#...\n.###.#...#...\n.#.#.#.#.#...\n.#.#########.\n.............\n\nOne possible pair of the set of the positions of the red cells and the blue cells is as follows:"}
{"id": "p04008", "problem": "Score : 800 points\n\n\nProblem StatementThere are N towns in Snuke Kingdom, conveniently numbered 1 through N.\nTown 1 is the capital.\nEach town in the kingdom has a Teleporter, a facility that instantly transports a person to another place.\nThe destination of the Teleporter of town i is town a_i (1\u2264a_i\u2264N).\nIt is guaranteed that one can get to the capital from any town by using the Teleporters some number of times.\nKing Snuke loves the integer K.\nThe selfish king wants to change the destination of the Teleporters so that the following holds:\n\nStarting from any town, one will be at the capital after using the Teleporters exactly K times in total.\n\nFind the minimum number of the Teleporters whose destinations need to be changed in order to satisfy the king's desire.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n1\u2264a_i\u2264N\nOne can get to the capital from any town by using the Teleporters some number of times.\n1\u2264K\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum number of the Teleporters whose destinations need to be changed in order to satisfy King Snuke's desire.\n\n\n\n\n\n\nSample Input 13 1\n2 3 1\n\n\n\n\n\nSample Output 12\n\nChange the destinations of the Teleporters to a = (1,1,1).\n\n\n\n\n\nSample Input 24 2\n1 1 2 2\n\n\n\n\n\nSample Output 20\n\nThere is no need to change the destinations of the Teleporters, since the king's desire is already satisfied.\n\n\n\n\n\nSample Input 38 2\n4 1 2 3 1 2 3 4\n\n\n\n\n\nSample Output 33\n\nFor example, change the destinations of the Teleporters to a = (1,1,2,1,1,2,2,4)."}
{"id": "p04009", "problem": "Score : 1400 points\n\n\nProblem StatementWe have a grid with H rows and W columns.\nThe state of the cell at the i-th (1\u2264i\u2264H) row and j-th (1\u2264j\u2264W) column is represented by a letter a_{ij}, as follows:\n\n. : This cell is empty.\no : This cell contains a robot.\nE : This cell contains the exit. E occurs exactly once in the whole grid.\n\nSnuke is trying to salvage as many robots as possible, by performing the following operation some number of times:\n\nSelect one of the following directions: up, down, left, right. All remaining robots will move one cell in the selected direction, except when a robot would step outside the grid, in which case the robot will explode and immediately disappear from the grid. If a robot moves to the cell that contains the exit, the robot will be salvaged and immediately removed from the grid.\n\nFind the maximum number of robots that can be salvaged.\n\n\n\n\nConstraints\n2\u2264H,W\u2264100\na_{ij} is ., o or E.\nE occurs exactly once in the whole grid.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W\na_{11}...a_{1W}\n:\na_{H1}...a_{HW}\n\n\n\n\n\nOutputPrint the maximum number of robots that can be salvaged.\n\n\n\n\n\n\nSample Input 13 3\no.o\n.Eo\nooo\n\n\n\n\n\nSample Output 13\n\nFor example, select left, up, right.\n\n\n\n\n\nSample Input 22 2\nE.\n..\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 33 4\no...\no...\noooE\n\n\n\n\n\nSample Output 35\n\nSelect right, right, right, down, down.\n\n\n\n\n\nSample Input 45 11\nooo.ooo.ooo\no.o.o...o..\nooo.oE..o..\no.o.o.o.o..\no.o.ooo.ooo\n\n\n\n\n\nSample Output 412"}
{"id": "p04010", "problem": "Score : 2200 points\n\n\nProblem StatementYou are given an undirected graph with N vertices and M edges.\nHere, N-1\u2264M\u2264N holds and the graph is connected.\nThere are no self-loops or multiple edges in this graph.\nThe vertices are numbered 1 through N, and the edges are numbered 1 through M.\nEdge i connects vertices a_i and b_i.\nThe color of each vertex can be either white or black.\nInitially, all the vertices are white.\nSnuke is trying to turn all the vertices black by performing the following operation some number of times:\n\nSelect a pair of adjacent vertices with the same color, and invert the colors of those vertices. That is, if the vertices are both white, then turn them black, and vice versa.\n\nDetermine if it is possible to turn all the vertices black. If the answer is positive, find the minimum number of times the operation needs to be performed in order to achieve the objective.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\nN-1\u2264M\u2264N\n1\u2264a_i,b_i\u2264N\nThere are no self-loops or multiple edges in the given graph.\nThe given graph is connected.\n\n\n\n\n\nPartial Score\nIn the test set worth 1500 points, M=N-1.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n\n\n\n\nOutputIf it is possible to turn all the vertices black, print the minimum number of times the operation needs to be performed in order to achieve the objective.\nOtherwise, print -1 instead.\n\n\n\n\n\n\nSample Input 16 5\n1 2\n1 3\n1 4\n2 5\n2 6\n\n\n\n\n\nSample Output 15\n\nFor example, it is possible to perform the operations as shown in the following diagram:\n\n\n\n\n\n\nSample Input 23 2\n1 2\n2 3\n\n\n\n\n\nSample Output 2-1\n\nIt is not possible to turn all the vertices black.\n\n\n\n\n\n\nSample Input 34 4\n1 2\n2 3\n3 4\n4 1\n\n\n\n\n\nSample Output 32\n\nThis case is not included in the test set for the partial score.\n\n\n\n\n\n\nSample Input 46 6\n1 2\n2 3\n3 1\n1 4\n1 5\n1 6\n\n\n\n\n\nSample Output 47\n\nThis case is not included in the test set for the partial score."}
{"id": "p04011", "problem": "Score : 100 points\n\n\nProblem StatementThere is a hotel with the following accommodation fee:\n\nX yen (the currency of Japan) per night, for the first K nights\nY yen per night, for the (K+1)-th and subsequent nights\n\nTak is staying at this hotel for N consecutive nights.\nFind his total accommodation fee.\n\n\n\n\nConstraints\n1 \\leq N, K \\leq 10000\n1 \\leq Y < X \\leq 10000\nN,\\,K,\\,X,\\,Y are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nK\nX\nY\n\n\n\n\n\nOutputPrint Tak's total accommodation fee.\n\n\n\n\n\n\nSample Input 15\n3\n10000\n9000\n\n\n\n\n\nSample Output 148000\n\nThe accommodation fee is as follows:\n\n10000 yen for the 1-st night\n10000 yen for the 2-nd night\n10000 yen for the 3-rd night\n9000 yen for the 4-th night\n9000 yen for the 5-th night\n\nThus, the total is 48000 yen.\n\n\n\n\n\nSample Input 22\n3\n10000\n9000\n\n\n\n\n\nSample Output 220000"}
{"id": "p04012", "problem": "Score : 200 points\n\n\nProblem StatementLet w be a string consisting of lowercase letters.\nWe will call w beautiful if the following condition is satisfied:\n\nEach lowercase letter of the English alphabet occurs even number of times in w.\n\nYou are given the string w. Determine if w is beautiful.\n\n\n\n\nConstraints\n1 \\leq |w| \\leq 100\nw consists of lowercase letters (a-z).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nw\n\n\n\n\n\nOutputPrint Yes if w is beautiful. Print No otherwise.\n\n\n\n\n\n\nSample Input 1abaccaba\n\n\n\n\n\nSample Output 1Yes\n\na occurs four times, b occurs twice, c occurs twice and the other letters occur zero times.\n\n\n\n\n\nSample Input 2hthth\n\n\n\n\n\nSample Output 2No"}
{"id": "p04013", "problem": "Score : 300 points\n\n\nProblem StatementTak has N cards. On the i-th (1 \\leq i \\leq N) card is written an integer x_i.\nHe is selecting one or more cards from these N cards, so that the average of the integers written on the selected cards is exactly A.\nIn how many ways can he make his selection?\n\n\n\n\nConstraints\n1 \\leq N \\leq 50\n1 \\leq A \\leq 50\n1 \\leq x_i \\leq 50\nN,\\,A,\\,x_i are integers.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 1 \\leq N \\leq 16.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputPrint the number of ways to select cards such that the average of the written integers is exactly A.\n\n\n\n\n\n\nSample Input 14 8\n7 9 8 9\n\n\n\n\n\nSample Output 15\n\n\nThe following are the 5 ways to select cards such that the average is 8:\nSelect the 3-rd card.\nSelect the 1-st and 2-nd cards.\nSelect the 1-st and 4-th cards.\nSelect the 1-st, 2-nd and 3-rd cards.\nSelect the 1-st, 3-rd and 4-th cards.\n\n\n\n\n\n\n\n\nSample Input 23 8\n6 6 9\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 38 5\n3 6 2 8 7 6 5 9\n\n\n\n\n\nSample Output 319\n\n\n\n\n\n\nSample Input 433 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n\n\n\n\n\nSample Output 48589934591\n\n\nThe answer may not fit into a 32-bit integer."}
{"id": "p04014", "problem": "Score : 500 points\n\n\nProblem StatementFor integers b (b \\geq 2) and n (n \\geq 1), let the function f(b,n) be defined as follows:\n\nf(b,n) = n, when n < b\nf(b,n) = f(b,\\,{\\rm floor}(n / b)) + (n \\ {\\rm mod} \\ b), when n \\geq b\n\nHere, {\\rm floor}(n / b) denotes the largest integer not exceeding n / b,\nand n \\ {\\rm mod} \\ b denotes the remainder of n divided by b.\nLess formally, f(b,n) is equal to the sum of the digits of n written in base b.\nFor example, the following hold:\n\nf(10,\\,87654)=8+7+6+5+4=30\nf(100,\\,87654)=8+76+54=138\n\nYou are given integers n and s.\nDetermine if there exists an integer b (b \\geq 2) such that f(b,n)=s.\nIf the answer is positive, also find the smallest such b.\n\n\n\n\nConstraints\n1 \\leq n \\leq 10^{11}\n1 \\leq s \\leq 10^{11}\nn,\\,s are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nn\ns\n\n\n\n\n\nOutputIf there exists an integer b (b \\geq 2) such that f(b,n)=s, print the smallest such b.\nIf such b does not exist, print -1 instead.\n\n\n\n\n\n\nSample Input 187654\n30\n\n\n\n\n\nSample Output 110\n\n\n\n\n\n\nSample Input 287654\n138\n\n\n\n\n\nSample Output 2100\n\n\n\n\n\n\nSample Input 387654\n45678\n\n\n\n\n\nSample Output 3-1\n\n\n\n\n\n\nSample Input 431415926535\n1\n\n\n\n\n\nSample Output 431415926535\n\n\n\n\n\n\nSample Input 51\n31415926535\n\n\n\n\n\nSample Output 5-1"}
{"id": "p04015", "problem": "Score : 300 points\n\n\nProblem StatementTak has N cards. On the i-th (1 \\leq i \\leq N) card is written an integer x_i.\nHe is selecting one or more cards from these N cards, so that the average of the integers written on the selected cards is exactly A.\nIn how many ways can he make his selection?\n\n\n\n\nConstraints\n1 \\leq N \\leq 50\n1 \\leq A \\leq 50\n1 \\leq x_i \\leq 50\nN,\\,A,\\,x_i are integers.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 1 \\leq N \\leq 16.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN A\nx_1 x_2 ... x_N\n\n\n\n\n\nOutputPrint the number of ways to select cards such that the average of the written integers is exactly A.\n\n\n\n\n\n\nSample Input 14 8\n7 9 8 9\n\n\n\n\n\nSample Output 15\n\n\nThe following are the 5 ways to select cards such that the average is 8:\nSelect the 3-rd card.\nSelect the 1-st and 2-nd cards.\nSelect the 1-st and 4-th cards.\nSelect the 1-st, 2-nd and 3-rd cards.\nSelect the 1-st, 3-rd and 4-th cards.\n\n\n\n\n\n\n\n\nSample Input 23 8\n6 6 9\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 38 5\n3 6 2 8 7 6 5 9\n\n\n\n\n\nSample Output 319\n\n\n\n\n\n\nSample Input 433 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n\n\n\n\n\nSample Output 48589934591\n\n\nThe answer may not fit into a 32-bit integer."}
{"id": "p04016", "problem": "Score : 500 points\n\n\nProblem StatementFor integers b (b \\geq 2) and n (n \\geq 1), let the function f(b,n) be defined as follows:\n\nf(b,n) = n, when n < b\nf(b,n) = f(b,\\,{\\rm floor}(n / b)) + (n \\ {\\rm mod} \\ b), when n \\geq b\n\nHere, {\\rm floor}(n / b) denotes the largest integer not exceeding n / b,\nand n \\ {\\rm mod} \\ b denotes the remainder of n divided by b.\nLess formally, f(b,n) is equal to the sum of the digits of n written in base b.\nFor example, the following hold:\n\nf(10,\\,87654)=8+7+6+5+4=30\nf(100,\\,87654)=8+76+54=138\n\nYou are given integers n and s.\nDetermine if there exists an integer b (b \\geq 2) such that f(b,n)=s.\nIf the answer is positive, also find the smallest such b.\n\n\n\n\nConstraints\n1 \\leq n \\leq 10^{11}\n1 \\leq s \\leq 10^{11}\nn,\\,s are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nn\ns\n\n\n\n\n\nOutputIf there exists an integer b (b \\geq 2) such that f(b,n)=s, print the smallest such b.\nIf such b does not exist, print -1 instead.\n\n\n\n\n\n\nSample Input 187654\n30\n\n\n\n\n\nSample Output 110\n\n\n\n\n\n\nSample Input 287654\n138\n\n\n\n\n\nSample Output 2100\n\n\n\n\n\n\nSample Input 387654\n45678\n\n\n\n\n\nSample Output 3-1\n\n\n\n\n\n\nSample Input 431415926535\n1\n\n\n\n\n\nSample Output 431415926535\n\n\n\n\n\n\nSample Input 51\n31415926535\n\n\n\n\n\nSample Output 5-1"}
{"id": "p04017", "problem": "Score : 700 points\n\n\nProblem StatementN hotels are located on a straight line. The coordinate of the i-th hotel (1 \\leq i \\leq N) is x_i.\nTak the traveler has the following two personal principles:\n\nHe never travels a distance of more than L in a single day.\nHe never sleeps in the open. That is, he must stay at a hotel at the end of a day.\n\nYou are given Q queries. The j-th (1 \\leq j \\leq Q) query is described by two distinct integers a_j and b_j.\nFor each query, find the minimum number of days that Tak needs to travel from the a_j-th hotel to the b_j-th hotel following his principles.\nIt is guaranteed that he can always travel from the a_j-th hotel to the b_j-th hotel, in any given input.\n\n\n\n\nConstraints\n2 \\leq N \\leq 10^5\n1 \\leq L \\leq 10^9\n1 \\leq Q \\leq 10^5\n1 \\leq x_i < x_2 < ... < x_N \\leq 10^9\nx_{i+1} - x_i \\leq L\n1 \\leq a_j,b_j \\leq N\na_j \\neq b_j\nN,\\,L,\\,Q,\\,x_i,\\,a_j,\\,b_j are integers.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying N \\leq 10^3 and Q \\leq 10^3.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nx_1 x_2 ... x_N\nL\nQ\na_1 b_1\na_2 b_2\n:\na_Q b_Q\n\n\n\n\n\nOutputPrint Q lines.\nThe j-th line (1 \\leq j \\leq Q) should contain the minimum number of days that Tak needs to travel from the a_j-th hotel to the b_j-th hotel.\n\n\n\n\n\n\nSample Input 19\n1 3 6 13 15 18 19 29 31\n10\n4\n1 8\n7 3\n6 7\n8 5\n\n\n\n\n\nSample Output 14\n2\n1\n2\n\nFor the 1-st query, he can travel from the 1-st hotel to the 8-th hotel in 4 days, as follows:\n\nDay 1: Travel from the 1-st hotel to the 2-nd hotel. The distance traveled is 2.\nDay 2: Travel from the 2-nd hotel to the 4-th hotel. The distance traveled is 10.\nDay 3: Travel from the 4-th hotel to the 7-th hotel. The distance traveled is 6.\nDay 4: Travel from the 7-th hotel to the 8-th hotel. The distance traveled is 10."}
{"id": "p04018", "problem": "Score : 900 points\n\n\nProblem StatementLet x be a string of length at least 1.\nWe will call x a good string, if for any string y and any integer k (k \\geq 2), the string obtained by concatenating k copies of y is different from x.\nFor example, a, bbc and cdcdc are good strings, while aa, bbbb and cdcdcd are not.\nLet w be a string of length at least 1.\nFor a sequence F=(\\,f_1,\\,f_2,\\,...,\\,f_m) consisting of m elements,\nwe will call F a good representation of w, if the following conditions are both satisfied:\n\nFor any i \\, (1 \\leq i \\leq m), f_i is a good string.\nThe string obtained by concatenating f_1,\\,f_2,\\,...,\\,f_m in this order, is w.\n\nFor example, when w=aabb, there are five good representations of w:\n\n(aabb)\n(a,abb)\n(aab,b)\n(a,ab,b)\n(a,a,b,b)\n\nAmong the good representations of w, the ones with the smallest number of elements are called the best representations of w.\nFor example, there are only one best representation of w=aabb: (aabb).\nYou are given a string w. Find the following:\n\nthe number of elements of a best representation of w\nthe number of the best representations of w, modulo 1000000007 \\, (=10^9+7)\n\n(It is guaranteed that a good representation of w always exists.)\n\n\n\n\nConstraints\n1 \\leq |w| \\leq 500000 \\, (=5 \\times 10^5)\nw consists of lowercase letters (a-z).\n\n\n\n\n\nPartial Score\n400 points will be awarded for passing the test set satisfying 1 \\leq |w| \\leq 4000.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nw\n\n\n\n\n\nOutputPrint 2 lines.\n\nIn the first line, print the number of elements of a best representation of w.\nIn the second line, print the number of the best representations of w, modulo 1000000007.\n\n\n\n\n\n\n\nSample Input 1aab\n\n\n\n\n\nSample Output 11\n1\n\n\n\n\n\n\nSample Input 2bcbc\n\n\n\n\n\nSample Output 22\n3\n\n\nIn this case, there are 3 best representations of 2 elements:\n(b,cbc)\n(bc,bc)\n(bcb,c)\n\n\n\n\n\n\n\n\nSample Input 3ddd\n\n\n\n\n\nSample Output 33\n1"}
{"id": "p04019", "problem": "Score : 200 points\n\n\nProblem StatementSnuke lives on an infinite two-dimensional plane. He is going on an N-day trip.\nAt the beginning of Day 1, he is at home. His plan is described in a string S of length N.\nOn Day i(1 \u2266 i \u2266 N), he will travel a positive distance in the following direction:\n\nNorth if the i-th letter of S is N\nWest if the i-th letter of S is W\nSouth if the i-th letter of S is S\nEast if the i-th letter of S is E\n\nHe has not decided each day's travel distance. Determine whether it is possible to set each day's travel distance so that he will be back at home at the end of Day N.\n\n\n\n\nConstraints\n1 \u2266 | S | \u2266 1000\nS consists of the letters N, W, S, E.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputPrint Yes if it is possible to set each day's travel distance so that he will be back at home at the end of Day N. Otherwise, print No.\n\n\n\n\n\n\nSample Input 1SENW\n\n\n\n\n\nSample Output 1Yes\n\nIf Snuke travels a distance of 1 on each day, he will be back at home at the end of day 4.\n\n\n\n\n\nSample Input 2NSNNSNSN\n\n\n\n\n\nSample Output 2Yes\n\n\n\n\n\n\nSample Input 3NNEW\n\n\n\n\n\nSample Output 3No\n\n\n\n\n\n\nSample Input 4W\n\n\n\n\n\nSample Output 4No"}
{"id": "p04020", "problem": "Score : 400 points\n\n\nProblem StatementSnuke has a large collection of cards. Each card has an integer between 1 and N, inclusive, written on it.\nHe has A_i cards with an integer i.\nTwo cards can form a pair if the absolute value of the difference of the integers written on them is at most 1.\nSnuke wants to create the maximum number of pairs from his cards, on the condition that no card should be used in multiple pairs. Find the maximum number of pairs that he can create.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n0 \u2266 A_i \u2266 10^9 (1 \u2266 i \u2266 N)\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1\n:\nA_N\n\n\n\n\n\nOutputPrint the maximum number of pairs that Snuke can create.\n\n\n\n\n\n\nSample Input 14\n4\n0\n3\n2\n\n\n\n\n\nSample Output 14\n\nFor example, Snuke can create the following four pairs: (1,1),(1,1),(3,4),(3,4).\n\n\n\n\n\nSample Input 28\n2\n0\n1\n6\n0\n8\n2\n1\n\n\n\n\n\nSample Output 29"}
{"id": "p04021", "problem": "Score : 600 points\n\n\nProblem StatementSnuke got an integer sequence of length N from his mother, as a birthday present. The i-th (1 \u2266 i \u2266 N) element of the sequence is a_i. The elements are pairwise distinct.\nHe is sorting this sequence in increasing order.\nWith supernatural power, he can perform the following two operations on the sequence in any order:\n\nOperation 1: choose 2 consecutive elements, then reverse the order of those elements.\nOperation 2: choose 3 consecutive elements, then reverse the order of those elements.\n\nSnuke likes Operation 2, but not Operation 1. Find the minimum number of Operation 1 that he has to perform in order to sort the sequence in increasing order.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n0 \u2266 A_i \u2266 10^9\nIf i \u2260 j, then A_i \u2260 A_j.\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1\n:\nA_N\n\n\n\n\n\nOutputPrint the minimum number of times Operation 1 that Snuke has to perform.\n\n\n\n\n\n\nSample Input 14\n2\n4\n3\n1\n\n\n\n\n\nSample Output 11\n\nThe given sequence can be sorted as follows:\n\nFirst, reverse the order of the last three elements. The sequence is now: 2,1,3,4.\nThen, reverse the order of the first two elements. The sequence is now: 1,2,3,4.\n\nIn this sequence of operations, Operation 1 is performed once. It is not possible to sort the sequence with less number of Operation 1, thus the answer is 1.\n\n\n\n\n\nSample Input 25\n10\n8\n5\n3\n2\n\n\n\n\n\nSample Output 20"}
{"id": "p04022", "problem": "Score : 1100 points\n\n\nProblem StatementSnuke got positive integers s_1,...,s_N from his mother, as a birthday present. There may be duplicate elements.\nHe will circle some of these N integers. Since he dislikes cubic numbers, he wants to ensure that if both s_i and s_j (i \u2260 j) are circled, the product s_is_j is not cubic. For example, when s_1=1,s_2=1,s_3=2,s_4=4, it is not possible to circle both s_1 and s_2 at the same time. It is not possible to circle both s_3 and s_4 at the same time, either.\nFind the maximum number of integers that Snuke can circle.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n1 \u2266 s_i \u2266 10^{10}\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\ns_1\n:\ns_N\n\n\n\n\n\nOutputPrint the maximum number of integers that Snuke can circle.\n\n\n\n\n\n\nSample Input 18\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n\nSample Output 16\n\nSnuke can circle 1,2,3,5,6,7.\n\n\n\n\n\nSample Input 26\n2\n4\n8\n16\n32\n64\n\n\n\n\n\nSample Output 23\n\n\n\n\n\n\nSample Input 310\n1\n10\n100\n1000000007\n10000000000\n1000000009\n999999999\n999\n999\n999\n\n\n\n\n\nSample Output 39"}
{"id": "p04023", "problem": "Score : 1400 points\n\n\nProblem StatementSnuke got an integer sequence from his mother, as a birthday present. The sequence has N elements, and the i-th of them is i.\nSnuke performs the following Q operations on this sequence. The i-th operation, described by a parameter q_i, is as follows:\n\nTake the first q_i elements from the sequence obtained by concatenating infinitely many copy of the current sequence, then replace the current sequence with those q_i elements.\n\nAfter these Q operations, find how many times each of the integers 1 through N appears in the final sequence.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 10^5\n0 \u2266 Q \u2266 10^5\n1 \u2266 q_i \u2266 10^{18}\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN Q\nq_1\n:\nq_Q\n\n\n\n\n\nOutputPrint N lines. The i-th line (1 \u2266 i \u2266 N) should contain the number of times integer i appears in the final sequence after the Q operations.\n\n\n\n\n\n\nSample Input 15 3\n6\n4\n11\n\n\n\n\n\nSample Output 13\n3\n3\n2\n0\n\nAfter the first operation, the sequence becomes: 1,2,3,4,5,1.\nAfter the second operation, the sequence becomes: 1,2,3,4.\nAfter the third operation, the sequence becomes: 1,2,3,4,1,2,3,4,1,2,3.\nIn this sequence, integers 1,2,3,4,5 appear 3,3,3,2,0 times, respectively.\n\n\n\n\n\nSample Input 210 10\n9\n13\n18\n8\n10\n10\n9\n19\n22\n27\n\n\n\n\n\nSample Output 27\n4\n4\n3\n3\n2\n2\n2\n0\n0"}
{"id": "p04024", "problem": "Score : 1700 points\n\n\nProblem StatementSnuke got a grid from his mother, as a birthday present. The grid has H rows and W columns. Each cell is painted black or white. All black cells are 4-connected, that is, it is possible to traverse from any black cell to any other black cell by just visiting black cells, where it is only allowed to move horizontally or vertically.\nThe color of the cell at the i-th row and j-th column (1 \u2266 i \u2266 H, 1 \u2266 j \u2266 W) is represented by a character s_{ij}. If s_{ij} is #, the cell is painted black. If s_{ij} is ., the cell is painted white. At least one cell is painted black.\nWe will define fractals as follows.\nThe fractal of level 0 is a 1 \u00d7 1 grid with a black cell.\nThe fractal of level k+1 is obtained by arranging smaller grids in H rows and W columns, following the pattern of the Snuke's grid.\nAt a position that corresponds to a black cell in the Snuke's grid, a copy of the fractal of level k is placed.\nAt a position that corresponds to a white cell in the Snuke's grid, a grid whose cells are all white, with the same dimensions as the fractal of level k, is placed.\nYou are given the description of the Snuke's grid, and an integer K. Find the number of connected components of black cells in the fractal of level K, modulo 10^9+7.\n\n\n\n\nConstraints\n1 \u2266 H,W \u2266 1000\n0 \u2266 K \u2266 10^{18}\nEach s_{ij} is either # or ..\nAll black cells in the given grid are 4-connected.\nThere is at least one black cell in the given grid.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W K\ns_{11} .. s_{1W}\n:\ns_{H1} .. s_{HW}\n\n\n\n\n\nOutputPrint the number of connected components of black cells in the fractal of level K, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 3 3\n.#.\n###\n#.#\n\n\n\n\n\nSample Output 120\n\nThe fractal of level K=3 in this case is shown below. There are 20 connected components of black cells.\n\n.............#.............\n............###............\n............#.#............\n..........#..#..#..........\n.........#########.........\n.........#.##.##.#.........\n..........#.....#..........\n.........###...###.........\n.........#.#...#.#.........\n....#........#........#....\n...###......###......###...\n...#.#......#.#......#.#...\n.#..#..#..#..#..#..#..#..#.\n###########################\n#.##.##.##.##.##.##.##.##.#\n.#.....#..#.....#..#.....#.\n###...######...######...###\n#.#...#.##.#...#.##.#...#.#\n....#.................#....\n...###...............###...\n...#.#...............#.#...\n.#..#..#...........#..#..#.\n#########.........#########\n#.##.##.#.........#.##.##.#\n.#.....#...........#.....#.\n###...###.........###...###\n#.#...#.#.........#.#...#.#\n\n\n\n\n\n\nSample Input 23 3 3\n###\n#.#\n###\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 311 15 1000000000000000000\n.....#.........\n....###........\n....####.......\n...######......\n...#######.....\n..##.###.##....\n..##########...\n.###.....####..\n.####...######.\n###############\n#.##..##..##..#\n\n\n\n\n\nSample Output 3301811921"}
{"id": "p04025", "problem": "Score : 200 points\n\n\nProblem StatementEvi has N integers a_1,a_2,..,a_N. His objective is to have N equal integers by transforming some of them.\nHe may transform each integer at most once. Transforming an integer x into another integer y costs him (x-y)^2 dollars. Even if a_i=a_j (i\u2260j), he has to pay the cost separately for transforming each of them (See Sample 2).\nFind the minimum total cost to achieve his objective.\n\n\n\n\nConstraints\n1\u2266N\u2266100\n-100\u2266a_i\u2266100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum total cost to achieve Evi's objective.\n\n\n\n\n\n\nSample Input 12\n4 8\n\n\n\n\n\nSample Output 18\n\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\n\n\n\n\n\nSample Input 23\n1 1 3\n\n\n\n\n\nSample Output 23\n\nTransforming the all into 2s will cost (1-2)^2+(1-2)^2+(3-2)^2=3 dollars. Note that Evi has to pay (1-2)^2 dollar separately for transforming each of the two 1s.\n\n\n\n\n\nSample Input 33\n4 2 5\n\n\n\n\n\nSample Output 35\n\nLeaving the 4 as it is and transforming the 2 and the 5 into 4s will achieve the total cost of (2-4)^2+(5-4)^2=5 dollars, which is the minimum.\n\n\n\n\n\nSample Input 44\n-100 -100 -100 -100\n\n\n\n\n\nSample Output 40\n\nWithout transforming anything, Evi's objective is already achieved. Thus, the necessary cost is 0."}
{"id": "p04026", "problem": "Score : 400 points\n\n\nProblem StatementGiven a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. For example, both voodoo and melee are unbalanced, while neither noon nor a is.\nYou are given a string s consisting of lowercase letters. Determine if there exists a (contiguous) substring of s that is unbalanced. If the answer is positive, show a position where such a substring occurs in s.\n\n\n\n\nConstraints\n2 \u2266 |s| \u2266 10^5\ns consists of lowercase letters.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 2 \u2266 N \u2266 100.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputIf there exists no unbalanced substring of s, print -1 -1.\nIf there exists an unbalanced substring of s, let one such substring be s_a s_{a+1} ... s_{b} (1 \u2266 a < b \u2266 |s|), and print a b. If there exists more than one such substring, any of them will be accepted.\n\n\n\n\n\n\nSample Input 1needed\n\n\n\n\n\nSample Output 12 5\n\nThe string s_2 s_3 s_4 s_5 = eede is unbalanced. There are also other unbalanced substrings. For example, the output 2 6 will also be accepted.\n\n\n\n\n\nSample Input 2atcoder\n\n\n\n\n\nSample Output 2-1 -1\n\nThe string atcoder contains no unbalanced substring."}
{"id": "p04027", "problem": "Score : 800 points\n\n\nProblem Statement12:17 (UTC): The sample input 1 and 2 were swapped. The error is now fixed. We are very sorry for your inconvenience.\nThere are N children in AtCoder Kindergarten, conveniently numbered 1 through N. Mr. Evi will distribute C indistinguishable candies to the children.\nIf child i is given a candies, the child's happiness will become x_i^a, where x_i is the child's excitement level. The activity level of the kindergarten is the product of the happiness of all the N children.\nFor each possible way to distribute C candies to the children by giving zero or more candies to each child, calculate the activity level of the kindergarten. Then, calculate the sum over all possible way to distribute C candies. This sum can be seen as a function of the children's excitement levels x_1,..,x_N, thus we call it f(x_1,..,x_N).\nYou are given integers A_i,B_i (1\u2266i\u2266N). Find  modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2266N\u2266400\n1\u2266C\u2266400\n1\u2266A_i\u2266B_i\u2266400 (1\u2266i\u2266N)\n\n\n\n\n\nPartial Score\n400 points will be awarded for passing the test set satisfying A_i=B_i (1\u2266i\u2266N).\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN C\nA_1 A_2 ... A_N\nB_1 B_2 ... B_N\n\n\n\n\n\nOutputPrint the value of  modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 3\n1 1\n1 1\n\n\n\n\n\nSample Output 14\n\nThis case is included in the test set for the partial score, since A_i=B_i.\nWe only have to consider the sum of the activity level of the kindergarten where the excitement level of both child 1 and child 2 are 1 (f(1,1)).\n\nIf child 1 is given 0 candy, and child 2 is given 3 candies, the activity level of the kindergarten is 1^0*1^3=1.\nIf child 1 is given 1 candy, and child 2 is given 2 candies, the activity level of the kindergarten is 1^1*1^2=1.\nIf child 1 is given 2 candies, and child 2 is given 1 candy, the activity level of the kindergarten is 1^2*1^1=1.\nIf child 1 is given 3 candies, and child 2 is given 0 candy, the activity level of the kindergarten is 1^3*1^0=1.\n\nThus, f(1,1)=1+1+1+1=4, and the sum over all f is also 4.\n\n\n\n\n\nSample Input 21 2\n1\n3\n\n\n\n\n\nSample Output 214\n\nSince there is only one child, child 1's happiness itself will be the activity level of the kindergarten. Since the only possible way to distribute 2 candies is to give both candies to child 1, the activity level in this case will become the value of f.\n\nWhen the excitement level of child 1 is 1, f(1)=1^2=1.\nWhen the excitement level of child 1 is 2, f(2)=2^2=4.\nWhen the excitement level of child 1 is 3, f(3)=3^2=9.\n\nThus, the answer is 1+4+9=14.\n\n\n\n\n\nSample Input 32 3\n1 1\n2 2\n\n\n\n\n\nSample Output 366\n\nSince it can be seen that f(1,1)=4 , f(1,2)=15 , f(2,1)=15 , f(2,2)=32, the answer is 4+15+15+32=66.\n\n\n\n\n\nSample Input 44 8\n3 1 4 1\n3 1 4 1\n\n\n\n\n\nSample Output 4421749\n\nThis case is included in the test set for the partial score.\n\n\n\n\n\nSample Input 53 100\n7 6 5\n9 9 9\n\n\n\n\n\nSample Output 5139123417"}
{"id": "p04028", "problem": "Score : 800 points\n\n\nProblem StatementSig has built his own keyboard. Designed for ultimate simplicity, this keyboard only has 3 keys on it: the 0 key, the 1 key and the backspace key.\nTo begin with, he is using a plain text editor with this keyboard. This editor always displays one string (possibly empty). Just after the editor is launched, this string is empty. When each key on the keyboard is pressed, the following changes occur to the string:\n\nThe 0 key: a letter 0 will be inserted to the right of the string.\nThe 1 key: a letter 1 will be inserted to the right of the string.\nThe backspace key: if the string is empty, nothing happens. Otherwise, the rightmost letter of the string is deleted.\n\nSig has launched the editor, and pressed these keys N times in total. As a result, the editor displays a string s. Find the number of such ways to press the keys, modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 5000\n1 \u2266 |s| \u2266 N\ns consists of the letters 0 and 1.\n\n\n\n\n\nPartial Score\n400 points will be awarded for passing the test set satisfying 1 \u2266 N \u2266 300.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\ns\n\n\n\n\n\nOutputPrint the number of the ways to press the keys N times in total such that the editor displays the string s in the end, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n0\n\n\n\n\n\nSample Output 15\n\nWe will denote the backspace key by B. The following 5 ways to press the keys will cause the editor to display the string 0 in the end: 00B, 01B, 0B0, 1B0, BB0. In the last way, nothing will happen when the backspace key is pressed.\n\n\n\n\n\nSample Input 2300\n1100100\n\n\n\n\n\nSample Output 2519054663\n\n\n\n\n\n\nSample Input 35000\n01000001011101000100001101101111011001000110010101110010000\n\n\n\n\n\nSample Output 3500886057"}
{"id": "p04029", "problem": "Score : 100 points\n\n\nProblem StatementThere are N children in AtCoder Kindergarten. Mr. Evi will arrange the children in a line, then give 1 candy to the first child in the line, 2 candies to the second child, ..., N candies to the N-th child. How many candies will be necessary in total?\n\n\n\n\nConstraints\n1\u2266N\u2266100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the necessary number of candies in total.\n\n\n\n\n\n\nSample Input 13\n\n\n\n\n\nSample Output 16\n\nThe answer is 1+2+3=6.\n\n\n\n\n\nSample Input 210\n\n\n\n\n\nSample Output 255\n\nThe sum of the integers from 1 to 10 is 55.\n\n\n\n\n\nSample Input 31\n\n\n\n\n\nSample Output 31\n\nOnly one child. The answer is 1 in this case."}
{"id": "p04030", "problem": "Score : 200 points\n\n\nProblem StatementSig has built his own keyboard. Designed for ultimate simplicity, this keyboard only has 3 keys on it: the 0 key, the 1 key and the backspace key.\nTo begin with, he is using a plain text editor with this keyboard. This editor always displays one string (possibly empty). Just after the editor is launched, this string is empty. When each key on the keyboard is pressed, the following changes occur to the string:\n\nThe 0 key: a letter 0 will be inserted to the right of the string.\nThe 1 key: a letter 1 will be inserted to the right of the string.\nThe backspace key: if the string is empty, nothing happens. Otherwise, the rightmost letter of the string is deleted.\n\nSig has launched the editor, and pressed these keys several times. You are given a string s, which is a record of his keystrokes in order. In this string, the letter 0 stands for the 0 key, the letter 1 stands for the 1 key and the letter B stands for the backspace key. What string is displayed in the editor now?\n\n\n\n\nConstraints\n1 \u2266 |s| \u2266 10 (|s| denotes the length of s)\ns consists of the letters 0, 1 and B.\nThe correct answer is not an empty string.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputPrint the string displayed in the editor in the end.\n\n\n\n\n\n\nSample Input 101B0\n\n\n\n\n\nSample Output 100\n\nEach time the key is pressed, the string in the editor will change as follows: 0, 01, 0, 00.\n\n\n\n\n\nSample Input 20BB1\n\n\n\n\n\nSample Output 21\n\nEach time the key is pressed, the string in the editor will change as follows: 0, (empty), (empty), 1."}
{"id": "p04031", "problem": "Score : 200 points\n\n\nProblem StatementEvi has N integers a_1,a_2,..,a_N. His objective is to have N equal integers by transforming some of them.\nHe may transform each integer at most once. Transforming an integer x into another integer y costs him (x-y)^2 dollars. Even if a_i=a_j (i\u2260j), he has to pay the cost separately for transforming each of them (See Sample 2).\nFind the minimum total cost to achieve his objective.\n\n\n\n\nConstraints\n1\u2266N\u2266100\n-100\u2266a_i\u2266100\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the minimum total cost to achieve Evi's objective.\n\n\n\n\n\n\nSample Input 12\n4 8\n\n\n\n\n\nSample Output 18\n\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\n\n\n\n\n\nSample Input 23\n1 1 3\n\n\n\n\n\nSample Output 23\n\nTransforming the all into 2s will cost (1-2)^2+(1-2)^2+(3-2)^2=3 dollars. Note that Evi has to pay (1-2)^2 dollar separately for transforming each of the two 1s.\n\n\n\n\n\nSample Input 33\n4 2 5\n\n\n\n\n\nSample Output 35\n\nLeaving the 4 as it is and transforming the 2 and the 5 into 4s will achieve the total cost of (2-4)^2+(5-4)^2=5 dollars, which is the minimum.\n\n\n\n\n\nSample Input 44\n-100 -100 -100 -100\n\n\n\n\n\nSample Output 40\n\nWithout transforming anything, Evi's objective is already achieved. Thus, the necessary cost is 0."}
{"id": "p04032", "problem": "Score : 400 points\n\n\nProblem StatementGiven a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. For example, both voodoo and melee are unbalanced, while neither noon nor a is.\nYou are given a string s consisting of lowercase letters. Determine if there exists a (contiguous) substring of s that is unbalanced. If the answer is positive, show a position where such a substring occurs in s.\n\n\n\n\nConstraints\n2 \u2266 |s| \u2266 10^5\ns consists of lowercase letters.\n\n\n\n\n\nPartial Score\n200 points will be awarded for passing the test set satisfying 2 \u2266 N \u2266 100.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\ns\n\n\n\n\n\nOutputIf there exists no unbalanced substring of s, print -1 -1.\nIf there exists an unbalanced substring of s, let one such substring be s_a s_{a+1} ... s_{b} (1 \u2266 a < b \u2266 |s|), and print a b. If there exists more than one such substring, any of them will be accepted.\n\n\n\n\n\n\nSample Input 1needed\n\n\n\n\n\nSample Output 12 5\n\nThe string s_2 s_3 s_4 s_5 = eede is unbalanced. There are also other unbalanced substrings. For example, the output 2 6 will also be accepted.\n\n\n\n\n\nSample Input 2atcoder\n\n\n\n\n\nSample Output 2-1 -1\n\nThe string atcoder contains no unbalanced substring."}
{"id": "p04033", "problem": "Problem StatementYou are given two integers a and b (a\u2264b). Determine if the product of the integers a, a+1, \u2026, b is positive, negative or zero.\n\n\n\n\nConstraints\na and b are integers.\n-10^9\u2264a\u2264b\u226410^9\n\n\n\n\n\nPartial Score\nIn test cases worth 100 points, -10\u2264a\u2264b\u226410.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\na b\n\n\n\n\n\nOutputIf the product is positive, print Positive. If it is negative, print Negative. If it is zero, print Zero.\n\n\n\n\n\n\nSample Input 11 3\n\n\n\n\n\nSample Output 1Positive\n\n1\u00d72\u00d73=6 is positive.\n\n\n\n\n\nSample Input 2-3 -1\n\n\n\n\n\nSample Output 2Negative\n\n(-3)\u00d7(-2)\u00d7(-1)=-6 is negative.\n\n\n\n\n\nSample Input 3-1 1\n\n\n\n\n\nSample Output 3Zero\n\n(-1)\u00d70\u00d71=0."}
{"id": "p04034", "problem": "Problem StatementWe have N boxes, numbered 1 through N. At first, box 1 contains one red ball, and each of the other boxes contains one white ball.\nSnuke will perform the following M operations, one by one. In the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i.\nFind the number of boxes that may contain the red ball after all operations are performed.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n1\u2264M\u226410^5\n1\u2264x_i,y_i\u2264N\nx_i\u2260y_i\nJust before the i-th operation is performed, box x_i contains at least 1 ball.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nx_1 y_1\n:\nx_M y_M\n\n\n\n\n\nOutputPrint the number of boxes that may contain the red ball after all operations are performed.\n\n\n\n\n\n\nSample Input 13 2\n1 2\n2 3\n\n\n\n\n\nSample Output 12\n\nJust after the first operation, box 1 is empty, box 2 contains one red ball and one white ball, and box 3 contains one white ball.\nNow, consider the second operation. If Snuke picks the red ball from box 2, the red ball will go into box 3. If he picks the white ball instead, the red ball will stay in box 2.\nThus, the number of boxes that may contain the red ball after all operations, is 2.\n\n\n\n\n\nSample Input 23 3\n1 2\n2 3\n2 3\n\n\n\n\n\nSample Output 21\n\nAll balls will go into box 3.\n\n\n\n\n\nSample Input 34 4\n1 2\n2 3\n4 1\n3 4\n\n\n\n\n\nSample Output 33"}
{"id": "p04035", "problem": "Problem StatementWe have N pieces of ropes, numbered 1 through N. The length of piece i is a_i.\nAt first, for each i (1\u2264i\u2264N-1), piece i and piece i+1 are tied at the ends, forming one long rope with N-1 knots. Snuke will try to untie all of the knots by performing the following operation repeatedly:\n\nChoose a (connected) rope with a total length of at least L, then untie one of its knots.\n\nIs it possible to untie all of the N-1 knots by properly applying this operation? If the answer is positive, find one possible order to untie the knots.\n\n\n\n\nConstraints\n2\u2264N\u226410^5\n1\u2264L\u226410^9\n1\u2264a_i\u226410^9\nAll input values are integers.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN L\na_1 a_2 ... a_n\n\n\n\n\n\nOutputIf it is not possible to untie all of the N-1 knots, print Impossible.\nIf it is possible to untie all of the knots, print Possible, then print another N-1 lines that describe a possible order to untie the knots. The j-th of those N-1 lines should contain the index of the knot that is untied in the j-th operation. Here, the index of the knot connecting piece i and piece i+1 is i.\nIf there is more than one solution, output any.\n\n\n\n\n\n\nSample Input 13 50\n30 20 10\n\n\n\n\n\nSample Output 1Possible\n2\n1\n\nIf the knot 1 is untied first, the knot 2 will become impossible to untie.\n\n\n\n\n\nSample Input 22 21\n10 10\n\n\n\n\n\nSample Output 2Impossible\n\n\n\n\n\n\nSample Input 35 50\n10 20 30 40 50\n\n\n\n\n\nSample Output 3Possible\n1\n2\n3\n4\n\nAnother example of a possible solution is 3, 4, 1, 2."}
{"id": "p04036", "problem": "Problem StatementWe have an undirected graph with N vertices and M edges. The vertices are numbered 1 through N, and the edges are numbered 1 through M. Edge i connects vertices a_i and b_i. The graph is connected.\nOn this graph, Q pairs of brothers are participating in an activity called Stamp Rally. The Stamp Rally for the i-th pair will be as follows:\n\nOne brother starts from vertex x_i, and the other starts from vertex y_i.\nThe two explore the graph along the edges to visit z_i vertices in total, including the starting vertices. Here, a vertex is counted only once, even if it is visited multiple times, or visited by both brothers.\nThe score is defined as the largest index of the edges traversed by either of them. Their objective is to minimize this value.\n\nFind the minimum possible score for each pair.\n\n\n\n\nConstraints\n3\u2264N\u226410^5\nN\u22121\u2264M\u226410^5\n1\u2264a_i<b_i\u2264N\nThe given graph is connected.\n1\u2264Q\u226410^5\n1\u2264x_j<y_j\u2264N\n3\u2264z_j\u2264N\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\nQ\nx_1 y_1 z_1\nx_2 y_2 z_2\n:\nx_Q y_Q z_Q\n\n\n\n\n\nOutputPrint Q lines. The i-th line should contain the minimum possible score for the i-th pair of brothers.\n\n\n\n\n\n\nSample Input 15 6\n2 3\n4 5\n1 2\n1 3\n1 4\n1 5\n6\n2 4 3\n2 4 4\n2 4 5\n1 3 3\n1 3 4\n1 3 5\n\n\n\n\n\nSample Output 11\n2\n3\n1\n5\n5"}
{"id": "p04037", "problem": "Problem StatementThere are N piles of candies on the table. The piles are numbered 1 through N. At first, pile i contains a_i candies.\nSnuke and Ciel are playing a game. They take alternating turns. Snuke goes first. In each turn, the current player must perform one of the following two operations:\n\nChoose a pile with the largest number of candies remaining, then eat all candies of that pile.\nFrom each pile with one or more candies remaining, eat one candy.\n\nThe player who eats the last candy on the table, loses the game. Determine which player will win if both players play the game optimally.\n\n\n\n\nConstraints\n1\u2264N\u226410^5\n1\u2264a_i\u226410^9\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\na_1 a_2 \u2026 a_N\n\n\n\n\n\nOutputIf Snuke will win, print First. If Ciel will win, print Second.\n\n\n\n\n\n\nSample Input 12\n1 3\n\n\n\n\n\nSample Output 1First\n\nAt the beginning of the game, pile 2 contains the most candies. If Snuke eats all candies of this pile, Ciel has no choice but to eat the last candy.\n\n\n\n\n\nSample Input 23\n1 2 1\n\n\n\n\n\nSample Output 2First\n\nIf Snuke eats one candy from each pile, Ciel is again left with the last candy.\n\n\n\n\n\nSample Input 33\n1 2 3\n\n\n\n\n\nSample Output 3Second"}
{"id": "p04038", "problem": "Problem StatementSnuke loves colorful balls. He has a total of N\u00d7K balls, K in each of his favorite N colors. The colors are numbered 1 through N.\nHe will arrange all of the balls in a row from left to right, in arbitrary order. Then, for each of the N colors, he will paint the leftmost ball of that color into color 0, a color different from any of the N original colors.\nAfter painting, how many sequences of the colors of the balls are possible? Find this number modulo 10^9+7.\n\n\n\n\nConstraints\n1\u2264N,K\u22642,000\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the number of the possible sequences of the colors of the balls after painting, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 2\n\n\n\n\n\nSample Output 14\n\nThe following 4 sequences are possible:\n\n(0,1,0,2)\n(0,0,1,2)\n(0,2,0,1)\n(0,0,2,1)\n\n\n\n\n\n\nSample Input 23 1\n\n\n\n\n\nSample Output 21\n\nThe following 1 sequence is possible:\n\n(0,0,0)\n\n\n\n\n\n\nSample Input 32 3\n\n\n\n\n\nSample Output 314\n\n\n\n\n\n\nSample Input 42000 2000\n\n\n\n\n\nSample Output 4546381702"}
{"id": "p04039", "problem": "Score : 300 points\n\n\nProblem StatementIroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K.\nShe is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change).\nHowever, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money.\nFind the amount of money that she will hand to the cashier.\n\n\n\n\nConstraints\n 1 \u2266 N < 10000\n 1 \u2266 K < 10\n 0 \u2266 D_1 < D_2 < \u2026 < D_K\u22669\n\\{D_1,D_2,...,D_K\\} \u2260 \\{1,2,3,4,5,6,7,8,9\\}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nD_1 D_2 \u2026 D_K\n\n\n\n\n\nOutputPrint the amount of money that Iroha will hand to the cashier.\n\n\n\n\n\n\nSample Input 11000 8\n1 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 12000\n\nShe dislikes all digits except 0 and 2.\nThe smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.\n\n\n\n\n\nSample Input 29999 1\n0\n\n\n\n\n\nSample Output 29999"}
{"id": "p04040", "problem": "Score : 400 points\n\n\nProblem StatementWe have a large square grid with H rows and W columns.\nIroha is now standing in the top-left cell.\nShe will repeat going right or down to the adjacent cell, until she reaches the bottom-right cell.\nHowever, she cannot enter the cells in the intersection of the bottom A rows and the leftmost B columns. (That is, there are A\u00d7B forbidden cells.) There is no restriction on entering the other cells.\nFind the number of ways she can travel to the bottom-right cell.\nSince this number can be extremely large, print the number modulo 10^9+7.\n\n\n\n\nConstraints\n 1 \u2266 H, W \u2266 100,000\n 1 \u2266 A < H\n 1 \u2266 B < W\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W A B\n\n\n\n\n\nOutputPrint the number of ways she can travel to the bottom-right cell, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 3 1 1\n\n\n\n\n\nSample Output 12\n\nWe have a 2\u00d73 grid, but entering the bottom-left cell is forbidden. The number of ways to travel is two: \"Right, Right, Down\" and \"Right, Down, Right\".\n\n\n\n\n\nSample Input 210 7 3 4\n\n\n\n\n\nSample Output 23570\n\nThere are 12 forbidden cells.\n\n\n\n\n\nSample Input 3100000 100000 99999 99999\n\n\n\n\n\nSample Output 31\n\n\n\n\n\n\nSample Input 4100000 100000 44444 55555\n\n\n\n\n\nSample Output 4738162020"}
{"id": "p04041", "problem": "Score : 700 points\n\n\nProblem StatementHaiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order.\nIroha is looking for X,Y,Z-Haiku (defined below) in integer sequences.\nConsider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku?\nHere, an integer sequence a_0, a_1, ..., a_{N-1} is said to contain an X,Y,Z-Haiku if and only if there exist four indices x, y, z, w (0 \u2266 x < y < z < w \u2266 N) such that all of the following are satisfied:\n\na_x + a_{x+1} + ... + a_{y-1} = X\na_y + a_{y+1} + ... + a_{z-1} = Y\na_z + a_{z+1} + ... + a_{w-1} = Z\n\nSince the answer can be extremely large, print the number modulo 10^9+7.\n\n\n\n\nConstraints\n3 \u2266 N \u2266 40\n1 \u2266 X \u2266 5\n1 \u2266 Y \u2266 7\n1 \u2266 Z \u2266 5\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN X Y Z\n\n\n\n\n\nOutputPrint the number of the sequences that contain an X,Y,Z-Haiku, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 5 7 5\n\n\n\n\n\nSample Output 11\n\nHere, the only sequence that contains a 5,7,5-Haiku is [5, 7, 5].\n\n\n\n\n\nSample Input 24 5 7 5\n\n\n\n\n\nSample Output 234\n\n\n\n\n\n\nSample Input 337 4 2 3\n\n\n\n\n\nSample Output 3863912418\n\n\n\n\n\n\nSample Input 440 5 7 5\n\n\n\n\n\nSample Output 4562805100"}
{"id": "p04042", "problem": "Score : 1500 points\n\n\nProblem StatementIroha has a sequence of N strings s_1, s_2, ..., s_N.\nShe will choose some (possibly all) strings from the sequence, then concatenate those strings retaining the relative order, to produce a long string.\nAmong all strings of length K that she can produce in this way, find the lexicographically smallest one.\n\n\n\n\nConstraints\n1 \u2266 N \u2266 2000\n1 \u2266 K \u2266 10^4\nFor each i, 1 \u2266 |s_i| \u2266 K.\n|s_1| + |s_2| + ... + |s_N| \u2266 10^6\nFor each i, s_i consists of lowercase letters.\nThere exists at least one string of length K that Iroha can produce.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\ns_1\ns_2\n:\ns_N\n\n\n\n\n\nOutputPrint the lexicographically smallest string of length K that Iroha can produce.\n\n\n\n\n\n\nSample Input 13 7\nat\ncoder\ncodar\n\n\n\n\n\nSample Output 1atcodar\n\nat and codar should be chosen.\n\n\n\n\n\nSample Input 23 7\ncoder\ncodar\nat\n\n\n\n\n\nSample Output 2codarat\n\ncodar and at should be chosen.\n\n\n\n\n\nSample Input 34 13\nkyuri\nnamida\nzzzzzzz\naaaaaa\n\n\n\n\n\nSample Output 3namidazzzzzzz\n\nnamida and zzzzzzz should be chosen."}
{"id": "p04043", "problem": "Score : 100 points\n\n\nProblem StatementIroha loves Haiku. Haiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order.\nTo create a Haiku, Iroha has come up with three different phrases. These phrases have A, B and C syllables, respectively. Determine whether she can construct a Haiku by using each of the phrases once, in some order.\n\n\n\n\nConstraints\n1\u2266A,B,C\u226610\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nA B C\n\n\n\n\n\nOutputIf it is possible to construct a Haiku by using each of the phrases once, print YES (case-sensitive). Otherwise, print NO.\n\n\n\n\n\n\nSample Input 15 5 7\n\n\n\n\n\nSample Output 1YES\n\nUsing three phrases of length 5, 5 and 7, it is possible to construct a Haiku.\n\n\n\n\n\nSample Input 27 7 5\n\n\n\n\n\nSample Output 2NO"}
{"id": "p04044", "problem": "Score : 200 points\n\n\nProblem StatementIroha has a sequence of N strings S_1, S_2, ..., S_N. The length of each string is L.\nShe will concatenate all of the strings in some order, to produce a long string.\nAmong all strings that she can produce in this way, find the lexicographically smallest one.\nHere, a string s=s_1s_2s_3...s_n is lexicographically smaller than another string t=t_1t_2t_3...t_m if and only if one of the following holds:\n\nThere exists an index i(1\u2266i\u2266min(n,m)), such that s_j = t_j for all indices j(1\u2266j<i), and s_i<t_i.\ns_i = t_i for all integers i(1\u2266i\u2266min(n,m)), and n<m.\n\n\n\n\n\nConstraints\n1 \u2266 N, L \u2266 100\nFor each i, the length of S_i equals L.\nFor each i, S_i consists of lowercase letters.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN L\nS_1\nS_2\n:\nS_N\n\n\n\n\n\nOutputPrint the lexicographically smallest string that Iroha can produce.\n\n\n\n\n\n\nSample Input 13 3\ndxx\naxx\ncxx\n\n\n\n\n\nSample Output 1axxcxxdxx\n\nThe following order should be used: axx, cxx, dxx."}
{"id": "p04045", "problem": "Score : 300 points\n\n\nProblem StatementIroha is very particular about numbers. There are K digits that she dislikes: D_1, D_2, ..., D_K.\nShe is shopping, and now paying at the cashier.\nHer total is N yen (the currency of Japan), thus she has to hand at least N yen to the cashier (and possibly receive the change).\nHowever, as mentioned before, she is very particular about numbers. When she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. Under this condition, she will hand the minimum amount of money.\nFind the amount of money that she will hand to the cashier.\n\n\n\n\nConstraints\n 1 \u2266 N < 10000\n 1 \u2266 K < 10\n 0 \u2266 D_1 < D_2 < \u2026 < D_K\u22669\n\\{D_1,D_2,...,D_K\\} \u2260 \\{1,2,3,4,5,6,7,8,9\\}\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nD_1 D_2 \u2026 D_K\n\n\n\n\n\nOutputPrint the amount of money that Iroha will hand to the cashier.\n\n\n\n\n\n\nSample Input 11000 8\n1 3 4 5 6 7 8 9\n\n\n\n\n\nSample Output 12000\n\nShe dislikes all digits except 0 and 2.\nThe smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.\n\n\n\n\n\nSample Input 29999 1\n0\n\n\n\n\n\nSample Output 29999"}
{"id": "p04046", "problem": "Score : 400 points\n\n\nProblem StatementWe have a large square grid with H rows and W columns.\nIroha is now standing in the top-left cell.\nShe will repeat going right or down to the adjacent cell, until she reaches the bottom-right cell.\nHowever, she cannot enter the cells in the intersection of the bottom A rows and the leftmost B columns. (That is, there are A\u00d7B forbidden cells.) There is no restriction on entering the other cells.\nFind the number of ways she can travel to the bottom-right cell.\nSince this number can be extremely large, print the number modulo 10^9+7.\n\n\n\n\nConstraints\n 1 \u2266 H, W \u2266 100,000\n 1 \u2266 A < H\n 1 \u2266 B < W\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nH W A B\n\n\n\n\n\nOutputPrint the number of ways she can travel to the bottom-right cell, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 12 3 1 1\n\n\n\n\n\nSample Output 12\n\nWe have a 2\u00d73 grid, but entering the bottom-left cell is forbidden. The number of ways to travel is two: \"Right, Right, Down\" and \"Right, Down, Right\".\n\n\n\n\n\nSample Input 210 7 3 4\n\n\n\n\n\nSample Output 23570\n\nThere are 12 forbidden cells.\n\n\n\n\n\nSample Input 3100000 100000 99999 99999\n\n\n\n\n\nSample Output 31\n\n\n\n\n\n\nSample Input 4100000 100000 44444 55555\n\n\n\n\n\nSample Output 4738162020"}
{"id": "p04047", "problem": "Score : 200 points\n\n\nProblem StatementSnuke is having a barbeque party.\nAt the party, he will make N servings of Skewer Meal.\n\n\nExample of a serving of Skewer Meal\n\nHe has a stock of 2N skewers, all of which will be used in Skewer Meal. The length of the i-th skewer is L_i.\nAlso, he has an infinite supply of ingredients.\nTo make a serving of Skewer Meal, he picks 2 skewers and threads ingredients onto those skewers.\nLet the length of the shorter skewer be x, then the serving can hold the maximum of x ingredients.\nWhat is the maximum total number of ingredients that his N servings of Skewer Meal can hold, if he uses the skewers optimally?\n\n\n\n\nConstraints\n1\u2266N\u2266100\n1\u2266L_i\u2266100\nFor each i, L_i is an integer.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nL_1 L_2 ... L_{2N}\n\n\n\n\n\nOutputPrint the maximum total number of ingredients that Snuke's N servings of Skewer Meal can hold.\n\n\n\n\n\n\nSample Input 12\n1 3 1 2\n\n\n\n\n\nSample Output 13\n\nIf he makes a serving using the first and third skewers, and another using the second and fourth skewers, each serving will hold 1 and 2 ingredients, for the total of 3.\n\n\n\n\n\nSample Input 25\n100 1 2 3 14 15 58 58 58 29\n\n\n\n\n\nSample Output 2135"}
{"id": "p04048", "problem": "Score : 500 points\n\n\nProblem StatementSnuke is conducting an optical experiment using mirrors and his new invention, the rifle of Mysterious Light.\nThree mirrors of length N are set so that they form an equilateral triangle.\nLet the vertices of the triangle be a, b and c.\nInside the triangle, the rifle is placed at the point p on segment ab such that ap = X.\n(The size of the rifle is negligible.)\nNow, the rifle is about to fire a ray of Mysterious Light in the direction of bc.\nThe ray of Mysterious Light will travel in a straight line, and will be reflected by mirrors, in the same ways as \"ordinary\" light.\nThere is one major difference, though: it will be also reflected by its own trajectory as if it is a mirror!\nWhen the ray comes back to the rifle, the ray will be absorbed.\nThe following image shows the ray's trajectory where N = 5 and X = 2.\n\n\n\nIt can be shown that the ray eventually comes back to the rifle and is absorbed, regardless of the values of N and X.\nFind the total length of the ray's trajectory.\n\n\n\n\nConstraints\n2\u2266N\u226610^{12}\n1\u2266X\u2266N-1\nN and X are integers.\n\n\n\n\n\nPartial Points\n300 points will be awarded for passing the test set satisfying N\u22661000.\nAnother 200 points will be awarded for passing the test set without additional constraints.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN X\n\n\n\n\n\nOutputPrint the total length of the ray's trajectory.\n\n\n\n\n\n\nSample Input 15 2\n\n\n\n\n\nSample Output 112\n\nRefer to the image in the Problem Statement section.\nThe total length of the trajectory is 2+3+2+2+1+1+1 = 12."}
{"id": "p04049", "problem": "Score : 600 points\n\n\nProblem StatementGiven an undirected tree, let the distance between vertices u and v be the\nnumber of edges on the simple path from u to v.\nThe diameter of a tree is the maximum among the distances between any two vertices.\nWe will call a tree good if and only if its diameter is at most K.\nYou are given an undirected tree with N vertices numbered 1 through N.\nFor each i (1\u2266i\u2266N-1), there is an edge connecting vertices A_i and B_i.\nYou want to remove zero or more vertices from the tree, so that the resulting tree is good.\nWhen a vertex is removed, all incident edges will also be removed.\nThe resulting graph must be connected.\nFind the minimum number of vertices that you need to remove in order to produce a good tree.\n\n\n\n\nConstraints\n2\u2266N\u22662000\n1\u2266K\u2266N-1\n1\u2266A_i\u2266N, 1\u2266B_i\u2266N\nThe graph defined by A_i and B_i is a tree.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nA_1 B_1\nA_2 B_2\n:\nA_{N-1} B_{N-1}\n\n\n\n\n\nOutputPrint the minimum number of vertices that you need to remove in order to produce a good tree.\n\n\n\n\n\n\nSample Input 16 2\n1 2\n3 2\n4 2\n1 6\n5 6\n\n\n\n\n\nSample Output 12\n\nThe tree is shown below. Removing vertices 5 and 6 will result in a good tree with the diameter of 2.\n\n\n\n\n\n\n\n\nSample Input 26 5\n1 2\n3 2\n4 2\n1 6\n5 6\n\n\n\n\n\nSample Output 20\n\nSince the given tree is already good, you do not need to remove any vertex."}
{"id": "p04050", "problem": "Score : 1000 points\n\n\nProblem StatementSnuke got a present from his mother on his birthday.\nThe present was a pair of two sequences a and b, consisting of positive integers.\nThey satisfied all of the following properties:\n\nThe sum of all elements of a is N.\nThe sum of all elements of b is N.\nAny string of length N that satisfies the following two conditions (1) and (2) will also satisfy the condition (3).\n\n(1) Any of the following forms a palindrome: the first a_1 letters, the following a_2 letters, the following a_3 letters and so on.\n(2) Any of the following forms a palindrome: the first b_1 letters, the following b_2 letters, the following b_3 letters and so on.\n(3) All N letters are the same.\n\n\nHe was happy, until one day he lost both of the sequences.\nNow, he only remembers that the sequence a was a permutation of another sequence A of length M.\nTo bring him happiness again, his mother has decided to give him another pair of sequences a and b that satisfies his favorite properties and is consistent with his memory.\n\n\n\n\nConstraints\n1\u2266N\u226610^5\n1\u2266M\u2266100\n1\u2266A_i\u226610^5\nThe sum of all A_i equals N.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN M\nA_1 A_2 ... A_M\n\n\n\n\n\nOutputIf there exists a pair of sequences a and b that satisfies the properties and is consistent with Snuke's memory, print three lines. The first line must contain the sequence a, the second line must contain the length of the sequence b, and the third line must contain the sequence b.\nIf such a pair does not exist (because Snuke's memory is wrong or some other reason), print a single line containing the word Impossible (case-sensitive).\n\n\n\n\n\n\nSample Input 13 2\n2 1\n\n\n\n\n\nSample Output 11 2\n1\n3\n\n\n\n\n\n\nSample Input 26 1\n6\n\n\n\n\n\nSample Output 26\n3\n1 2 3\n\n\n\n\n\n\nSample Input 355 10\n1 2 3 4 5 6 7 8 9 10\n\n\n\n\n\nSample Output 3Impossible"}
{"id": "p04051", "problem": "Score : 1400 points\n\n\nProblem StatementSnuke is having another barbeque party.\nThis time, he will make one serving of Skewer Meal.\nHe has a stock of N Skewer Meal Packs. The i-th Skewer Meal Pack contains one skewer, A_i pieces of beef and B_i pieces of green pepper.\nAll skewers in these packs are different and distinguishable, while all pieces of beef and all pieces of green pepper are, respectively, indistinguishable.\nTo make a Skewer Meal, he chooses two of his Skewer Meal Packs, and takes out all of the contents from the chosen packs, that is, two skewers and some pieces of beef or green pepper.\n(Remaining Skewer Meal Packs will not be used.)\nThen, all those pieces of food are threaded onto both skewers, one by one, in any order.\n(See the image in the Sample section for better understanding.)\nIn how many different ways can he make a Skewer Meal? Two ways of making a Skewer Meal is different if and only if the sets of the used skewers are different, or the orders of the pieces of food are different.\nSince this number can be extremely large, find it modulo 10^9+7.\n\n\n\n\nConstraints\n2\u2266N\u2266200,000\n1\u2266A_i\u22662000, 1\u2266B_i\u22662000\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN\nA_1 B_1\nA_2 B_2\n:\nA_N B_N\n\n\n\n\n\nOutputPrint the number of the different ways Snuke can make a serving of Skewer Meal, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13\n1 1\n1 1\n2 1\n\n\n\n\n\nSample Output 126\n\nThe 26 ways of making a Skewer Meal are shown below.\nGray bars represent skewers, each with a number denoting the Skewer Meal Set that contained the skewer.\nBrown and green rectangles represent pieces of beef and green pepper, respectively."}
{"id": "p04052", "problem": "Score : 2000 points\n\n\nProblem StatementYou are given a permutation P_1 ... P_N of the set {1, 2, ..., N}.\nYou can apply the following operation to this permutation, any number of times (possibly zero):\n\nChoose two indices i,j (1 \u2266 i < j \u2266 N), such that j - i \u2267 K and |P_i - P_j| = 1.\nThen, swap the values of P_i and P_j.\n\nAmong all permutations that can be obtained by applying this operation to the given permutation, find the lexicographically smallest one.\n\n\n\n\nConstraints\n2\u2266N\u2266500,000\n1\u2266K\u2266N-1\nP is a permutation of the set {1, 2, ..., N}.\n\n\n\n\n\n\n\nInputThe input is given from Standard Input in the following format:\nN K\nP_1 P_2 ... P_N\n\n\n\n\n\nOutputPrint the lexicographically smallest permutation that can be obtained.\n\n\n\n\n\n\nSample Input 14 2\n4 2 3 1\n\n\n\n\n\nSample Output 12\n1\n4\n3\n\nOne possible way to obtain the lexicographically smallest permutation is shown below:\n\n4 2 3 1\n4 1 3 2\n3 1 4 2\n2 1 4 3\n\n\n\n\n\n\nSample Input 25 1\n5 4 3 2 1\n\n\n\n\n\nSample Output 21\n2\n3\n4\n5\n\n\n\n\n\n\nSample Input 38 3\n4 5 7 8 3 1 2 6\n\n\n\n\n\nSample Output 31\n2\n6\n7\n5\n3\n4\n8"}