{"custom_id": "p02091_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nD: XORANDORBAN\nProblem Statement\nYou are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions:\n\n All the integers in S are at least 0  and less than 2^{N+1}.\n All the integers in S are distinct.\n You are also given three integers X, A, and O, where 0 \\leq X, A, O < 2^{N+1}. Then, any two integers (a, b) in S must satisfy a {\\it xor} b \\neq X, a {\\it and} b \\neq A, a {\\it or} b \\neq O, where {\\it xor}, {\\it and}, {\\it or} are bitwise xor, bitwise and, bitwise or, respectively. Note that a and b are not necessarily different.\n\nInput\nN X A O\nConstraints\n\n 1 \\leq N \\leq 13\n 0 \\leq X, A, O < 2^{N+1}\n Inputs consist only of integers.\n\nOutput\nIf there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them.\nSample Input 1\n2 6 1 5\nOutput for Sample Input 1\n\nYes\n0 3 4 7\n\nSample Input 2\n3 0 5 1\nOutput for Sample Input 2\nNo\nSample Input 3\n3 4 2 5\nOutput for Sample Input 3\n\nYes\n1 0 6 15 8 9 14 7"}], "max_tokens": 2048}}
{"custom_id": "p02091_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nD: XORANDORBAN\nProblem Statement\nYou are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions:\n\n All the integers in S are at least 0  and less than 2^{N+1}.\n All the integers in S are distinct.\n You are also given three integers X, A, and O, where 0 \\leq X, A, O < 2^{N+1}. Then, any two integers (a, b) in S must satisfy a {\\it xor} b \\neq X, a {\\it and} b \\neq A, a {\\it or} b \\neq O, where {\\it xor}, {\\it and}, {\\it or} are bitwise xor, bitwise and, bitwise or, respectively. Note that a and b are not necessarily different.\n\nInput\nN X A O\nConstraints\n\n 1 \\leq N \\leq 13\n 0 \\leq X, A, O < 2^{N+1}\n Inputs consist only of integers.\n\nOutput\nIf there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them.\nSample Input 1\n2 6 1 5\nOutput for Sample Input 1\n\nYes\n0 3 4 7\n\nSample Input 2\n3 0 5 1\nOutput for Sample Input 2\nNo\nSample Input 3\n3 4 2 5\nOutput for Sample Input 3\n\nYes\n1 0 6 15 8 9 14 7"}], "max_tokens": 2048}}
{"custom_id": "p02091_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nD: XORANDORBAN\nProblem Statement\nYou are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions:\n\n All the integers in S are at least 0  and less than 2^{N+1}.\n All the integers in S are distinct.\n You are also given three integers X, A, and O, where 0 \\leq X, A, O < 2^{N+1}. Then, any two integers (a, b) in S must satisfy a {\\it xor} b \\neq X, a {\\it and} b \\neq A, a {\\it or} b \\neq O, where {\\it xor}, {\\it and}, {\\it or} are bitwise xor, bitwise and, bitwise or, respectively. Note that a and b are not necessarily different.\n\nInput\nN X A O\nConstraints\n\n 1 \\leq N \\leq 13\n 0 \\leq X, A, O < 2^{N+1}\n Inputs consist only of integers.\n\nOutput\nIf there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them.\nSample Input 1\n2 6 1 5\nOutput for Sample Input 1\n\nYes\n0 3 4 7\n\nSample Input 2\n3 0 5 1\nOutput for Sample Input 2\nNo\nSample Input 3\n3 4 2 5\nOutput for Sample Input 3\n\nYes\n1 0 6 15 8 9 14 7"}], "max_tokens": 2048}}
{"custom_id": "p02091_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nD: XORANDORBAN\nProblem Statement\nYou are given a positive integer N. Your task is to determine a set S of 2^N integers satisfying the following conditions:\n\n All the integers in S are at least 0  and less than 2^{N+1}.\n All the integers in S are distinct.\n You are also given three integers X, A, and O, where 0 \\leq X, A, O < 2^{N+1}. Then, any two integers (a, b) in S must satisfy a {\\it xor} b \\neq X, a {\\it and} b \\neq A, a {\\it or} b \\neq O, where {\\it xor}, {\\it and}, {\\it or} are bitwise xor, bitwise and, bitwise or, respectively. Note that a and b are not necessarily different.\n\nInput\nN X A O\nConstraints\n\n 1 \\leq N \\leq 13\n 0 \\leq X, A, O < 2^{N+1}\n Inputs consist only of integers.\n\nOutput\nIf there is no set satisfying the conditions mentioned in the problem statement, output No in a line. Otherwise, output Yes in the first line, and then output 2^N integers in such a set in the second line. If there are multiple sets satisfying the conditions, you can output any of them.\nSample Input 1\n2 6 1 5\nOutput for Sample Input 1\n\nYes\n0 3 4 7\n\nSample Input 2\n3 0 5 1\nOutput for Sample Input 2\nNo\nSample Input 3\n3 4 2 5\nOutput for Sample Input 3\n\nYes\n1 0 6 15 8 9 14 7"}], "max_tokens": 2048}}
{"custom_id": "p02092_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nE: Red Black Balloons\nStory\nHomura-chan's dream comes true. It means ICPC Asia regional contest 20xx will be held in Sapporo! Homura-chan has been working hard for the preparation. And finally, it's the previous day of the contest. Homura-chan started to stock balloons to be delivered to contestants who get accepted. However, she noticed that there were only two colors of balloons: red and black.\nProblem Statement\nICPC Asia regional contest in Sapporo plans to provide N problems to contestants. Homura-chan is a professional of contest preparation, so she already knows how many contestants would get acceptance for each problem (!!), a_i contestants for the i-th problem. You can assume the prediction is perfectly accurate. Ideally, Homura-chan would assign a distinct color of a balloon to each problem respectively. But you know, she has only two colors red and black now. Thus, Homura-chan comes up with the idea to differentiate the size of balloons in K levels, that is, each problem has a balloon with a distinct pair of (color, size).\nHomura-chan now has r_i red balloons with size i (1 \\leq i \\leq K) and b_j black balloons with size j (1 \\leq j \\leq K). Suppose we assign a pair (c_i, s_i) of a color c_i (red or black) and a size s_i to the i-th problem, for each i. As noted, we have to assign distinct pairs to each problem, more precisely, (c_i, s_i) \\neq (c_j, s_j) holds for i \\neq j. Moreover, the number of balloons with (c_i, s_i) must be no less than a_i. In the case that there are no such assignments, Homura-chan can change the size of balloons by her magic power. Note that Homura-chan doesn't know magic to change the color of balloons, so it's impossible.\nYour task is to write a program computing the minimum number of balloons whose size is changed by Homura-chan's magic to realize an assignment satisfying the above-mentioned conditions. If there is no way to achieve such an assignment even if Homura-chan changes the size of balloons infinitely, output -1 instead.\nInput\n\nN K\na_1 ... a_N\nr_1 ... r_K\nb_1 ... b_K\n\nConstraints\n\n 1 \\leq N,K \\leq 60\n N \\leq 2K\n 1 \\leq a_i \\leq 50 (1 \\leq i \\leq N) \n 1 \\leq r_j,b_j \\leq 50 (1 \\leq j \\leq K) \n Inputs consist only of integers.\n\nOutput\nOutput the minimum number of balloons whose size is changed to achieve an assignment in a line. If there are no ways to achieve assignments, output -1 instead.\nSample Input 1\n\n3 2\n6 5 4\n8 1\n7 1\n\nOutput for Sample Input 1\n3\nHomura-chan changes the size of three red balloons from 1 to 2.  Then she can assign (black,1) to the problem 1, (red,1) to the problem 2, and (red,2) to the problem 3.\nSample Input 2\n\n2 1\n50 50\n2\n3\n\nOutput for Sample Input 2\n-1\nSample Input 3\n\n4 3\n3 10 28 43\n40 18 2\n26 7 11\n\nOutput for Sample Input 3\n5"}], "max_tokens": 2048}}
{"custom_id": "p02092_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nE: Red Black Balloons\nStory\nHomura-chan's dream comes true. It means ICPC Asia regional contest 20xx will be held in Sapporo! Homura-chan has been working hard for the preparation. And finally, it's the previous day of the contest. Homura-chan started to stock balloons to be delivered to contestants who get accepted. However, she noticed that there were only two colors of balloons: red and black.\nProblem Statement\nICPC Asia regional contest in Sapporo plans to provide N problems to contestants. Homura-chan is a professional of contest preparation, so she already knows how many contestants would get acceptance for each problem (!!), a_i contestants for the i-th problem. You can assume the prediction is perfectly accurate. Ideally, Homura-chan would assign a distinct color of a balloon to each problem respectively. But you know, she has only two colors red and black now. Thus, Homura-chan comes up with the idea to differentiate the size of balloons in K levels, that is, each problem has a balloon with a distinct pair of (color, size).\nHomura-chan now has r_i red balloons with size i (1 \\leq i \\leq K) and b_j black balloons with size j (1 \\leq j \\leq K). Suppose we assign a pair (c_i, s_i) of a color c_i (red or black) and a size s_i to the i-th problem, for each i. As noted, we have to assign distinct pairs to each problem, more precisely, (c_i, s_i) \\neq (c_j, s_j) holds for i \\neq j. Moreover, the number of balloons with (c_i, s_i) must be no less than a_i. In the case that there are no such assignments, Homura-chan can change the size of balloons by her magic power. Note that Homura-chan doesn't know magic to change the color of balloons, so it's impossible.\nYour task is to write a program computing the minimum number of balloons whose size is changed by Homura-chan's magic to realize an assignment satisfying the above-mentioned conditions. If there is no way to achieve such an assignment even if Homura-chan changes the size of balloons infinitely, output -1 instead.\nInput\n\nN K\na_1 ... a_N\nr_1 ... r_K\nb_1 ... b_K\n\nConstraints\n\n 1 \\leq N,K \\leq 60\n N \\leq 2K\n 1 \\leq a_i \\leq 50 (1 \\leq i \\leq N) \n 1 \\leq r_j,b_j \\leq 50 (1 \\leq j \\leq K) \n Inputs consist only of integers.\n\nOutput\nOutput the minimum number of balloons whose size is changed to achieve an assignment in a line. If there are no ways to achieve assignments, output -1 instead.\nSample Input 1\n\n3 2\n6 5 4\n8 1\n7 1\n\nOutput for Sample Input 1\n3\nHomura-chan changes the size of three red balloons from 1 to 2.  Then she can assign (black,1) to the problem 1, (red,1) to the problem 2, and (red,2) to the problem 3.\nSample Input 2\n\n2 1\n50 50\n2\n3\n\nOutput for Sample Input 2\n-1\nSample Input 3\n\n4 3\n3 10 28 43\n40 18 2\n26 7 11\n\nOutput for Sample Input 3\n5"}], "max_tokens": 2048}}
{"custom_id": "p02092_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nE: Red Black Balloons\nStory\nHomura-chan's dream comes true. It means ICPC Asia regional contest 20xx will be held in Sapporo! Homura-chan has been working hard for the preparation. And finally, it's the previous day of the contest. Homura-chan started to stock balloons to be delivered to contestants who get accepted. However, she noticed that there were only two colors of balloons: red and black.\nProblem Statement\nICPC Asia regional contest in Sapporo plans to provide N problems to contestants. Homura-chan is a professional of contest preparation, so she already knows how many contestants would get acceptance for each problem (!!), a_i contestants for the i-th problem. You can assume the prediction is perfectly accurate. Ideally, Homura-chan would assign a distinct color of a balloon to each problem respectively. But you know, she has only two colors red and black now. Thus, Homura-chan comes up with the idea to differentiate the size of balloons in K levels, that is, each problem has a balloon with a distinct pair of (color, size).\nHomura-chan now has r_i red balloons with size i (1 \\leq i \\leq K) and b_j black balloons with size j (1 \\leq j \\leq K). Suppose we assign a pair (c_i, s_i) of a color c_i (red or black) and a size s_i to the i-th problem, for each i. As noted, we have to assign distinct pairs to each problem, more precisely, (c_i, s_i) \\neq (c_j, s_j) holds for i \\neq j. Moreover, the number of balloons with (c_i, s_i) must be no less than a_i. In the case that there are no such assignments, Homura-chan can change the size of balloons by her magic power. Note that Homura-chan doesn't know magic to change the color of balloons, so it's impossible.\nYour task is to write a program computing the minimum number of balloons whose size is changed by Homura-chan's magic to realize an assignment satisfying the above-mentioned conditions. If there is no way to achieve such an assignment even if Homura-chan changes the size of balloons infinitely, output -1 instead.\nInput\n\nN K\na_1 ... a_N\nr_1 ... r_K\nb_1 ... b_K\n\nConstraints\n\n 1 \\leq N,K \\leq 60\n N \\leq 2K\n 1 \\leq a_i \\leq 50 (1 \\leq i \\leq N) \n 1 \\leq r_j,b_j \\leq 50 (1 \\leq j \\leq K) \n Inputs consist only of integers.\n\nOutput\nOutput the minimum number of balloons whose size is changed to achieve an assignment in a line. If there are no ways to achieve assignments, output -1 instead.\nSample Input 1\n\n3 2\n6 5 4\n8 1\n7 1\n\nOutput for Sample Input 1\n3\nHomura-chan changes the size of three red balloons from 1 to 2.  Then she can assign (black,1) to the problem 1, (red,1) to the problem 2, and (red,2) to the problem 3.\nSample Input 2\n\n2 1\n50 50\n2\n3\n\nOutput for Sample Input 2\n-1\nSample Input 3\n\n4 3\n3 10 28 43\n40 18 2\n26 7 11\n\nOutput for Sample Input 3\n5"}], "max_tokens": 2048}}
{"custom_id": "p02092_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nE: Red Black Balloons\nStory\nHomura-chan's dream comes true. It means ICPC Asia regional contest 20xx will be held in Sapporo! Homura-chan has been working hard for the preparation. And finally, it's the previous day of the contest. Homura-chan started to stock balloons to be delivered to contestants who get accepted. However, she noticed that there were only two colors of balloons: red and black.\nProblem Statement\nICPC Asia regional contest in Sapporo plans to provide N problems to contestants. Homura-chan is a professional of contest preparation, so she already knows how many contestants would get acceptance for each problem (!!), a_i contestants for the i-th problem. You can assume the prediction is perfectly accurate. Ideally, Homura-chan would assign a distinct color of a balloon to each problem respectively. But you know, she has only two colors red and black now. Thus, Homura-chan comes up with the idea to differentiate the size of balloons in K levels, that is, each problem has a balloon with a distinct pair of (color, size).\nHomura-chan now has r_i red balloons with size i (1 \\leq i \\leq K) and b_j black balloons with size j (1 \\leq j \\leq K). Suppose we assign a pair (c_i, s_i) of a color c_i (red or black) and a size s_i to the i-th problem, for each i. As noted, we have to assign distinct pairs to each problem, more precisely, (c_i, s_i) \\neq (c_j, s_j) holds for i \\neq j. Moreover, the number of balloons with (c_i, s_i) must be no less than a_i. In the case that there are no such assignments, Homura-chan can change the size of balloons by her magic power. Note that Homura-chan doesn't know magic to change the color of balloons, so it's impossible.\nYour task is to write a program computing the minimum number of balloons whose size is changed by Homura-chan's magic to realize an assignment satisfying the above-mentioned conditions. If there is no way to achieve such an assignment even if Homura-chan changes the size of balloons infinitely, output -1 instead.\nInput\n\nN K\na_1 ... a_N\nr_1 ... r_K\nb_1 ... b_K\n\nConstraints\n\n 1 \\leq N,K \\leq 60\n N \\leq 2K\n 1 \\leq a_i \\leq 50 (1 \\leq i \\leq N) \n 1 \\leq r_j,b_j \\leq 50 (1 \\leq j \\leq K) \n Inputs consist only of integers.\n\nOutput\nOutput the minimum number of balloons whose size is changed to achieve an assignment in a line. If there are no ways to achieve assignments, output -1 instead.\nSample Input 1\n\n3 2\n6 5 4\n8 1\n7 1\n\nOutput for Sample Input 1\n3\nHomura-chan changes the size of three red balloons from 1 to 2.  Then she can assign (black,1) to the problem 1, (red,1) to the problem 2, and (red,2) to the problem 3.\nSample Input 2\n\n2 1\n50 50\n2\n3\n\nOutput for Sample Input 2\n-1\nSample Input 3\n\n4 3\n3 10 28 43\n40 18 2\n26 7 11\n\nOutput for Sample Input 3\n5"}], "max_tokens": 2048}}
{"custom_id": "p02093_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nF: Invariant Tree\nProblem Statement\nYou have a permutation p_1, p_2, ... , p_N of integers from 1 to N. You also have vertices numbered 1 through N. Find the number of trees while satisfying the following condition. Here, two trees T and T' are different if and only if there is a pair of vertices where T has an edge between them but T\u2019 does not have an edge between them.\n\n For all integer pairs i, j (1\\leq i < j \\leq N), if there is an edge between vertices i and j, there is an edge between vertices p_i and p_j as well.\n\nSince this number can be extremely large, output the number modulo 998244353.\nInput\n\nN\np_1 p_2 ... p_N \n\nConstraints\n\n 1\\leq N \\leq 3 \\times 10^5\n p_1, p_2, ... , p_N is a permutation of integers 1 through N.\n\nOutput\nOutput the number in a single line.\nSample Input 1\n\n4\n2 1 4 3\n\nOutput for Sample Input 1\n4\nLet (u, v) denote that there is an edge between u and v. The following 4 ways can make a tree satisfying the condition.\n\n (1, 2), (1, 3), (2, 4)\n (1, 2), (1, 4), (2, 3)\n (1, 3), (2, 4), (3, 4)\n (1, 4), (2, 3), (3, 4)\n\nSample Input 2\n\n3\n1 2 3\n\nOutput for Sample Input 2\n3\nSample Input 3\n\n3\n2 3 1\n\nOutput for Sample Input 3\n0\nSample Input 4\n\n20\n9 2 15 16 5 13 11 18 1 10 7 3 6 14 12 4 20 19 8 17\n\nOutput for Sample Input 4\n98344960"}], "max_tokens": 2048}}
{"custom_id": "p02093_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nF: Invariant Tree\nProblem Statement\nYou have a permutation p_1, p_2, ... , p_N of integers from 1 to N. You also have vertices numbered 1 through N. Find the number of trees while satisfying the following condition. Here, two trees T and T' are different if and only if there is a pair of vertices where T has an edge between them but T\u2019 does not have an edge between them.\n\n For all integer pairs i, j (1\\leq i < j \\leq N), if there is an edge between vertices i and j, there is an edge between vertices p_i and p_j as well.\n\nSince this number can be extremely large, output the number modulo 998244353.\nInput\n\nN\np_1 p_2 ... p_N \n\nConstraints\n\n 1\\leq N \\leq 3 \\times 10^5\n p_1, p_2, ... , p_N is a permutation of integers 1 through N.\n\nOutput\nOutput the number in a single line.\nSample Input 1\n\n4\n2 1 4 3\n\nOutput for Sample Input 1\n4\nLet (u, v) denote that there is an edge between u and v. The following 4 ways can make a tree satisfying the condition.\n\n (1, 2), (1, 3), (2, 4)\n (1, 2), (1, 4), (2, 3)\n (1, 3), (2, 4), (3, 4)\n (1, 4), (2, 3), (3, 4)\n\nSample Input 2\n\n3\n1 2 3\n\nOutput for Sample Input 2\n3\nSample Input 3\n\n3\n2 3 1\n\nOutput for Sample Input 3\n0\nSample Input 4\n\n20\n9 2 15 16 5 13 11 18 1 10 7 3 6 14 12 4 20 19 8 17\n\nOutput for Sample Input 4\n98344960"}], "max_tokens": 2048}}
{"custom_id": "p02093_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nF: Invariant Tree\nProblem Statement\nYou have a permutation p_1, p_2, ... , p_N of integers from 1 to N. You also have vertices numbered 1 through N. Find the number of trees while satisfying the following condition. Here, two trees T and T' are different if and only if there is a pair of vertices where T has an edge between them but T\u2019 does not have an edge between them.\n\n For all integer pairs i, j (1\\leq i < j \\leq N), if there is an edge between vertices i and j, there is an edge between vertices p_i and p_j as well.\n\nSince this number can be extremely large, output the number modulo 998244353.\nInput\n\nN\np_1 p_2 ... p_N \n\nConstraints\n\n 1\\leq N \\leq 3 \\times 10^5\n p_1, p_2, ... , p_N is a permutation of integers 1 through N.\n\nOutput\nOutput the number in a single line.\nSample Input 1\n\n4\n2 1 4 3\n\nOutput for Sample Input 1\n4\nLet (u, v) denote that there is an edge between u and v. The following 4 ways can make a tree satisfying the condition.\n\n (1, 2), (1, 3), (2, 4)\n (1, 2), (1, 4), (2, 3)\n (1, 3), (2, 4), (3, 4)\n (1, 4), (2, 3), (3, 4)\n\nSample Input 2\n\n3\n1 2 3\n\nOutput for Sample Input 2\n3\nSample Input 3\n\n3\n2 3 1\n\nOutput for Sample Input 3\n0\nSample Input 4\n\n20\n9 2 15 16 5 13 11 18 1 10 7 3 6 14 12 4 20 19 8 17\n\nOutput for Sample Input 4\n98344960"}], "max_tokens": 2048}}
{"custom_id": "p02093_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nF: Invariant Tree\nProblem Statement\nYou have a permutation p_1, p_2, ... , p_N of integers from 1 to N. You also have vertices numbered 1 through N. Find the number of trees while satisfying the following condition. Here, two trees T and T' are different if and only if there is a pair of vertices where T has an edge between them but T\u2019 does not have an edge between them.\n\n For all integer pairs i, j (1\\leq i < j \\leq N), if there is an edge between vertices i and j, there is an edge between vertices p_i and p_j as well.\n\nSince this number can be extremely large, output the number modulo 998244353.\nInput\n\nN\np_1 p_2 ... p_N \n\nConstraints\n\n 1\\leq N \\leq 3 \\times 10^5\n p_1, p_2, ... , p_N is a permutation of integers 1 through N.\n\nOutput\nOutput the number in a single line.\nSample Input 1\n\n4\n2 1 4 3\n\nOutput for Sample Input 1\n4\nLet (u, v) denote that there is an edge between u and v. The following 4 ways can make a tree satisfying the condition.\n\n (1, 2), (1, 3), (2, 4)\n (1, 2), (1, 4), (2, 3)\n (1, 3), (2, 4), (3, 4)\n (1, 4), (2, 3), (3, 4)\n\nSample Input 2\n\n3\n1 2 3\n\nOutput for Sample Input 2\n3\nSample Input 3\n\n3\n2 3 1\n\nOutput for Sample Input 3\n0\nSample Input 4\n\n20\n9 2 15 16 5 13 11 18 1 10 7 3 6 14 12 4 20 19 8 17\n\nOutput for Sample Input 4\n98344960"}], "max_tokens": 2048}}
{"custom_id": "p02094_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nG: Toss Cut Tree\nProblem Statement\nYou are given two trees T, U. Each tree has N vertices that are numbered 1 through N. The i-th edge (1 \\leq i \\leq N-1) of tree T connects vertices a_i and b_i. The i-th edge (1 \\leq i \\leq N-1) of tree U connects vertices c_i and d_i.\nThe operation described below will be performed N times.\n\n On the i-th operation, flip a fair coin.\n\n\n\n If it lands heads up, remove vertex i and all edges directly connecting to it from tree T.\n If it lands tails up, remove vertex i and all edges directly connecting to it from tree U. \n\n\n\nAfter N operations, each tree will be divided into several connected components. Let X and Y be the number of connected components originated from tree T and U, respectively.\nYour task is to compute the expected value of X \\times Y. More specifically, your program must output an integer R described below.\nFirst, you can prove X \\times Y is a rational number. Let P and Q be coprime integers that satisfies \\frac{P}{Q} = X \\times Y. R is the only integer that satisfies R \\times Q $\\equiv$ P $ \\bmod \\;$  998244353, 0 \\leq R < 998244353.\n\nInput\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\nConstraints\n\n 1 \\leq N \\leq 2 \\times 10^5\n 1 \\leq a_i, b_i, c_i, d_i \\leq N\n The given two graphs are trees.\n All values in the input are integers.\n\nOutput\nPrint R described above in a single line.\nSample Input 1\n\n3\n1 2\n2 3\n1 2\n3 1\n\nOutput for Sample Input 1\n1\nA coin is flipped 3 times. Therefore, there are 2^3 = 8 outcomes in total.\nSuppose that the outcome was (tail, head, tail) in this order. Vertex 2 of tree T and vertex 1, 3 of tree U are removed along with all edges connecting to them. T, U are decomposed to 2, 1 connected components, respectively. Thus, the value of XY is 2 \\times 1 = 2 in this case.\nIt is possible to calculate XY for the other cases in the same way and the expected value of XY is 1.\nSample Input 2\n\n4\n1 2\n1 4\n2 3\n1 4\n4 2\n2 3\n\nOutput for Sample Input 2\n374341634\nThe expected number of XY is \\frac{13}{8}."}], "max_tokens": 2048}}
{"custom_id": "p02094_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nG: Toss Cut Tree\nProblem Statement\nYou are given two trees T, U. Each tree has N vertices that are numbered 1 through N. The i-th edge (1 \\leq i \\leq N-1) of tree T connects vertices a_i and b_i. The i-th edge (1 \\leq i \\leq N-1) of tree U connects vertices c_i and d_i.\nThe operation described below will be performed N times.\n\n On the i-th operation, flip a fair coin.\n\n\n\n If it lands heads up, remove vertex i and all edges directly connecting to it from tree T.\n If it lands tails up, remove vertex i and all edges directly connecting to it from tree U. \n\n\n\nAfter N operations, each tree will be divided into several connected components. Let X and Y be the number of connected components originated from tree T and U, respectively.\nYour task is to compute the expected value of X \\times Y. More specifically, your program must output an integer R described below.\nFirst, you can prove X \\times Y is a rational number. Let P and Q be coprime integers that satisfies \\frac{P}{Q} = X \\times Y. R is the only integer that satisfies R \\times Q $\\equiv$ P $ \\bmod \\;$  998244353, 0 \\leq R < 998244353.\n\nInput\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\nConstraints\n\n 1 \\leq N \\leq 2 \\times 10^5\n 1 \\leq a_i, b_i, c_i, d_i \\leq N\n The given two graphs are trees.\n All values in the input are integers.\n\nOutput\nPrint R described above in a single line.\nSample Input 1\n\n3\n1 2\n2 3\n1 2\n3 1\n\nOutput for Sample Input 1\n1\nA coin is flipped 3 times. Therefore, there are 2^3 = 8 outcomes in total.\nSuppose that the outcome was (tail, head, tail) in this order. Vertex 2 of tree T and vertex 1, 3 of tree U are removed along with all edges connecting to them. T, U are decomposed to 2, 1 connected components, respectively. Thus, the value of XY is 2 \\times 1 = 2 in this case.\nIt is possible to calculate XY for the other cases in the same way and the expected value of XY is 1.\nSample Input 2\n\n4\n1 2\n1 4\n2 3\n1 4\n4 2\n2 3\n\nOutput for Sample Input 2\n374341634\nThe expected number of XY is \\frac{13}{8}."}], "max_tokens": 2048}}
{"custom_id": "p02094_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nG: Toss Cut Tree\nProblem Statement\nYou are given two trees T, U. Each tree has N vertices that are numbered 1 through N. The i-th edge (1 \\leq i \\leq N-1) of tree T connects vertices a_i and b_i. The i-th edge (1 \\leq i \\leq N-1) of tree U connects vertices c_i and d_i.\nThe operation described below will be performed N times.\n\n On the i-th operation, flip a fair coin.\n\n\n\n If it lands heads up, remove vertex i and all edges directly connecting to it from tree T.\n If it lands tails up, remove vertex i and all edges directly connecting to it from tree U. \n\n\n\nAfter N operations, each tree will be divided into several connected components. Let X and Y be the number of connected components originated from tree T and U, respectively.\nYour task is to compute the expected value of X \\times Y. More specifically, your program must output an integer R described below.\nFirst, you can prove X \\times Y is a rational number. Let P and Q be coprime integers that satisfies \\frac{P}{Q} = X \\times Y. R is the only integer that satisfies R \\times Q $\\equiv$ P $ \\bmod \\;$  998244353, 0 \\leq R < 998244353.\n\nInput\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\nConstraints\n\n 1 \\leq N \\leq 2 \\times 10^5\n 1 \\leq a_i, b_i, c_i, d_i \\leq N\n The given two graphs are trees.\n All values in the input are integers.\n\nOutput\nPrint R described above in a single line.\nSample Input 1\n\n3\n1 2\n2 3\n1 2\n3 1\n\nOutput for Sample Input 1\n1\nA coin is flipped 3 times. Therefore, there are 2^3 = 8 outcomes in total.\nSuppose that the outcome was (tail, head, tail) in this order. Vertex 2 of tree T and vertex 1, 3 of tree U are removed along with all edges connecting to them. T, U are decomposed to 2, 1 connected components, respectively. Thus, the value of XY is 2 \\times 1 = 2 in this case.\nIt is possible to calculate XY for the other cases in the same way and the expected value of XY is 1.\nSample Input 2\n\n4\n1 2\n1 4\n2 3\n1 4\n4 2\n2 3\n\nOutput for Sample Input 2\n374341634\nThe expected number of XY is \\frac{13}{8}."}], "max_tokens": 2048}}
{"custom_id": "p02094_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nG: Toss Cut Tree\nProblem Statement\nYou are given two trees T, U. Each tree has N vertices that are numbered 1 through N. The i-th edge (1 \\leq i \\leq N-1) of tree T connects vertices a_i and b_i. The i-th edge (1 \\leq i \\leq N-1) of tree U connects vertices c_i and d_i.\nThe operation described below will be performed N times.\n\n On the i-th operation, flip a fair coin.\n\n\n\n If it lands heads up, remove vertex i and all edges directly connecting to it from tree T.\n If it lands tails up, remove vertex i and all edges directly connecting to it from tree U. \n\n\n\nAfter N operations, each tree will be divided into several connected components. Let X and Y be the number of connected components originated from tree T and U, respectively.\nYour task is to compute the expected value of X \\times Y. More specifically, your program must output an integer R described below.\nFirst, you can prove X \\times Y is a rational number. Let P and Q be coprime integers that satisfies \\frac{P}{Q} = X \\times Y. R is the only integer that satisfies R \\times Q $\\equiv$ P $ \\bmod \\;$  998244353, 0 \\leq R < 998244353.\n\nInput\n\nN\na_1 b_1\n:\na_{N-1} b_{N-1}\nc_1 d_1\n:\nc_{N-1} d_{N-1}\n\nConstraints\n\n 1 \\leq N \\leq 2 \\times 10^5\n 1 \\leq a_i, b_i, c_i, d_i \\leq N\n The given two graphs are trees.\n All values in the input are integers.\n\nOutput\nPrint R described above in a single line.\nSample Input 1\n\n3\n1 2\n2 3\n1 2\n3 1\n\nOutput for Sample Input 1\n1\nA coin is flipped 3 times. Therefore, there are 2^3 = 8 outcomes in total.\nSuppose that the outcome was (tail, head, tail) in this order. Vertex 2 of tree T and vertex 1, 3 of tree U are removed along with all edges connecting to them. T, U are decomposed to 2, 1 connected components, respectively. Thus, the value of XY is 2 \\times 1 = 2 in this case.\nIt is possible to calculate XY for the other cases in the same way and the expected value of XY is 1.\nSample Input 2\n\n4\n1 2\n1 4\n2 3\n1 4\n4 2\n2 3\n\nOutput for Sample Input 2\n374341634\nThe expected number of XY is \\frac{13}{8}."}], "max_tokens": 2048}}
{"custom_id": "p02095_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nH: Colorful Tree\nStory\n\nYamiuchi (assassination) is a traditional event that is held annually in JAG summer camp. Every team displays a decorated tree in the dark and all teams' trees are compared from the point of view of their colorfulness. In this competition, it is allowed to cut the other teams\u2019 tree to reduce its colorfulness. Despite a team would get a penalty if it were discovered that the team cuts the tree of another team, many teams do this obstruction.\n\nYou decided to compete in Yamiuchi and write a program that maximizes the colorfulness of your team\u2019s tree. The program has to calculate maximum scores for all subtrees in case the other teams cut your tree.\nProblem Statement\nYou are given a rooted tree G with N vertices indexed with 1 through N. The root is vertex 1. There are K kinds of colors indexed with 1 through K. You can paint vertex i with either color c_i or d_i. Note that c_i = d_i may hold, and if so you have to paint vertex i with c_i (=d_i).\nLet the colorfulness of tree T be the number of different colors in T. Your task is to write a program that calculates maximum colorfulness for all rooted subtrees. Note that coloring for each rooted subtree is done independently, so previous coloring does not affect to other coloring.\nInput\n\nN K\nu_1 v_1\n:\nu_{N-1} v_{N-1}\nc_1 d_1\n:\nc_N d_N\n\nThe first line contains two integers N and K in this order.\nThe following N-1 lines provide information about the edges of G. The i-th line of them contains two integers u_i and v_i, meaning these two vertices are connected with an edge.\nThe following N lines provide information about color constraints. The i-th line of them contains two integers c_i and d_i explained above.\nConstraints\n\n1 \\leq N \\leq 10^5\n1 \\leq K \\leq 2\\times 10^5\n1 \\leq u_i , v_i \\leq N\n1 \\leq c_i , d_i \\leq K\nThe input graph is a tree.\n All inputs are integers.\n\nOutput\nOutput N lines.\nThe i-th line of them contains the maximum colorfulness of the rooted subtree of G whose root is i.\nSample Input 1\n\n2 10\n1 2\n1 9\n8 7\n\nOutput for Sample Input 1\n\n2\n1\n\nSample Input 2\n\n3 2\n1 2\n1 3\n1 2\n1 1\n1 2\n\nOutput for Sample Input 2\n\n2\n1\n1\n\nNote that two color options of a vertex can be the same.\nSample Input 3\n\n5 100000\n4 3\n3 5\n1 3\n2 1\n3 2\n1 3\n2 1\n4 2\n1 4\n\nOutput for Sample Input 3\n\n4\n1\n3\n1\n1"}], "max_tokens": 2048}}
{"custom_id": "p02095_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nH: Colorful Tree\nStory\n\nYamiuchi (assassination) is a traditional event that is held annually in JAG summer camp. Every team displays a decorated tree in the dark and all teams' trees are compared from the point of view of their colorfulness. In this competition, it is allowed to cut the other teams\u2019 tree to reduce its colorfulness. Despite a team would get a penalty if it were discovered that the team cuts the tree of another team, many teams do this obstruction.\n\nYou decided to compete in Yamiuchi and write a program that maximizes the colorfulness of your team\u2019s tree. The program has to calculate maximum scores for all subtrees in case the other teams cut your tree.\nProblem Statement\nYou are given a rooted tree G with N vertices indexed with 1 through N. The root is vertex 1. There are K kinds of colors indexed with 1 through K. You can paint vertex i with either color c_i or d_i. Note that c_i = d_i may hold, and if so you have to paint vertex i with c_i (=d_i).\nLet the colorfulness of tree T be the number of different colors in T. Your task is to write a program that calculates maximum colorfulness for all rooted subtrees. Note that coloring for each rooted subtree is done independently, so previous coloring does not affect to other coloring.\nInput\n\nN K\nu_1 v_1\n:\nu_{N-1} v_{N-1}\nc_1 d_1\n:\nc_N d_N\n\nThe first line contains two integers N and K in this order.\nThe following N-1 lines provide information about the edges of G. The i-th line of them contains two integers u_i and v_i, meaning these two vertices are connected with an edge.\nThe following N lines provide information about color constraints. The i-th line of them contains two integers c_i and d_i explained above.\nConstraints\n\n1 \\leq N \\leq 10^5\n1 \\leq K \\leq 2\\times 10^5\n1 \\leq u_i , v_i \\leq N\n1 \\leq c_i , d_i \\leq K\nThe input graph is a tree.\n All inputs are integers.\n\nOutput\nOutput N lines.\nThe i-th line of them contains the maximum colorfulness of the rooted subtree of G whose root is i.\nSample Input 1\n\n2 10\n1 2\n1 9\n8 7\n\nOutput for Sample Input 1\n\n2\n1\n\nSample Input 2\n\n3 2\n1 2\n1 3\n1 2\n1 1\n1 2\n\nOutput for Sample Input 2\n\n2\n1\n1\n\nNote that two color options of a vertex can be the same.\nSample Input 3\n\n5 100000\n4 3\n3 5\n1 3\n2 1\n3 2\n1 3\n2 1\n4 2\n1 4\n\nOutput for Sample Input 3\n\n4\n1\n3\n1\n1"}], "max_tokens": 2048}}
{"custom_id": "p02095_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nH: Colorful Tree\nStory\n\nYamiuchi (assassination) is a traditional event that is held annually in JAG summer camp. Every team displays a decorated tree in the dark and all teams' trees are compared from the point of view of their colorfulness. In this competition, it is allowed to cut the other teams\u2019 tree to reduce its colorfulness. Despite a team would get a penalty if it were discovered that the team cuts the tree of another team, many teams do this obstruction.\n\nYou decided to compete in Yamiuchi and write a program that maximizes the colorfulness of your team\u2019s tree. The program has to calculate maximum scores for all subtrees in case the other teams cut your tree.\nProblem Statement\nYou are given a rooted tree G with N vertices indexed with 1 through N. The root is vertex 1. There are K kinds of colors indexed with 1 through K. You can paint vertex i with either color c_i or d_i. Note that c_i = d_i may hold, and if so you have to paint vertex i with c_i (=d_i).\nLet the colorfulness of tree T be the number of different colors in T. Your task is to write a program that calculates maximum colorfulness for all rooted subtrees. Note that coloring for each rooted subtree is done independently, so previous coloring does not affect to other coloring.\nInput\n\nN K\nu_1 v_1\n:\nu_{N-1} v_{N-1}\nc_1 d_1\n:\nc_N d_N\n\nThe first line contains two integers N and K in this order.\nThe following N-1 lines provide information about the edges of G. The i-th line of them contains two integers u_i and v_i, meaning these two vertices are connected with an edge.\nThe following N lines provide information about color constraints. The i-th line of them contains two integers c_i and d_i explained above.\nConstraints\n\n1 \\leq N \\leq 10^5\n1 \\leq K \\leq 2\\times 10^5\n1 \\leq u_i , v_i \\leq N\n1 \\leq c_i , d_i \\leq K\nThe input graph is a tree.\n All inputs are integers.\n\nOutput\nOutput N lines.\nThe i-th line of them contains the maximum colorfulness of the rooted subtree of G whose root is i.\nSample Input 1\n\n2 10\n1 2\n1 9\n8 7\n\nOutput for Sample Input 1\n\n2\n1\n\nSample Input 2\n\n3 2\n1 2\n1 3\n1 2\n1 1\n1 2\n\nOutput for Sample Input 2\n\n2\n1\n1\n\nNote that two color options of a vertex can be the same.\nSample Input 3\n\n5 100000\n4 3\n3 5\n1 3\n2 1\n3 2\n1 3\n2 1\n4 2\n1 4\n\nOutput for Sample Input 3\n\n4\n1\n3\n1\n1"}], "max_tokens": 2048}}
{"custom_id": "p02095_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nH: Colorful Tree\nStory\n\nYamiuchi (assassination) is a traditional event that is held annually in JAG summer camp. Every team displays a decorated tree in the dark and all teams' trees are compared from the point of view of their colorfulness. In this competition, it is allowed to cut the other teams\u2019 tree to reduce its colorfulness. Despite a team would get a penalty if it were discovered that the team cuts the tree of another team, many teams do this obstruction.\n\nYou decided to compete in Yamiuchi and write a program that maximizes the colorfulness of your team\u2019s tree. The program has to calculate maximum scores for all subtrees in case the other teams cut your tree.\nProblem Statement\nYou are given a rooted tree G with N vertices indexed with 1 through N. The root is vertex 1. There are K kinds of colors indexed with 1 through K. You can paint vertex i with either color c_i or d_i. Note that c_i = d_i may hold, and if so you have to paint vertex i with c_i (=d_i).\nLet the colorfulness of tree T be the number of different colors in T. Your task is to write a program that calculates maximum colorfulness for all rooted subtrees. Note that coloring for each rooted subtree is done independently, so previous coloring does not affect to other coloring.\nInput\n\nN K\nu_1 v_1\n:\nu_{N-1} v_{N-1}\nc_1 d_1\n:\nc_N d_N\n\nThe first line contains two integers N and K in this order.\nThe following N-1 lines provide information about the edges of G. The i-th line of them contains two integers u_i and v_i, meaning these two vertices are connected with an edge.\nThe following N lines provide information about color constraints. The i-th line of them contains two integers c_i and d_i explained above.\nConstraints\n\n1 \\leq N \\leq 10^5\n1 \\leq K \\leq 2\\times 10^5\n1 \\leq u_i , v_i \\leq N\n1 \\leq c_i , d_i \\leq K\nThe input graph is a tree.\n All inputs are integers.\n\nOutput\nOutput N lines.\nThe i-th line of them contains the maximum colorfulness of the rooted subtree of G whose root is i.\nSample Input 1\n\n2 10\n1 2\n1 9\n8 7\n\nOutput for Sample Input 1\n\n2\n1\n\nSample Input 2\n\n3 2\n1 2\n1 3\n1 2\n1 1\n1 2\n\nOutput for Sample Input 2\n\n2\n1\n1\n\nNote that two color options of a vertex can be the same.\nSample Input 3\n\n5 100000\n4 3\n3 5\n1 3\n2 1\n3 2\n1 3\n2 1\n4 2\n1 4\n\nOutput for Sample Input 3\n\n4\n1\n3\n1\n1"}], "max_tokens": 2048}}
{"custom_id": "p02096_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nI: Add\nProblem Statement\nMr. T has had an integer sequence of N elements a_1, a_2, ... , a_N and an integer K. Mr. T has created N integer sequences B_1, B_2, ... , B_N such that B_i has i elements.\n\n B_{N,j} = a_j (1 \\leq j \\leq N) \n B_{i,j} = K \\times B_{i+1,j} + B_{i+1,j+1} (1\\leq i \\leq N-1, 1 \\leq j \\leq i)\n\nMr. T was so careless that he lost almost all elements of these sequences a and B_i. Fortunately, B_{1,1}, B_{2,1}, ... , B_{N,1} and K are not lost. Your task is to write a program that restores the elements of the initial sequence a for him. Output the modulo 65537 of each element instead because the absolute value of these elements can be extremely large. More specifically, for all integers i (1 \\leq i \\leq N), output r_i that satisfies r_i  $\\equiv$ a_i $ \\bmod \\;$ 65537, 0 \\leq r_i < 65537. Here, we can prove that the original sequence Mr. T had can be uniquely determined under the given constraints.\nInput\n\nT\nN_1 K_1\nC_{1,1} C_{1,2} ... C_{1,N}\nN_2 K_2\nC_{2,1} C_{2,2} ... C_{2,N}\n:\nN_T K_T\nC_{T,1} C_{T,2} ... C_{T,N}\n\nThe first line contains a single integer T that denotes the number of test cases. Each test case consists of 2 lines. The first line of the i-th test case contains two integers N_i and K_i. The second line of the i-th test case contains N_i integers C_{i,j} (1 \\leq j \\leq N_i). These values denote that N = N_i , K = K_i , B_{j,1} = C_{i,j} (1 \\leq j \\leq N_i) in the i-th test case.\nConstraints\n\n 1 \\leq T \\leq 10\n 1 \\leq N \\leq 50000\n |K| \\leq 10^9\n |B_{i,1}| \\leq 10^9 \n All input values are integers.\n\nOutput\nOutput T lines. For the i-th line, output the answer for the i-th test case a_1, a_2, ..., a_N in this order. Each number must be separated by a single space.\nSample Input 1\n\n2\n3 0\n1 2 3\n3 1\n1 2 3\n\nOutput for Sample Input 1\n\n3 2 1\n3 65536 0"}], "max_tokens": 2048}}
{"custom_id": "p02096_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nI: Add\nProblem Statement\nMr. T has had an integer sequence of N elements a_1, a_2, ... , a_N and an integer K. Mr. T has created N integer sequences B_1, B_2, ... , B_N such that B_i has i elements.\n\n B_{N,j} = a_j (1 \\leq j \\leq N) \n B_{i,j} = K \\times B_{i+1,j} + B_{i+1,j+1} (1\\leq i \\leq N-1, 1 \\leq j \\leq i)\n\nMr. T was so careless that he lost almost all elements of these sequences a and B_i. Fortunately, B_{1,1}, B_{2,1}, ... , B_{N,1} and K are not lost. Your task is to write a program that restores the elements of the initial sequence a for him. Output the modulo 65537 of each element instead because the absolute value of these elements can be extremely large. More specifically, for all integers i (1 \\leq i \\leq N), output r_i that satisfies r_i  $\\equiv$ a_i $ \\bmod \\;$ 65537, 0 \\leq r_i < 65537. Here, we can prove that the original sequence Mr. T had can be uniquely determined under the given constraints.\nInput\n\nT\nN_1 K_1\nC_{1,1} C_{1,2} ... C_{1,N}\nN_2 K_2\nC_{2,1} C_{2,2} ... C_{2,N}\n:\nN_T K_T\nC_{T,1} C_{T,2} ... C_{T,N}\n\nThe first line contains a single integer T that denotes the number of test cases. Each test case consists of 2 lines. The first line of the i-th test case contains two integers N_i and K_i. The second line of the i-th test case contains N_i integers C_{i,j} (1 \\leq j \\leq N_i). These values denote that N = N_i , K = K_i , B_{j,1} = C_{i,j} (1 \\leq j \\leq N_i) in the i-th test case.\nConstraints\n\n 1 \\leq T \\leq 10\n 1 \\leq N \\leq 50000\n |K| \\leq 10^9\n |B_{i,1}| \\leq 10^9 \n All input values are integers.\n\nOutput\nOutput T lines. For the i-th line, output the answer for the i-th test case a_1, a_2, ..., a_N in this order. Each number must be separated by a single space.\nSample Input 1\n\n2\n3 0\n1 2 3\n3 1\n1 2 3\n\nOutput for Sample Input 1\n\n3 2 1\n3 65536 0"}], "max_tokens": 2048}}
{"custom_id": "p02096_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nI: Add\nProblem Statement\nMr. T has had an integer sequence of N elements a_1, a_2, ... , a_N and an integer K. Mr. T has created N integer sequences B_1, B_2, ... , B_N such that B_i has i elements.\n\n B_{N,j} = a_j (1 \\leq j \\leq N) \n B_{i,j} = K \\times B_{i+1,j} + B_{i+1,j+1} (1\\leq i \\leq N-1, 1 \\leq j \\leq i)\n\nMr. T was so careless that he lost almost all elements of these sequences a and B_i. Fortunately, B_{1,1}, B_{2,1}, ... , B_{N,1} and K are not lost. Your task is to write a program that restores the elements of the initial sequence a for him. Output the modulo 65537 of each element instead because the absolute value of these elements can be extremely large. More specifically, for all integers i (1 \\leq i \\leq N), output r_i that satisfies r_i  $\\equiv$ a_i $ \\bmod \\;$ 65537, 0 \\leq r_i < 65537. Here, we can prove that the original sequence Mr. T had can be uniquely determined under the given constraints.\nInput\n\nT\nN_1 K_1\nC_{1,1} C_{1,2} ... C_{1,N}\nN_2 K_2\nC_{2,1} C_{2,2} ... C_{2,N}\n:\nN_T K_T\nC_{T,1} C_{T,2} ... C_{T,N}\n\nThe first line contains a single integer T that denotes the number of test cases. Each test case consists of 2 lines. The first line of the i-th test case contains two integers N_i and K_i. The second line of the i-th test case contains N_i integers C_{i,j} (1 \\leq j \\leq N_i). These values denote that N = N_i , K = K_i , B_{j,1} = C_{i,j} (1 \\leq j \\leq N_i) in the i-th test case.\nConstraints\n\n 1 \\leq T \\leq 10\n 1 \\leq N \\leq 50000\n |K| \\leq 10^9\n |B_{i,1}| \\leq 10^9 \n All input values are integers.\n\nOutput\nOutput T lines. For the i-th line, output the answer for the i-th test case a_1, a_2, ..., a_N in this order. Each number must be separated by a single space.\nSample Input 1\n\n2\n3 0\n1 2 3\n3 1\n1 2 3\n\nOutput for Sample Input 1\n\n3 2 1\n3 65536 0"}], "max_tokens": 2048}}
{"custom_id": "p02096_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nI: Add\nProblem Statement\nMr. T has had an integer sequence of N elements a_1, a_2, ... , a_N and an integer K. Mr. T has created N integer sequences B_1, B_2, ... , B_N such that B_i has i elements.\n\n B_{N,j} = a_j (1 \\leq j \\leq N) \n B_{i,j} = K \\times B_{i+1,j} + B_{i+1,j+1} (1\\leq i \\leq N-1, 1 \\leq j \\leq i)\n\nMr. T was so careless that he lost almost all elements of these sequences a and B_i. Fortunately, B_{1,1}, B_{2,1}, ... , B_{N,1} and K are not lost. Your task is to write a program that restores the elements of the initial sequence a for him. Output the modulo 65537 of each element instead because the absolute value of these elements can be extremely large. More specifically, for all integers i (1 \\leq i \\leq N), output r_i that satisfies r_i  $\\equiv$ a_i $ \\bmod \\;$ 65537, 0 \\leq r_i < 65537. Here, we can prove that the original sequence Mr. T had can be uniquely determined under the given constraints.\nInput\n\nT\nN_1 K_1\nC_{1,1} C_{1,2} ... C_{1,N}\nN_2 K_2\nC_{2,1} C_{2,2} ... C_{2,N}\n:\nN_T K_T\nC_{T,1} C_{T,2} ... C_{T,N}\n\nThe first line contains a single integer T that denotes the number of test cases. Each test case consists of 2 lines. The first line of the i-th test case contains two integers N_i and K_i. The second line of the i-th test case contains N_i integers C_{i,j} (1 \\leq j \\leq N_i). These values denote that N = N_i , K = K_i , B_{j,1} = C_{i,j} (1 \\leq j \\leq N_i) in the i-th test case.\nConstraints\n\n 1 \\leq T \\leq 10\n 1 \\leq N \\leq 50000\n |K| \\leq 10^9\n |B_{i,1}| \\leq 10^9 \n All input values are integers.\n\nOutput\nOutput T lines. For the i-th line, output the answer for the i-th test case a_1, a_2, ..., a_N in this order. Each number must be separated by a single space.\nSample Input 1\n\n2\n3 0\n1 2 3\n3 1\n1 2 3\n\nOutput for Sample Input 1\n\n3 2 1\n3 65536 0"}], "max_tokens": 2048}}
{"custom_id": "p02097_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nJ: Horizontal-Vertical Permutation\nProblem Statement\nYou are given a positive integer N. Your task is to determine if there exists a square matrix A whose dimension is N that satisfies the following conditions and provide an example of such matrices if it exists. A_{i, j} denotes the element of matrix A at the i-th row and j-th column.\n\n For all i, j (1 \\leq i, j \\leq N), A_{i, j} is an integer that satisfies 1 \\leq A_{i, j} \\leq 2N - 1.\n For all k = 1, 2, ..., N, a set consists of  2N - 1 elements from the k-th row or k-th column is \\{1, 2, ..., 2N - 1\\}.\n\nIf there are more than one possible matrices, output any of them.\nInput\nN\nInput consists of one line, which contains the integer N that is the size of a square matrix to construct.\nConstraint\n\n N is an integer that satisfies 1 \\leq N \\leq 500.\n\nOutput\nOutput No in a single line if such a square matrix does not exist.\nIf such a square matrix A exists, output Yes on the first line and A after that. More specifically, follow the following format.\n\nYes\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n:\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\nSample Input 1\n4\nOutput for Sample Input 1\n\nYes\n2 6 3 7\n4 5 2 1\n1 7 5 6\n5 3 4 2\n\nSample Input 2\n3\nOutput for Sample Input 2\nNo"}], "max_tokens": 2048}}
{"custom_id": "p02097_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nJ: Horizontal-Vertical Permutation\nProblem Statement\nYou are given a positive integer N. Your task is to determine if there exists a square matrix A whose dimension is N that satisfies the following conditions and provide an example of such matrices if it exists. A_{i, j} denotes the element of matrix A at the i-th row and j-th column.\n\n For all i, j (1 \\leq i, j \\leq N), A_{i, j} is an integer that satisfies 1 \\leq A_{i, j} \\leq 2N - 1.\n For all k = 1, 2, ..., N, a set consists of  2N - 1 elements from the k-th row or k-th column is \\{1, 2, ..., 2N - 1\\}.\n\nIf there are more than one possible matrices, output any of them.\nInput\nN\nInput consists of one line, which contains the integer N that is the size of a square matrix to construct.\nConstraint\n\n N is an integer that satisfies 1 \\leq N \\leq 500.\n\nOutput\nOutput No in a single line if such a square matrix does not exist.\nIf such a square matrix A exists, output Yes on the first line and A after that. More specifically, follow the following format.\n\nYes\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n:\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\nSample Input 1\n4\nOutput for Sample Input 1\n\nYes\n2 6 3 7\n4 5 2 1\n1 7 5 6\n5 3 4 2\n\nSample Input 2\n3\nOutput for Sample Input 2\nNo"}], "max_tokens": 2048}}
{"custom_id": "p02097_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nJ: Horizontal-Vertical Permutation\nProblem Statement\nYou are given a positive integer N. Your task is to determine if there exists a square matrix A whose dimension is N that satisfies the following conditions and provide an example of such matrices if it exists. A_{i, j} denotes the element of matrix A at the i-th row and j-th column.\n\n For all i, j (1 \\leq i, j \\leq N), A_{i, j} is an integer that satisfies 1 \\leq A_{i, j} \\leq 2N - 1.\n For all k = 1, 2, ..., N, a set consists of  2N - 1 elements from the k-th row or k-th column is \\{1, 2, ..., 2N - 1\\}.\n\nIf there are more than one possible matrices, output any of them.\nInput\nN\nInput consists of one line, which contains the integer N that is the size of a square matrix to construct.\nConstraint\n\n N is an integer that satisfies 1 \\leq N \\leq 500.\n\nOutput\nOutput No in a single line if such a square matrix does not exist.\nIf such a square matrix A exists, output Yes on the first line and A after that. More specifically, follow the following format.\n\nYes\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n:\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\nSample Input 1\n4\nOutput for Sample Input 1\n\nYes\n2 6 3 7\n4 5 2 1\n1 7 5 6\n5 3 4 2\n\nSample Input 2\n3\nOutput for Sample Input 2\nNo"}], "max_tokens": 2048}}
{"custom_id": "p02097_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nJ: Horizontal-Vertical Permutation\nProblem Statement\nYou are given a positive integer N. Your task is to determine if there exists a square matrix A whose dimension is N that satisfies the following conditions and provide an example of such matrices if it exists. A_{i, j} denotes the element of matrix A at the i-th row and j-th column.\n\n For all i, j (1 \\leq i, j \\leq N), A_{i, j} is an integer that satisfies 1 \\leq A_{i, j} \\leq 2N - 1.\n For all k = 1, 2, ..., N, a set consists of  2N - 1 elements from the k-th row or k-th column is \\{1, 2, ..., 2N - 1\\}.\n\nIf there are more than one possible matrices, output any of them.\nInput\nN\nInput consists of one line, which contains the integer N that is the size of a square matrix to construct.\nConstraint\n\n N is an integer that satisfies 1 \\leq N \\leq 500.\n\nOutput\nOutput No in a single line if such a square matrix does not exist.\nIf such a square matrix A exists, output Yes on the first line and A after that. More specifically, follow the following format.\n\nYes\nA_{1, 1} A_{1, 2} ... A_{1, N}\nA_{2, 1} A_{2, 2} ... A_{2, N}\n:\nA_{N, 1} A_{N, 2} ... A_{N, N}\n\nSample Input 1\n4\nOutput for Sample Input 1\n\nYes\n2 6 3 7\n4 5 2 1\n1 7 5 6\n5 3 4 2\n\nSample Input 2\n3\nOutput for Sample Input 2\nNo"}], "max_tokens": 2048}}
{"custom_id": "p02225_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nProblem description is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02225_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nProblem description is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02225_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nProblem description is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02225_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nProblem description is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02226_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\ntest \nUnionFind\uff08\u30d0\u30a4\u30ca\u30ea\u5165\u529b\uff09"}], "max_tokens": 2048}}
{"custom_id": "p02226_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\ntest \nUnionFind\uff08\u30d0\u30a4\u30ca\u30ea\u5165\u529b\uff09"}], "max_tokens": 2048}}
{"custom_id": "p02226_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\ntest \nUnionFind\uff08\u30d0\u30a4\u30ca\u30ea\u5165\u529b\uff09"}], "max_tokens": 2048}}
{"custom_id": "p02226_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\ntest \nUnionFind\uff08\u30d0\u30a4\u30ca\u30ea\u5165\u529b\uff09"}], "max_tokens": 2048}}
{"custom_id": "p02230_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nUF with binary input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02230_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nUF with binary input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02230_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nUF with binary input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02230_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nUF with binary input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02231_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nUF with standard input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02231_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nUF with standard input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02231_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nUF with standard input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02231_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nUF with standard input (K = 100)"}], "max_tokens": 2048}}
{"custom_id": "p02232_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nProblem is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02232_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nProblem is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02232_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nProblem is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02232_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nProblem is available from here."}], "max_tokens": 2048}}
{"custom_id": "p02233_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nFibonacci Number\n\n  Write a program which prints $n$-th fibonacci number for a given integer $n$. The $n$-th fibonacci number is defined by the following recursive formula:\n\n\n\\begin{equation*}\nfib(n)= \\left \\{\n\\begin{array}{ll}\n1\u3000         &   (n = 0)          \\\\\n1\u3000         &  (n = 1) \\\\\nfib(n - 1) + fib(n - 2)  & \\\\\n\\end{array}\n\\right.\n\\end{equation*}\n\nInput\n\n  An integer $n$ is given.\n\noutput\n\n  Print the $n$-th fibonacci number in a line.\n\nConstraints\n\n$0 \\leq n \\leq 44$\n\nSample Input 1\n\n3\n\nSample Output 1\n\n3"}], "max_tokens": 2048}}
{"custom_id": "p02233_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nFibonacci Number\n\n  Write a program which prints $n$-th fibonacci number for a given integer $n$. The $n$-th fibonacci number is defined by the following recursive formula:\n\n\n\\begin{equation*}\nfib(n)= \\left \\{\n\\begin{array}{ll}\n1\u3000         &   (n = 0)          \\\\\n1\u3000         &  (n = 1) \\\\\nfib(n - 1) + fib(n - 2)  & \\\\\n\\end{array}\n\\right.\n\\end{equation*}\n\nInput\n\n  An integer $n$ is given.\n\noutput\n\n  Print the $n$-th fibonacci number in a line.\n\nConstraints\n\n$0 \\leq n \\leq 44$\n\nSample Input 1\n\n3\n\nSample Output 1\n\n3"}], "max_tokens": 2048}}
{"custom_id": "p02233_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nFibonacci Number\n\n  Write a program which prints $n$-th fibonacci number for a given integer $n$. The $n$-th fibonacci number is defined by the following recursive formula:\n\n\n\\begin{equation*}\nfib(n)= \\left \\{\n\\begin{array}{ll}\n1\u3000         &   (n = 0)          \\\\\n1\u3000         &  (n = 1) \\\\\nfib(n - 1) + fib(n - 2)  & \\\\\n\\end{array}\n\\right.\n\\end{equation*}\n\nInput\n\n  An integer $n$ is given.\n\noutput\n\n  Print the $n$-th fibonacci number in a line.\n\nConstraints\n\n$0 \\leq n \\leq 44$\n\nSample Input 1\n\n3\n\nSample Output 1\n\n3"}], "max_tokens": 2048}}
{"custom_id": "p02233_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nFibonacci Number\n\n  Write a program which prints $n$-th fibonacci number for a given integer $n$. The $n$-th fibonacci number is defined by the following recursive formula:\n\n\n\\begin{equation*}\nfib(n)= \\left \\{\n\\begin{array}{ll}\n1\u3000         &   (n = 0)          \\\\\n1\u3000         &  (n = 1) \\\\\nfib(n - 1) + fib(n - 2)  & \\\\\n\\end{array}\n\\right.\n\\end{equation*}\n\nInput\n\n  An integer $n$ is given.\n\noutput\n\n  Print the $n$-th fibonacci number in a line.\n\nConstraints\n\n$0 \\leq n \\leq 44$\n\nSample Input 1\n\n3\n\nSample Output 1\n\n3"}], "max_tokens": 2048}}
{"custom_id": "p02234_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nMatrix-chain Multiplication\n\n  The goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $M_1, M_2, M_3,...,M_n$.\n\n\n  Write a program which reads dimensions of $M_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $M_1M_2...M_n$.\n\nInput\n\n  In the first line, an integer $n$ is given. In the following $n$ lines, the dimension of matrix $M_i$ ($i = 1...n$) is given by two integers $r$ and $c$ which respectively represents the number of rows and columns of $M_i$.\n\nOutput\n\n  Print the minimum number of scalar multiplication in a line.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$1 \\leq r, c \\leq 100$\n\nSample Input 1\n\n6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25\n\nSample Output 1\n\n15125"}], "max_tokens": 2048}}
{"custom_id": "p02234_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nMatrix-chain Multiplication\n\n  The goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $M_1, M_2, M_3,...,M_n$.\n\n\n  Write a program which reads dimensions of $M_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $M_1M_2...M_n$.\n\nInput\n\n  In the first line, an integer $n$ is given. In the following $n$ lines, the dimension of matrix $M_i$ ($i = 1...n$) is given by two integers $r$ and $c$ which respectively represents the number of rows and columns of $M_i$.\n\nOutput\n\n  Print the minimum number of scalar multiplication in a line.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$1 \\leq r, c \\leq 100$\n\nSample Input 1\n\n6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25\n\nSample Output 1\n\n15125"}], "max_tokens": 2048}}
{"custom_id": "p02234_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nMatrix-chain Multiplication\n\n  The goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $M_1, M_2, M_3,...,M_n$.\n\n\n  Write a program which reads dimensions of $M_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $M_1M_2...M_n$.\n\nInput\n\n  In the first line, an integer $n$ is given. In the following $n$ lines, the dimension of matrix $M_i$ ($i = 1...n$) is given by two integers $r$ and $c$ which respectively represents the number of rows and columns of $M_i$.\n\nOutput\n\n  Print the minimum number of scalar multiplication in a line.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$1 \\leq r, c \\leq 100$\n\nSample Input 1\n\n6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25\n\nSample Output 1\n\n15125"}], "max_tokens": 2048}}
{"custom_id": "p02234_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nMatrix-chain Multiplication\n\n  The goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $M_1, M_2, M_3,...,M_n$.\n\n\n  Write a program which reads dimensions of $M_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $M_1M_2...M_n$.\n\nInput\n\n  In the first line, an integer $n$ is given. In the following $n$ lines, the dimension of matrix $M_i$ ($i = 1...n$) is given by two integers $r$ and $c$ which respectively represents the number of rows and columns of $M_i$.\n\nOutput\n\n  Print the minimum number of scalar multiplication in a line.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$1 \\leq r, c \\leq 100$\n\nSample Input 1\n\n6\n30 35\n35 15\n15 5\n5 10\n10 20\n20 25\n\nSample Output 1\n\n15125"}], "max_tokens": 2048}}
{"custom_id": "p02235_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nLongest Common Subsequence\n\nFor given two sequences $X$ and $Y$, a sequence $Z$ is a common subsequence of $X$ and $Y$ if $Z$ is a subsequence of both $X$ and $Y$. For example, if $X = \\{a,b,c,b,d,a,b\\}$ and $Y = \\{b,d,c,a,b,a\\}$, the sequence $\\{b,c,a\\}$ is a common subsequence of both $X$ and $Y$. On the other hand, the sequence $\\{b,c,a\\}$ is not a longest common subsequence (LCS) of $X$ and $Y$, since it has length 3 and the sequence $\\{b,c,b,a\\}$, which is also common to both $X$ and $Y$, has length 4. The sequence $\\{b,c,b,a\\}$ is an LCS of $X$ and $Y$, since there is no common subsequence of length 5 or greater.\n\n\n  Write a program which finds the length of LCS of given two sequences $X$ and $Y$. The sequence consists of alphabetical characters.\n\nInput\n\n  The input consists of multiple datasets. In the first line, an integer $q$ which is the number of datasets is given. In the following $2 \\times q$ lines, each dataset which consists of the two sequences $X$ and $Y$ are given.\n\nOutput\n\n  For each dataset, print the length of LCS of $X$ and $Y$ in a line.\n\nConstraints\n\n$1 \\leq q \\leq 150$\n$1 \\leq$ length of $X$ and $Y$ $\\leq 1,000$\n$q \\leq 20$ if the dataset includes a sequence whose length is more than 100\n\nSample Input 1\n\n3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc\n\nSample Output 1\n\n4\n3\n2\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02235_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nLongest Common Subsequence\n\nFor given two sequences $X$ and $Y$, a sequence $Z$ is a common subsequence of $X$ and $Y$ if $Z$ is a subsequence of both $X$ and $Y$. For example, if $X = \\{a,b,c,b,d,a,b\\}$ and $Y = \\{b,d,c,a,b,a\\}$, the sequence $\\{b,c,a\\}$ is a common subsequence of both $X$ and $Y$. On the other hand, the sequence $\\{b,c,a\\}$ is not a longest common subsequence (LCS) of $X$ and $Y$, since it has length 3 and the sequence $\\{b,c,b,a\\}$, which is also common to both $X$ and $Y$, has length 4. The sequence $\\{b,c,b,a\\}$ is an LCS of $X$ and $Y$, since there is no common subsequence of length 5 or greater.\n\n\n  Write a program which finds the length of LCS of given two sequences $X$ and $Y$. The sequence consists of alphabetical characters.\n\nInput\n\n  The input consists of multiple datasets. In the first line, an integer $q$ which is the number of datasets is given. In the following $2 \\times q$ lines, each dataset which consists of the two sequences $X$ and $Y$ are given.\n\nOutput\n\n  For each dataset, print the length of LCS of $X$ and $Y$ in a line.\n\nConstraints\n\n$1 \\leq q \\leq 150$\n$1 \\leq$ length of $X$ and $Y$ $\\leq 1,000$\n$q \\leq 20$ if the dataset includes a sequence whose length is more than 100\n\nSample Input 1\n\n3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc\n\nSample Output 1\n\n4\n3\n2\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02235_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nLongest Common Subsequence\n\nFor given two sequences $X$ and $Y$, a sequence $Z$ is a common subsequence of $X$ and $Y$ if $Z$ is a subsequence of both $X$ and $Y$. For example, if $X = \\{a,b,c,b,d,a,b\\}$ and $Y = \\{b,d,c,a,b,a\\}$, the sequence $\\{b,c,a\\}$ is a common subsequence of both $X$ and $Y$. On the other hand, the sequence $\\{b,c,a\\}$ is not a longest common subsequence (LCS) of $X$ and $Y$, since it has length 3 and the sequence $\\{b,c,b,a\\}$, which is also common to both $X$ and $Y$, has length 4. The sequence $\\{b,c,b,a\\}$ is an LCS of $X$ and $Y$, since there is no common subsequence of length 5 or greater.\n\n\n  Write a program which finds the length of LCS of given two sequences $X$ and $Y$. The sequence consists of alphabetical characters.\n\nInput\n\n  The input consists of multiple datasets. In the first line, an integer $q$ which is the number of datasets is given. In the following $2 \\times q$ lines, each dataset which consists of the two sequences $X$ and $Y$ are given.\n\nOutput\n\n  For each dataset, print the length of LCS of $X$ and $Y$ in a line.\n\nConstraints\n\n$1 \\leq q \\leq 150$\n$1 \\leq$ length of $X$ and $Y$ $\\leq 1,000$\n$q \\leq 20$ if the dataset includes a sequence whose length is more than 100\n\nSample Input 1\n\n3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc\n\nSample Output 1\n\n4\n3\n2\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02235_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nLongest Common Subsequence\n\nFor given two sequences $X$ and $Y$, a sequence $Z$ is a common subsequence of $X$ and $Y$ if $Z$ is a subsequence of both $X$ and $Y$. For example, if $X = \\{a,b,c,b,d,a,b\\}$ and $Y = \\{b,d,c,a,b,a\\}$, the sequence $\\{b,c,a\\}$ is a common subsequence of both $X$ and $Y$. On the other hand, the sequence $\\{b,c,a\\}$ is not a longest common subsequence (LCS) of $X$ and $Y$, since it has length 3 and the sequence $\\{b,c,b,a\\}$, which is also common to both $X$ and $Y$, has length 4. The sequence $\\{b,c,b,a\\}$ is an LCS of $X$ and $Y$, since there is no common subsequence of length 5 or greater.\n\n\n  Write a program which finds the length of LCS of given two sequences $X$ and $Y$. The sequence consists of alphabetical characters.\n\nInput\n\n  The input consists of multiple datasets. In the first line, an integer $q$ which is the number of datasets is given. In the following $2 \\times q$ lines, each dataset which consists of the two sequences $X$ and $Y$ are given.\n\nOutput\n\n  For each dataset, print the length of LCS of $X$ and $Y$ in a line.\n\nConstraints\n\n$1 \\leq q \\leq 150$\n$1 \\leq$ length of $X$ and $Y$ $\\leq 1,000$\n$q \\leq 20$ if the dataset includes a sequence whose length is more than 100\n\nSample Input 1\n\n3\nabcbdab\nbdcaba\nabc\nabc\nabc\nbc\n\nSample Output 1\n\n4\n3\n2\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02236_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nOptimal Binary Search Tree\n\nOptimal Binary Search Tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation.\n\n\n  We are given a sequence $K = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. For each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. Some searches may be for values not in $K$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $K$. The dummy keys $d_i (0 \\le i \\le n)$ are defined as follows:\n\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\nif $i=0$, then $d_i$ represents all values less than $k_1$\nif $i=n$, then $d_i$ represents all values greater than $k_n$\nif $1 \\le i \\le n-1$, then $d_i$ represents all values between $k_i$ and $k_{i+1}$\n\n\n  For each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.\nFor $p_i (1 \\le i \\le n)$ and $q_i (0 \\le i \\le n)$, we have \n\n  \\[\n  \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1\n  \\]\n\n  Then the expected cost of a search in a binary search tree $T$ is\n\n  \\[\n  E_T = \\sum_{i=1}^n (depth_T(k_i) + 1) \\cdot p_i + \\sum_{i=0}^n (depth_T(d_i) + 1) \\cdot q_i\n  \\]\n\n  where $depth_T(v)$ is the depth of node $v$ in $T$.\n\n  For a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. We call such a tree an optimal binary search tree.\n\n\n\nEach key $k_i$ is an internal node and each dummy key $d_i$ is a leaf. For example, the following figure shows the optimal binary search tree obtained from Sample Input 1.\n\n\n\n\nTask\n\nWrite a program which calculates the expected value of a search operation on the optimal binary search tree obtained by given $p_i$ that a search will be for $k_i$ and $q_i$ that a search will correspond to $d_i$.\n\nInput\n\n$n$\n$p_1$ $p_2$ ... $p_n$\n$q_0$ $q_1$ $q_2$ ... $q_n$\n\n\n  In the first line, an integer $n$ which represents the number of keys is given.\nIn the second line, $p_i (1 \\le i \\le n)$ are given in real numbers with four decimal places.\nIn the third line, $q_i (0 \\le i \\le n)$ are given in real numbers with four decimal places.\n\nOutput\n\n  Print the expected value for a search operation on the optimal binary search tree in a line.\nThe output must not contain an error greater than $10^{\u22124}$.\n\nConstraints\n\n$1 \\le n \\le 500$\n$0 \\lt p_i, q_i \\lt 1$\n$\\displaystyle \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1$\n\nSample Input 1\n\n5\n0.1500 0.1000 0.0500 0.1000 0.2000\n0.0500 0.1000 0.0500 0.0500 0.0500 0.1000\n\nSample Output 1\n\n2.75000000\n\nSample Input 2\n\n7\n0.0400 0.0600 0.0800 0.0200 0.1000 0.1200 0.1400\n0.0600 0.0600 0.0600 0.0600 0.0500 0.0500 0.0500 0.0500\n\nSample Output 2\n\n3.12000000"}], "max_tokens": 2048}}
{"custom_id": "p02236_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nOptimal Binary Search Tree\n\nOptimal Binary Search Tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation.\n\n\n  We are given a sequence $K = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. For each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. Some searches may be for values not in $K$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $K$. The dummy keys $d_i (0 \\le i \\le n)$ are defined as follows:\n\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\nif $i=0$, then $d_i$ represents all values less than $k_1$\nif $i=n$, then $d_i$ represents all values greater than $k_n$\nif $1 \\le i \\le n-1$, then $d_i$ represents all values between $k_i$ and $k_{i+1}$\n\n\n  For each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.\nFor $p_i (1 \\le i \\le n)$ and $q_i (0 \\le i \\le n)$, we have \n\n  \\[\n  \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1\n  \\]\n\n  Then the expected cost of a search in a binary search tree $T$ is\n\n  \\[\n  E_T = \\sum_{i=1}^n (depth_T(k_i) + 1) \\cdot p_i + \\sum_{i=0}^n (depth_T(d_i) + 1) \\cdot q_i\n  \\]\n\n  where $depth_T(v)$ is the depth of node $v$ in $T$.\n\n  For a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. We call such a tree an optimal binary search tree.\n\n\n\nEach key $k_i$ is an internal node and each dummy key $d_i$ is a leaf. For example, the following figure shows the optimal binary search tree obtained from Sample Input 1.\n\n\n\n\nTask\n\nWrite a program which calculates the expected value of a search operation on the optimal binary search tree obtained by given $p_i$ that a search will be for $k_i$ and $q_i$ that a search will correspond to $d_i$.\n\nInput\n\n$n$\n$p_1$ $p_2$ ... $p_n$\n$q_0$ $q_1$ $q_2$ ... $q_n$\n\n\n  In the first line, an integer $n$ which represents the number of keys is given.\nIn the second line, $p_i (1 \\le i \\le n)$ are given in real numbers with four decimal places.\nIn the third line, $q_i (0 \\le i \\le n)$ are given in real numbers with four decimal places.\n\nOutput\n\n  Print the expected value for a search operation on the optimal binary search tree in a line.\nThe output must not contain an error greater than $10^{\u22124}$.\n\nConstraints\n\n$1 \\le n \\le 500$\n$0 \\lt p_i, q_i \\lt 1$\n$\\displaystyle \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1$\n\nSample Input 1\n\n5\n0.1500 0.1000 0.0500 0.1000 0.2000\n0.0500 0.1000 0.0500 0.0500 0.0500 0.1000\n\nSample Output 1\n\n2.75000000\n\nSample Input 2\n\n7\n0.0400 0.0600 0.0800 0.0200 0.1000 0.1200 0.1400\n0.0600 0.0600 0.0600 0.0600 0.0500 0.0500 0.0500 0.0500\n\nSample Output 2\n\n3.12000000"}], "max_tokens": 2048}}
{"custom_id": "p02236_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nOptimal Binary Search Tree\n\nOptimal Binary Search Tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation.\n\n\n  We are given a sequence $K = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. For each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. Some searches may be for values not in $K$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $K$. The dummy keys $d_i (0 \\le i \\le n)$ are defined as follows:\n\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\nif $i=0$, then $d_i$ represents all values less than $k_1$\nif $i=n$, then $d_i$ represents all values greater than $k_n$\nif $1 \\le i \\le n-1$, then $d_i$ represents all values between $k_i$ and $k_{i+1}$\n\n\n  For each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.\nFor $p_i (1 \\le i \\le n)$ and $q_i (0 \\le i \\le n)$, we have \n\n  \\[\n  \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1\n  \\]\n\n  Then the expected cost of a search in a binary search tree $T$ is\n\n  \\[\n  E_T = \\sum_{i=1}^n (depth_T(k_i) + 1) \\cdot p_i + \\sum_{i=0}^n (depth_T(d_i) + 1) \\cdot q_i\n  \\]\n\n  where $depth_T(v)$ is the depth of node $v$ in $T$.\n\n  For a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. We call such a tree an optimal binary search tree.\n\n\n\nEach key $k_i$ is an internal node and each dummy key $d_i$ is a leaf. For example, the following figure shows the optimal binary search tree obtained from Sample Input 1.\n\n\n\n\nTask\n\nWrite a program which calculates the expected value of a search operation on the optimal binary search tree obtained by given $p_i$ that a search will be for $k_i$ and $q_i$ that a search will correspond to $d_i$.\n\nInput\n\n$n$\n$p_1$ $p_2$ ... $p_n$\n$q_0$ $q_1$ $q_2$ ... $q_n$\n\n\n  In the first line, an integer $n$ which represents the number of keys is given.\nIn the second line, $p_i (1 \\le i \\le n)$ are given in real numbers with four decimal places.\nIn the third line, $q_i (0 \\le i \\le n)$ are given in real numbers with four decimal places.\n\nOutput\n\n  Print the expected value for a search operation on the optimal binary search tree in a line.\nThe output must not contain an error greater than $10^{\u22124}$.\n\nConstraints\n\n$1 \\le n \\le 500$\n$0 \\lt p_i, q_i \\lt 1$\n$\\displaystyle \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1$\n\nSample Input 1\n\n5\n0.1500 0.1000 0.0500 0.1000 0.2000\n0.0500 0.1000 0.0500 0.0500 0.0500 0.1000\n\nSample Output 1\n\n2.75000000\n\nSample Input 2\n\n7\n0.0400 0.0600 0.0800 0.0200 0.1000 0.1200 0.1400\n0.0600 0.0600 0.0600 0.0600 0.0500 0.0500 0.0500 0.0500\n\nSample Output 2\n\n3.12000000"}], "max_tokens": 2048}}
{"custom_id": "p02236_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nOptimal Binary Search Tree\n\nOptimal Binary Search Tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation.\n\n\n  We are given a sequence $K = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. For each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. Some searches may be for values not in $K$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $K$. The dummy keys $d_i (0 \\le i \\le n)$ are defined as follows:\n\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\nif $i=0$, then $d_i$ represents all values less than $k_1$\nif $i=n$, then $d_i$ represents all values greater than $k_n$\nif $1 \\le i \\le n-1$, then $d_i$ represents all values between $k_i$ and $k_{i+1}$\n\n\n  For each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.\nFor $p_i (1 \\le i \\le n)$ and $q_i (0 \\le i \\le n)$, we have \n\n  \\[\n  \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1\n  \\]\n\n  Then the expected cost of a search in a binary search tree $T$ is\n\n  \\[\n  E_T = \\sum_{i=1}^n (depth_T(k_i) + 1) \\cdot p_i + \\sum_{i=0}^n (depth_T(d_i) + 1) \\cdot q_i\n  \\]\n\n  where $depth_T(v)$ is the depth of node $v$ in $T$.\n\n  For a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. We call such a tree an optimal binary search tree.\n\n\n\nEach key $k_i$ is an internal node and each dummy key $d_i$ is a leaf. For example, the following figure shows the optimal binary search tree obtained from Sample Input 1.\n\n\n\n\nTask\n\nWrite a program which calculates the expected value of a search operation on the optimal binary search tree obtained by given $p_i$ that a search will be for $k_i$ and $q_i$ that a search will correspond to $d_i$.\n\nInput\n\n$n$\n$p_1$ $p_2$ ... $p_n$\n$q_0$ $q_1$ $q_2$ ... $q_n$\n\n\n  In the first line, an integer $n$ which represents the number of keys is given.\nIn the second line, $p_i (1 \\le i \\le n)$ are given in real numbers with four decimal places.\nIn the third line, $q_i (0 \\le i \\le n)$ are given in real numbers with four decimal places.\n\nOutput\n\n  Print the expected value for a search operation on the optimal binary search tree in a line.\nThe output must not contain an error greater than $10^{\u22124}$.\n\nConstraints\n\n$1 \\le n \\le 500$\n$0 \\lt p_i, q_i \\lt 1$\n$\\displaystyle \\sum_{i=1}^n p_i + \\sum_{i=0}^n q_i = 1$\n\nSample Input 1\n\n5\n0.1500 0.1000 0.0500 0.1000 0.2000\n0.0500 0.1000 0.0500 0.0500 0.0500 0.1000\n\nSample Output 1\n\n2.75000000\n\nSample Input 2\n\n7\n0.0400 0.0600 0.0800 0.0200 0.1000 0.1200 0.1400\n0.0600 0.0600 0.0600 0.0600 0.0500 0.0500 0.0500 0.0500\n\nSample Output 2\n\n3.12000000"}], "max_tokens": 2048}}
{"custom_id": "p02237_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nGraph\n\nThere are two standard ways to represent a graph $G = (V, E)$, where $V$ is a set of vertices and $E$ is a set of edges; Adjacency list representation and Adjacency matrix representation.\n\n\n  An adjacency-list representation consists of an array $Adj[|V|]$ of $|V|$ lists, one for each vertex in $V$. For each $u \\in V$, the adjacency list $Adj[u]$ contains all vertices $v$ such that there is an edge $(u, v) \\in E$. That is, $Adj[u]$ consists of all vertices adjacent to $u$ in $G$.\n\n\n  An adjacency-matrix representation consists of $|V| \\times |V|$ matrix $A = a_{ij}$ such that $a_{ij} = 1$ if $(i, j) \\in E$, $a_{ij} = 0$ otherwise.\n\n\n  Write a program which reads a directed graph $G$ represented by the adjacency list, and prints its adjacency-matrix representation. $G$ consists of $n\\; (=|V|)$ vertices identified by their IDs $1, 2,.., n$ respectively.\n\nInput\n\n  In the first line, an integer $n$ is given. In the next $n$ lines, an adjacency list $Adj[u]$ for vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n $u$ is vertex ID and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  As shown in the following sample output, print the adjacent-matrix representation of $G$. Put a single space character between $a_{ij}$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output\n\n0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"}], "max_tokens": 2048}}
{"custom_id": "p02237_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nGraph\n\nThere are two standard ways to represent a graph $G = (V, E)$, where $V$ is a set of vertices and $E$ is a set of edges; Adjacency list representation and Adjacency matrix representation.\n\n\n  An adjacency-list representation consists of an array $Adj[|V|]$ of $|V|$ lists, one for each vertex in $V$. For each $u \\in V$, the adjacency list $Adj[u]$ contains all vertices $v$ such that there is an edge $(u, v) \\in E$. That is, $Adj[u]$ consists of all vertices adjacent to $u$ in $G$.\n\n\n  An adjacency-matrix representation consists of $|V| \\times |V|$ matrix $A = a_{ij}$ such that $a_{ij} = 1$ if $(i, j) \\in E$, $a_{ij} = 0$ otherwise.\n\n\n  Write a program which reads a directed graph $G$ represented by the adjacency list, and prints its adjacency-matrix representation. $G$ consists of $n\\; (=|V|)$ vertices identified by their IDs $1, 2,.., n$ respectively.\n\nInput\n\n  In the first line, an integer $n$ is given. In the next $n$ lines, an adjacency list $Adj[u]$ for vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n $u$ is vertex ID and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  As shown in the following sample output, print the adjacent-matrix representation of $G$. Put a single space character between $a_{ij}$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output\n\n0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"}], "max_tokens": 2048}}
{"custom_id": "p02237_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nGraph\n\nThere are two standard ways to represent a graph $G = (V, E)$, where $V$ is a set of vertices and $E$ is a set of edges; Adjacency list representation and Adjacency matrix representation.\n\n\n  An adjacency-list representation consists of an array $Adj[|V|]$ of $|V|$ lists, one for each vertex in $V$. For each $u \\in V$, the adjacency list $Adj[u]$ contains all vertices $v$ such that there is an edge $(u, v) \\in E$. That is, $Adj[u]$ consists of all vertices adjacent to $u$ in $G$.\n\n\n  An adjacency-matrix representation consists of $|V| \\times |V|$ matrix $A = a_{ij}$ such that $a_{ij} = 1$ if $(i, j) \\in E$, $a_{ij} = 0$ otherwise.\n\n\n  Write a program which reads a directed graph $G$ represented by the adjacency list, and prints its adjacency-matrix representation. $G$ consists of $n\\; (=|V|)$ vertices identified by their IDs $1, 2,.., n$ respectively.\n\nInput\n\n  In the first line, an integer $n$ is given. In the next $n$ lines, an adjacency list $Adj[u]$ for vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n $u$ is vertex ID and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  As shown in the following sample output, print the adjacent-matrix representation of $G$. Put a single space character between $a_{ij}$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output\n\n0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"}], "max_tokens": 2048}}
{"custom_id": "p02237_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nGraph\n\nThere are two standard ways to represent a graph $G = (V, E)$, where $V$ is a set of vertices and $E$ is a set of edges; Adjacency list representation and Adjacency matrix representation.\n\n\n  An adjacency-list representation consists of an array $Adj[|V|]$ of $|V|$ lists, one for each vertex in $V$. For each $u \\in V$, the adjacency list $Adj[u]$ contains all vertices $v$ such that there is an edge $(u, v) \\in E$. That is, $Adj[u]$ consists of all vertices adjacent to $u$ in $G$.\n\n\n  An adjacency-matrix representation consists of $|V| \\times |V|$ matrix $A = a_{ij}$ such that $a_{ij} = 1$ if $(i, j) \\in E$, $a_{ij} = 0$ otherwise.\n\n\n  Write a program which reads a directed graph $G$ represented by the adjacency list, and prints its adjacency-matrix representation. $G$ consists of $n\\; (=|V|)$ vertices identified by their IDs $1, 2,.., n$ respectively.\n\nInput\n\n  In the first line, an integer $n$ is given. In the next $n$ lines, an adjacency list $Adj[u]$ for vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n $u$ is vertex ID and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  As shown in the following sample output, print the adjacent-matrix representation of $G$. Put a single space character between $a_{ij}$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output\n\n0 1 0 1\n0 0 0 1\n0 0 0 0\n0 0 1 0"}], "max_tokens": 2048}}
{"custom_id": "p02238_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nDepth First Search\n\n  Depth-first search (DFS) follows the strategy to search \u201ddeeper\u201d in the graph whenever possible. In DFS, edges are recursively explored out of the most recently discovered vertex $v$ that still has unexplored edges leaving it. When all of $v$'s edges have been explored, the search \u201dbacktracks\u201d to explore edges leaving the vertex from which $v$ was discovered.\n\n\n  This process continues until all the vertices that are reachable from the original source vertex have been discovered. If any undiscovered vertices remain, then one of them is selected as a new source and the search is repeated from that source.\n\n\n  DFS timestamps each vertex as follows:\n\n\n$d[v]$ records when $v$ is first discovered.\n$f[v]$ records when the search finishes examining $v$\u2019s adjacency list.\n\n\n  Write a program which reads a directed graph $G = (V, E)$ and demonstrates DFS on the graph based on the following rules:\n\n\n$G$ is given in an adjacency-list. Vertices are identified by IDs $1, 2,... n$ respectively.\nIDs in the adjacency list are arranged in ascending order.\nThe program should report the discover time and the finish time for each vertex.\nWhen there are several candidates to visit during DFS, the algorithm should select the vertex with the smallest ID.\nThe timestamp starts with 1.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices of $G$ is given. In the next $n$ lines, adjacency lists of $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  For each vertex, print $id$, $d$ and $f$ separated by a space character in a line. $id$ is ID of the vertex, $d$ and $f$ is the discover time and the finish time respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input 1\n\n4\n1 1 2\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 1 8\n2 2 7\n3 4 5\n4 3 6\n\nSample Input 2\n\n6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0\n\nSample Output 2\n\n1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6\n\n\n\n\n  This is example for Sample Input 2 (discover/finish)\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02238_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nDepth First Search\n\n  Depth-first search (DFS) follows the strategy to search \u201ddeeper\u201d in the graph whenever possible. In DFS, edges are recursively explored out of the most recently discovered vertex $v$ that still has unexplored edges leaving it. When all of $v$'s edges have been explored, the search \u201dbacktracks\u201d to explore edges leaving the vertex from which $v$ was discovered.\n\n\n  This process continues until all the vertices that are reachable from the original source vertex have been discovered. If any undiscovered vertices remain, then one of them is selected as a new source and the search is repeated from that source.\n\n\n  DFS timestamps each vertex as follows:\n\n\n$d[v]$ records when $v$ is first discovered.\n$f[v]$ records when the search finishes examining $v$\u2019s adjacency list.\n\n\n  Write a program which reads a directed graph $G = (V, E)$ and demonstrates DFS on the graph based on the following rules:\n\n\n$G$ is given in an adjacency-list. Vertices are identified by IDs $1, 2,... n$ respectively.\nIDs in the adjacency list are arranged in ascending order.\nThe program should report the discover time and the finish time for each vertex.\nWhen there are several candidates to visit during DFS, the algorithm should select the vertex with the smallest ID.\nThe timestamp starts with 1.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices of $G$ is given. In the next $n$ lines, adjacency lists of $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  For each vertex, print $id$, $d$ and $f$ separated by a space character in a line. $id$ is ID of the vertex, $d$ and $f$ is the discover time and the finish time respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input 1\n\n4\n1 1 2\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 1 8\n2 2 7\n3 4 5\n4 3 6\n\nSample Input 2\n\n6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0\n\nSample Output 2\n\n1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6\n\n\n\n\n  This is example for Sample Input 2 (discover/finish)\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02238_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nDepth First Search\n\n  Depth-first search (DFS) follows the strategy to search \u201ddeeper\u201d in the graph whenever possible. In DFS, edges are recursively explored out of the most recently discovered vertex $v$ that still has unexplored edges leaving it. When all of $v$'s edges have been explored, the search \u201dbacktracks\u201d to explore edges leaving the vertex from which $v$ was discovered.\n\n\n  This process continues until all the vertices that are reachable from the original source vertex have been discovered. If any undiscovered vertices remain, then one of them is selected as a new source and the search is repeated from that source.\n\n\n  DFS timestamps each vertex as follows:\n\n\n$d[v]$ records when $v$ is first discovered.\n$f[v]$ records when the search finishes examining $v$\u2019s adjacency list.\n\n\n  Write a program which reads a directed graph $G = (V, E)$ and demonstrates DFS on the graph based on the following rules:\n\n\n$G$ is given in an adjacency-list. Vertices are identified by IDs $1, 2,... n$ respectively.\nIDs in the adjacency list are arranged in ascending order.\nThe program should report the discover time and the finish time for each vertex.\nWhen there are several candidates to visit during DFS, the algorithm should select the vertex with the smallest ID.\nThe timestamp starts with 1.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices of $G$ is given. In the next $n$ lines, adjacency lists of $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  For each vertex, print $id$, $d$ and $f$ separated by a space character in a line. $id$ is ID of the vertex, $d$ and $f$ is the discover time and the finish time respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input 1\n\n4\n1 1 2\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 1 8\n2 2 7\n3 4 5\n4 3 6\n\nSample Input 2\n\n6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0\n\nSample Output 2\n\n1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6\n\n\n\n\n  This is example for Sample Input 2 (discover/finish)\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02238_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nDepth First Search\n\n  Depth-first search (DFS) follows the strategy to search \u201ddeeper\u201d in the graph whenever possible. In DFS, edges are recursively explored out of the most recently discovered vertex $v$ that still has unexplored edges leaving it. When all of $v$'s edges have been explored, the search \u201dbacktracks\u201d to explore edges leaving the vertex from which $v$ was discovered.\n\n\n  This process continues until all the vertices that are reachable from the original source vertex have been discovered. If any undiscovered vertices remain, then one of them is selected as a new source and the search is repeated from that source.\n\n\n  DFS timestamps each vertex as follows:\n\n\n$d[v]$ records when $v$ is first discovered.\n$f[v]$ records when the search finishes examining $v$\u2019s adjacency list.\n\n\n  Write a program which reads a directed graph $G = (V, E)$ and demonstrates DFS on the graph based on the following rules:\n\n\n$G$ is given in an adjacency-list. Vertices are identified by IDs $1, 2,... n$ respectively.\nIDs in the adjacency list are arranged in ascending order.\nThe program should report the discover time and the finish time for each vertex.\nWhen there are several candidates to visit during DFS, the algorithm should select the vertex with the smallest ID.\nThe timestamp starts with 1.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices of $G$ is given. In the next $n$ lines, adjacency lists of $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree. $v_i$ are IDs of vertices adjacent to $u$.\n\nOutput\n\n  For each vertex, print $id$, $d$ and $f$ separated by a space character in a line. $id$ is ID of the vertex, $d$ and $f$ is the discover time and the finish time respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nSample Input 1\n\n4\n1 1 2\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 1 8\n2 2 7\n3 4 5\n4 3 6\n\nSample Input 2\n\n6\n1 2 2 3\n2 2 3 4\n3 1 5\n4 1 6\n5 1 6\n6 0\n\nSample Output 2\n\n1 1 12\n2 2 11\n3 3 8\n4 9 10\n5 4 7\n6 5 6\n\n\n\n\n  This is example for Sample Input 2 (discover/finish)\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02239_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nBreadth First Search\n\n  Write a program which reads an directed graph $G = (V, E)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). Vertices are identified by IDs $1, 2, ... n$. \n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices, is given. In the next $n$ lines, adjacent lists of vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree.$v_i$ are IDs of vertices adjacent to $u$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nOutput\n\n  For each vertex $u$, print $id$ and $d$ in a line. $id$ is ID of vertex $u$ and $d$ is the distance from vertex $1$ to vertex $u$. If there are no path from vertex $1$ to vertex $u$, print -1 as the shortest distance. Print in order of IDs.\n\nSample Input 1\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 0\n2 1\n3 2\n4 1\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02239_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nBreadth First Search\n\n  Write a program which reads an directed graph $G = (V, E)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). Vertices are identified by IDs $1, 2, ... n$. \n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices, is given. In the next $n$ lines, adjacent lists of vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree.$v_i$ are IDs of vertices adjacent to $u$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nOutput\n\n  For each vertex $u$, print $id$ and $d$ in a line. $id$ is ID of vertex $u$ and $d$ is the distance from vertex $1$ to vertex $u$. If there are no path from vertex $1$ to vertex $u$, print -1 as the shortest distance. Print in order of IDs.\n\nSample Input 1\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 0\n2 1\n3 2\n4 1\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02239_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nBreadth First Search\n\n  Write a program which reads an directed graph $G = (V, E)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). Vertices are identified by IDs $1, 2, ... n$. \n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices, is given. In the next $n$ lines, adjacent lists of vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree.$v_i$ are IDs of vertices adjacent to $u$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nOutput\n\n  For each vertex $u$, print $id$ and $d$ in a line. $id$ is ID of vertex $u$ and $d$ is the distance from vertex $1$ to vertex $u$. If there are no path from vertex $1$ to vertex $u$, print -1 as the shortest distance. Print in order of IDs.\n\nSample Input 1\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 0\n2 1\n3 2\n4 1\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02239_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nBreadth First Search\n\n  Write a program which reads an directed graph $G = (V, E)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). Vertices are identified by IDs $1, 2, ... n$. \n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices, is given. In the next $n$ lines, adjacent lists of vertex $u$ are given in the following format:\n\n\n$u$ $k$ $v_1$ $v_2$ ... $v_k$\n\n\n$u$ is ID of the vertex and $k$ denotes its degree.$v_i$ are IDs of vertices adjacent to $u$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n\nOutput\n\n  For each vertex $u$, print $id$ and $d$ in a line. $id$ is ID of vertex $u$ and $d$ is the distance from vertex $1$ to vertex $u$. If there are no path from vertex $1$ to vertex $u$, print -1 as the shortest distance. Print in order of IDs.\n\nSample Input 1\n\n4\n1 2 2 4\n2 1 4\n3 0\n4 1 3\n\nSample Output 1\n\n1 0\n2 1\n3 2\n4 1\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02240_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nConnected Components\n\n  Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.\n\nInput\n\n  In the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, ..., n-1$.\n\n\n  In the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other).\n\n\n  In the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.\n\nOutput\n\n  For each query, print \"yes\" if $t$ is reachable from $s$ through the social network, \"no\" otherwise.\n\nConstraints\n\n$2 \\leq n \\leq 100,000$\n$0 \\leq m \\leq 100,000$\n$1 \\leq q \\leq 10,000$\n\nSample Input\n\n10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3\n\nSample Output\n\nyes\nyes\nno"}], "max_tokens": 2048}}
{"custom_id": "p02240_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nConnected Components\n\n  Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.\n\nInput\n\n  In the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, ..., n-1$.\n\n\n  In the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other).\n\n\n  In the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.\n\nOutput\n\n  For each query, print \"yes\" if $t$ is reachable from $s$ through the social network, \"no\" otherwise.\n\nConstraints\n\n$2 \\leq n \\leq 100,000$\n$0 \\leq m \\leq 100,000$\n$1 \\leq q \\leq 10,000$\n\nSample Input\n\n10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3\n\nSample Output\n\nyes\nyes\nno"}], "max_tokens": 2048}}
{"custom_id": "p02240_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nConnected Components\n\n  Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.\n\nInput\n\n  In the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, ..., n-1$.\n\n\n  In the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other).\n\n\n  In the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.\n\nOutput\n\n  For each query, print \"yes\" if $t$ is reachable from $s$ through the social network, \"no\" otherwise.\n\nConstraints\n\n$2 \\leq n \\leq 100,000$\n$0 \\leq m \\leq 100,000$\n$1 \\leq q \\leq 10,000$\n\nSample Input\n\n10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3\n\nSample Output\n\nyes\nyes\nno"}], "max_tokens": 2048}}
{"custom_id": "p02240_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nConnected Components\n\n  Write a program which reads relations in a SNS (Social Network Service), and judges that given pairs of users are reachable each other through the network.\n\nInput\n\n  In the first line, two integer $n$ and $m$ are given. $n$ is the number of users in the SNS and $m$ is the number of relations in the SNS. The users in the SNS are identified by IDs $0, 1, ..., n-1$.\n\n\n  In the following $m$ lines, the relations are given. Each relation is given by two integers $s$ and $t$ that represents $s$ and $t$ are friends (and reachable each other).\n\n\n  In the next line, the number of queries $q$ is given. In the following $q$ lines, $q$ queries are given respectively. Each query consists of two integers $s$ and $t$ separated by a space character.\n\nOutput\n\n  For each query, print \"yes\" if $t$ is reachable from $s$ through the social network, \"no\" otherwise.\n\nConstraints\n\n$2 \\leq n \\leq 100,000$\n$0 \\leq m \\leq 100,000$\n$1 \\leq q \\leq 10,000$\n\nSample Input\n\n10 9\n0 1\n0 2\n3 4\n5 7\n5 6\n6 7\n6 8\n7 8\n8 9\n3\n0 1\n5 9\n1 3\n\nSample Output\n\nyes\nyes\nno"}], "max_tokens": 2048}}
{"custom_id": "p02241_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nMinimum Spanning Tree\n\n  For a given weighted graph $G = (V, E)$, find the minimum spanning tree (MST) of $G$ and print total weight of edges belong to the MST.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, a $n \\times n$ adjacency matrix $A$ which represents $G$ is given.\n$a_{ij}$ denotes the weight of edge connecting vertex $i$ and vertex $j$. If there is no edge between $i$ and $j$, $a_{ij}$ is given by -1.\n\nOutput\n\nPrint the total weight of the minimum spanning tree of $G$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq a_{ij} \\leq 2,000$ (if $a_{ij} \\neq -1$)\n$a_{ij} = a_{ji}$\n$G$ is a connected graph\n\nSample Input 1\n\n5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1\n\nSample Output 1\n\n5\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02241_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nMinimum Spanning Tree\n\n  For a given weighted graph $G = (V, E)$, find the minimum spanning tree (MST) of $G$ and print total weight of edges belong to the MST.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, a $n \\times n$ adjacency matrix $A$ which represents $G$ is given.\n$a_{ij}$ denotes the weight of edge connecting vertex $i$ and vertex $j$. If there is no edge between $i$ and $j$, $a_{ij}$ is given by -1.\n\nOutput\n\nPrint the total weight of the minimum spanning tree of $G$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq a_{ij} \\leq 2,000$ (if $a_{ij} \\neq -1$)\n$a_{ij} = a_{ji}$\n$G$ is a connected graph\n\nSample Input 1\n\n5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1\n\nSample Output 1\n\n5\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02241_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nMinimum Spanning Tree\n\n  For a given weighted graph $G = (V, E)$, find the minimum spanning tree (MST) of $G$ and print total weight of edges belong to the MST.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, a $n \\times n$ adjacency matrix $A$ which represents $G$ is given.\n$a_{ij}$ denotes the weight of edge connecting vertex $i$ and vertex $j$. If there is no edge between $i$ and $j$, $a_{ij}$ is given by -1.\n\nOutput\n\nPrint the total weight of the minimum spanning tree of $G$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq a_{ij} \\leq 2,000$ (if $a_{ij} \\neq -1$)\n$a_{ij} = a_{ji}$\n$G$ is a connected graph\n\nSample Input 1\n\n5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1\n\nSample Output 1\n\n5\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02241_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nMinimum Spanning Tree\n\n  For a given weighted graph $G = (V, E)$, find the minimum spanning tree (MST) of $G$ and print total weight of edges belong to the MST.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, a $n \\times n$ adjacency matrix $A$ which represents $G$ is given.\n$a_{ij}$ denotes the weight of edge connecting vertex $i$ and vertex $j$. If there is no edge between $i$ and $j$, $a_{ij}$ is given by -1.\n\nOutput\n\nPrint the total weight of the minimum spanning tree of $G$.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq a_{ij} \\leq 2,000$ (if $a_{ij} \\neq -1$)\n$a_{ij} = a_{ji}$\n$G$ is a connected graph\n\nSample Input 1\n\n5\n -1 2 3 1 -1\n 2 -1 -1 4 -1\n 3 -1 -1 1 1\n 1 4 1 -1 3\n -1 -1 1 3 -1\n\nSample Output 1\n\n5\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02242_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nSingle Source Shortest Path\n\nFor a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq c_i \\leq 100,000$\n$|E| \\leq 10,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02242_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nSingle Source Shortest Path\n\nFor a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq c_i \\leq 100,000$\n$|E| \\leq 10,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02242_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nSingle Source Shortest Path\n\nFor a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq c_i \\leq 100,000$\n$|E| \\leq 10,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02242_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nSingle Source Shortest Path\n\nFor a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 100$\n$0 \\leq c_i \\leq 100,000$\n$|E| \\leq 10,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02243_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\nSingle Source Shortest Path II\n\n  For a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 10,000$\n$0 \\leq c_i \\leq 100,000$\n$|E| < 500,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02243_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\nSingle Source Shortest Path II\n\n  For a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 10,000$\n$0 \\leq c_i \\leq 100,000$\n$|E| < 500,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02243_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\nSingle Source Shortest Path II\n\n  For a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 10,000$\n$0 \\leq c_i \\leq 100,000$\n$|E| < 500,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02243_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\nSingle Source Shortest Path II\n\n  For a given weighted graph $G = (V, E)$, find the shortest path from a source to each vertex. For each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.\n\nInput\n\n  In the first line, an integer $n$ denoting the number of vertices in $G$ is given. In the following $n$ lines, adjacency lists for each vertex $u$ are respectively given in the following format:\n\n\n$u$ $k$ $v_1$ $c_1$ $v_2$ $c_2$ ... $v_k$ $c_k$\n\n\n  Vertices in $G$ are named with IDs $0, 1, ..., n-1$. $u$ is ID of the target vertex and $k$ denotes its degree. $v_i (i = 1, 2, ... k)$ denote IDs of vertices adjacent to $u$ and $c_i$ denotes the weight of a directed edge connecting $u$ and $v_i$ (from $u$ to $v_i$).\n\nOutput\n\n  For each vertex, print its ID and the distance separated by a space character in a line respectively. Print in order of vertex IDs.\n\nConstraints\n\n$1 \\leq n \\leq 10,000$\n$0 \\leq c_i \\leq 100,000$\n$|E| < 500,000$\nAll vertices are reachable from vertex $0$\n\nSample Input 1\n\n5\n0 3 2 3 3 1 1 2\n1 2 0 2 3 4\n2 3 0 3 3 1 4 1\n3 4 2 1 0 1 1 4 4 3\n4 2 2 1 3 3\n\nSample Output 1\n\n0 0\n1 2\n2 2\n3 1\n4 3\n\n\nReference\n\nIntroduction to Algorithms, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein. The MIT Press."}], "max_tokens": 2048}}
{"custom_id": "p02244_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\n8 Queens Problem\n\n  The goal of 8 Queens Problem is to put eight queens on a chess-board such that none of them threatens any of others. A queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.\n\n\n\n\n\n  For a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.\n\nInput\n\n  In the first line, an integer $k$ is given. In the following $k$ lines, each square where a queen is already placed is given by two integers $r$ and $c$. $r$ and $c$ respectively denotes the row number and the column number. The row/column numbers start with 0.\n\nOutput\n\nPrint a $8 \\times 8$ chess board by strings where a square with a queen is represented by 'Q' and an empty square is represented by '.'.\n\nConstraints\n\nThere is exactly one solution\n\nSample Input 1\n\n2\n2 2\n5 3\n\nSample Output 1\n\n......Q.\nQ.......\n..Q.....\n.......Q\n.....Q..\n...Q....\n.Q......\n....Q..."}], "max_tokens": 2048}}
{"custom_id": "p02244_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\n8 Queens Problem\n\n  The goal of 8 Queens Problem is to put eight queens on a chess-board such that none of them threatens any of others. A queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.\n\n\n\n\n\n  For a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.\n\nInput\n\n  In the first line, an integer $k$ is given. In the following $k$ lines, each square where a queen is already placed is given by two integers $r$ and $c$. $r$ and $c$ respectively denotes the row number and the column number. The row/column numbers start with 0.\n\nOutput\n\nPrint a $8 \\times 8$ chess board by strings where a square with a queen is represented by 'Q' and an empty square is represented by '.'.\n\nConstraints\n\nThere is exactly one solution\n\nSample Input 1\n\n2\n2 2\n5 3\n\nSample Output 1\n\n......Q.\nQ.......\n..Q.....\n.......Q\n.....Q..\n...Q....\n.Q......\n....Q..."}], "max_tokens": 2048}}
{"custom_id": "p02244_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\n8 Queens Problem\n\n  The goal of 8 Queens Problem is to put eight queens on a chess-board such that none of them threatens any of others. A queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.\n\n\n\n\n\n  For a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.\n\nInput\n\n  In the first line, an integer $k$ is given. In the following $k$ lines, each square where a queen is already placed is given by two integers $r$ and $c$. $r$ and $c$ respectively denotes the row number and the column number. The row/column numbers start with 0.\n\nOutput\n\nPrint a $8 \\times 8$ chess board by strings where a square with a queen is represented by 'Q' and an empty square is represented by '.'.\n\nConstraints\n\nThere is exactly one solution\n\nSample Input 1\n\n2\n2 2\n5 3\n\nSample Output 1\n\n......Q.\nQ.......\n..Q.....\n.......Q\n.....Q..\n...Q....\n.Q......\n....Q..."}], "max_tokens": 2048}}
{"custom_id": "p02244_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\n8 Queens Problem\n\n  The goal of 8 Queens Problem is to put eight queens on a chess-board such that none of them threatens any of others. A queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.\n\n\n\n\n\n  For a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.\n\nInput\n\n  In the first line, an integer $k$ is given. In the following $k$ lines, each square where a queen is already placed is given by two integers $r$ and $c$. $r$ and $c$ respectively denotes the row number and the column number. The row/column numbers start with 0.\n\nOutput\n\nPrint a $8 \\times 8$ chess board by strings where a square with a queen is represented by 'Q' and an empty square is represented by '.'.\n\nConstraints\n\nThere is exactly one solution\n\nSample Input 1\n\n2\n2 2\n5 3\n\nSample Output 1\n\n......Q.\nQ.......\n..Q.....\n.......Q\n.....Q..\n...Q....\n.Q......\n....Q..."}], "max_tokens": 2048}}
{"custom_id": "p02245_C", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C.\n            \nProblem description:\n8 Puzzle\n\n  The goal of the 8 puzzle problem is to complete pieces on $3 \\times 3$ cells where one of the cells is empty space. \n\n\n  In this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.\n\n\n1 3 0\n4 2 5\n7 8 6\n\n\n  You can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3\n4 5 6\n7 8 0\n\n\n  Write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nInput\n\n  The $3 \\times 3$ integers denoting the pieces or space are given.\n\nOutput\n\n  Print the fewest steps in a line.\n\nConstraints\n\nThere is a solution.\n\nSample Input \n\n1 3 0\n4 2 5\n7 8 6\n\nSample Output\n\n4"}], "max_tokens": 2048}}
{"custom_id": "p02245_C++", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: C++.\n            \nProblem description:\n8 Puzzle\n\n  The goal of the 8 puzzle problem is to complete pieces on $3 \\times 3$ cells where one of the cells is empty space. \n\n\n  In this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.\n\n\n1 3 0\n4 2 5\n7 8 6\n\n\n  You can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3\n4 5 6\n7 8 0\n\n\n  Write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nInput\n\n  The $3 \\times 3$ integers denoting the pieces or space are given.\n\nOutput\n\n  Print the fewest steps in a line.\n\nConstraints\n\nThere is a solution.\n\nSample Input \n\n1 3 0\n4 2 5\n7 8 6\n\nSample Output\n\n4"}], "max_tokens": 2048}}
{"custom_id": "p02245_Java", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Java.\n            \nProblem description:\n8 Puzzle\n\n  The goal of the 8 puzzle problem is to complete pieces on $3 \\times 3$ cells where one of the cells is empty space. \n\n\n  In this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.\n\n\n1 3 0\n4 2 5\n7 8 6\n\n\n  You can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3\n4 5 6\n7 8 0\n\n\n  Write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nInput\n\n  The $3 \\times 3$ integers denoting the pieces or space are given.\n\nOutput\n\n  Print the fewest steps in a line.\n\nConstraints\n\nThere is a solution.\n\nSample Input \n\n1 3 0\n4 2 5\n7 8 6\n\nSample Output\n\n4"}], "max_tokens": 2048}}
{"custom_id": "p02245_Python", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct, and follows standard conventions for the specified language. Do not include any introductory text or output besides the code itself."}, {"role": "user", "content": "Programming language: Python.\n            \nProblem description:\n8 Puzzle\n\n  The goal of the 8 puzzle problem is to complete pieces on $3 \\times 3$ cells where one of the cells is empty space. \n\n\n  In this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.\n\n\n1 3 0\n4 2 5\n7 8 6\n\n\n  You can move a piece toward the empty space at one step. Your goal is to make the pieces the following configuration in the shortest move (fewest steps).\n\n\n1 2 3\n4 5 6\n7 8 0\n\n\n  Write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.\n\nInput\n\n  The $3 \\times 3$ integers denoting the pieces or space are given.\n\nOutput\n\n  Print the fewest steps in a line.\n\nConstraints\n\nThere is a solution.\n\nSample Input \n\n1 3 0\n4 2 5\n7 8 6\n\nSample Output\n\n4"}], "max_tokens": 2048}}
