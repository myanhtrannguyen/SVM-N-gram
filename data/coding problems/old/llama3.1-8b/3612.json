{
    "solution_id": "llama3.1-8b-3612",
    "problem_id": "p02094",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define N 200005\n#define mod 998244353\n\ntypedef long long ll;\n\nint n, a[N], b[N], c[N], d[N], fa[N], sz[N], ans;\nll f[N][N], g[N][N], h[N][N], inv[N];\n\nvoid dfs(int u, int fa) {\n    sz[u] = 1;\n    for (int v = a[u]; v; v = b[v]) {\n        if (v == fa) continue;\n        dfs(v, u);\n        sz[u] += sz[v];\n    }\n}\n\nint find(int u) {\n    if (u == fa[u]) return u;\n    return fa[u] = find(fa[u]);\n}\n\nvoid merge(int u, int v) {\n    u = find(u);\n    v = find(v);\n    if (u == v) return;\n    if (sz[u] < sz[v]) {\n        int temp = u;\n        u = v;\n        v = temp;\n    }\n    fa[v] = u;\n    sz[u] += sz[v];\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d%d\", &a[i], &b[i]);\n        b[i] = find(b[i]);\n        a[i] = find(a[i]);\n        fa[a[i]] = a[i];\n        sz[a[i]] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d%d\", &c[i], &d[i]);\n        b[i] = find(b[i]);\n        a[i] = find(a[i]);\n        fa[a[i]] = a[i];\n        sz[a[i]] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n        dfs(i, 0);\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = g[i][j] = h[i][j] = 0;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        f[i][i] = 1;\n        g[i][i] = 1;\n        h[i][i] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            for (int k = 1; k <= n; k++) {\n                if (find(i) == find(k)) {\n                    f[i][j] = (f[i][j] + f[k][j]) % mod;\n                    g[i][j] = (g[i][j] + g[k][j]) % mod;\n                    h[i][j] = (h[i][j] + h[k][j]) % mod;\n                }\n                if (find(j) == find(k)) {\n                    f[i][j] = (f[i][j] + f[i][k]) % mod;\n                    g[i][j] = (g[i][j] + g[i][k]) % mod;\n                    h[i][j] = (h[i][j] + h[i][k]) % mod;\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[i][i]) % mod;\n            g[i][j] = (g[i][j] + g[i][i]) % mod;\n            h[i][j] = (h[i][j] + h[i][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h[j][i]) % mod;\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            f[i][j] = (f[i][j] + f[j][i]) % mod;\n            g[i][j] = (g[i][j] + g[j][i]) % mod;\n            h[i][j] = (h[i][j] + h",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}