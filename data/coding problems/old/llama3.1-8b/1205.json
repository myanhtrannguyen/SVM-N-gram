{
    "solution_id": "llama3.1-8b-1205",
    "problem_id": "p00838",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAX_CUBES = 4;\nconst int MAX_FACES = 6;\n\nstruct Cube {\n    string faces[MAX_FACES];\n};\n\nint countRotations(const Cube& cube) {\n    int count = 0;\n    for (int i = 0; i < MAX_FACES; ++i) {\n        for (int j = i + 1; j < MAX_FACES; ++j) {\n            if (cube.faces[i] == cube.faces[j]) {\n                ++count;\n            }\n        }\n    }\n    return count;\n}\n\nint countCommonFaces(const Cube& cube1, const Cube& cube2) {\n    int count = 0;\n    for (int i = 0; i < MAX_FACES; ++i) {\n        for (int j = 0; j < MAX_FACES; ++j) {\n            if (cube1.faces[i] == cube2.faces[j]) {\n                ++count;\n            }\n        }\n    }\n    return count;\n}\n\nint minFacesToPaint(const vector<Cube>& cubes) {\n    int minCount = MAX_FACES;\n    for (int i = 0; i < MAX_CUBES; ++i) {\n        for (int j = i + 1; j < MAX_CUBES; ++j) {\n            int count = MAX_FACES - countCommonFaces(cubes[i], cubes[j]);\n            minCount = min(minCount, count);\n        }\n    }\n    return minCount;\n}\n\nint main() {\n    int n;\n    while (cin >> n && n != 0) {\n        vector<Cube> cubes(n);\n        for (int i = 0; i < n; ++i) {\n            for (int j = 0; j < MAX_FACES; ++j) {\n                cin >> cubes[i].faces[j];\n            }\n        }\n        int minCount = minFacesToPaint(cubes);\n        cout << minCount << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}