{
    "solution_id": "llama3.1-8b-3368",
    "problem_id": "p01887",
    "language": "C",
    "solution": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#include <time.h>\n#include <assert.h>\n#include <limits.h>\n#include <memory.h>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <set>\n#include <map>\n#include <queue>\n#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define sc second\n#define sz(a) (int)a.size()\n#define all(a) a.begin(), a.end()\n#define rall(a) a.rbegin(), a.rend()\n#define sqr(a) ((a) * (a))\n#define min(a, b) (((a) < (b)) ? (a) : (b))\n#define max(a, b) (((a) > (b)) ? (a) : (b))\n#define abs(a) (((a) < 0) ? (-(a)) : (a))\n#define forn(i, n) for (int i = 0; i < (int)(n); i++)\n#define forv(i, v) for (int i = 0; i < (int)(v.size()); i++)\n#define forr(i, n) for (int i = (int)(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = (int)(l); i < (int)(r); i++)\n#define forft(i, ft) for (int i = (ft); i < (int)(ft) + (ft).size(); i++)\n#define forb(i, b) for (int i = 0; i < (int)(b).size(); i++)\n#define forit(it, v) for (auto it = (v).begin(); it != (v).end(); it++)\n#define forrt(it, v) for (auto it = (v).rbegin(); it != (v).rend(); it++)\n#define all_bits_set(n) (((n) & ((1 << (int)log2(n)) - 1)) == ((1 << (int)log2(n)) - 1))\n#define bit_count(n) __builtin_popcount(n)\n#define bit_countll(n) __builtin_popcountll(n)\n#define gcd __gcd\n#define lcm(a, b) (((a) * (b)) / gcd(a, b))\n#define INF 1000000000\n#define INFLL 1000000000000000000LL\n#define EPS 1e-9\n#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef unsigned int uint;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\ntypedef vector<pii> vpii;\ntypedef vector<pll> vpll;\ntypedef vector<vi> vvi;\ntypedef vector<vll> vvll;\ntypedef vector<string> vs;\ntypedef vector<bool> vb;\ntypedef vector<char> vc;\ntypedef vector<vd> vvd;\ntypedef vector<vdd> vvdd;\ntypedef vector<vdb> vvdb;\ntypedef vector<vdl> vvdl;\ntypedef vector<vld> vvld;\ntypedef vector<vldd> vvldd;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq;\ntypedef vector<vq> vvq",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}