{
    "solution_id": "llama3.1-8b-3114",
    "problem_id": "p01706",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    static class Edge {\n        int to, next;\n        boolean rev;\n\n        public Edge(int to, int next, boolean rev) {\n            this.to = to;\n            this.next = next;\n            this.rev = rev;\n        }\n    }\n\n    static class Pair {\n        int first, second;\n\n        public Pair(int first, int second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    static int N, M, S, T;\n    static int[] head = new int[1005];\n    static int[] dis = new int[1005];\n    static int[] pre = new int[1005];\n    static int[] vis = new int[1005];\n    static int[] dep = new int[1005];\n    static int[] top = new int[1005];\n    static int[] dfn = new int[1005];\n    static int[] low = new int[1005];\n    static int idx = 0;\n    static int[] stk = new int[1005];\n    static int[] scc = new int[1005];\n    static int[] cnt = new int[1005];\n    static int[] ans = new int[1005];\n    static int[] rev = new int[1005];\n    static int[] val = new int[1005];\n    static Edge[] e = new Edge[20005];\n\n    static void add(int u, int v, boolean rev) {\n        e[idx] = new Edge(v, head[u], rev);\n        head[u] = idx++;\n    }\n\n    static void tarjan(int u) {\n        dfn[u] = low[u] = ++idx;\n        stk[++top[u]] = u;\n        for (int i = head[u]; i != -1; i = e[i].next) {\n            int v = e[i].to;\n            if (dfn[v] == 0) {\n                tarjan(v);\n                low[u] = Math.min(low[u], low[v]);\n            } else if (e[i].rev) {\n                low[u] = Math.min(low[u], dfn[v]);\n            }\n        }\n        if (dfn[u] == low[u]) {\n            int v;\n            do {\n                v = stk[top[u]--];\n                scc[v] = cnt[u];\n            } while (v != u);\n        }\n    }\n\n    static void dfs(int u, int d) {\n        dep[u] = d;\n        vis[u] = 1;\n        for (int i = head[u]; i != -1; i = e[i].next) {\n            int v = e[i].to;\n            if (vis[v] == 0) {\n                dfs(v, d + 1);\n            }\n        }\n    }\n\n    static void solve() throws IOException {\n        N = readInt();\n        M = readInt();\n        S = readInt();\n        T = readInt();\n        for (int i = 1; i <= N; i++) {\n            head[i] = -1;\n            dis[i] = 0x3f3f3f3f;\n            vis[i] = 0;\n            pre[i] = 0;\n            rev[i] = 0;\n            val[i] = 0;\n        }\n        for (int i = 1; i <= M; i++) {\n            int u = readInt();\n            int v = readInt();\n            add(u, v, false);\n        }\n        for (int i = 1; i <= N; i++) {\n            if (i != S && i != T) {\n                dfs(i, 0);\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            vis[i] = 0;\n        }\n        for (int i = 1; i <= N; i++) {\n            if (i != S && i != T) {\n                dfs(i, 0);\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next) {\n                int v = e[j].to;\n                if (dep[i] > dep[v]) {\n                    val[j] = 1;\n                }\n            }\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = head[i]; j != -1; j = e[j].next",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}