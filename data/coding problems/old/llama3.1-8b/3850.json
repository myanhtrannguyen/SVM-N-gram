{
    "solution_id": "llama3.1-8b-3850",
    "problem_id": "p02283",
    "language": "Java",
    "solution": "```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\nclass Node {\n    int key;\n    Node left;\n    Node right;\n    Node parent;\n\n    public Node(int key) {\n        this.key = key;\n        this.left = null;\n        this.right = null;\n        this.parent = null;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int m = scanner.nextInt();\n        Node root = null;\n        List<Integer> inorder = new ArrayList<>();\n        List<Integer> preorder = new ArrayList<>();\n\n        for (int i = 0; i < m; i++) {\n            String op = scanner.next();\n            if (op.equals(\"insert\")) {\n                int k = scanner.nextInt();\n                Node z = new Node(k);\n                insert(root, z);\n            } else {\n                inorder.clear();\n                preorder.clear();\n                inorder(root, inorder);\n                preorder(root, preorder);\n                System.out.print(inorder.toString().replaceAll(\"[\\\\[\\\\]]\", \"\") + \" \");\n                System.out.print(preorder.toString().replaceAll(\"[\\\\[\\\\]]\", \"\") + \"\\n\");\n            }\n        }\n    }\n\n    public static void insert(Node T, Node z) {\n        Node y = null;\n        Node x = T;\n        while (x != null) {\n            y = x;\n            if (z.key < x.key) {\n                x = x.left;\n            } else {\n                x = x.right;\n            }\n        }\n        z.parent = y;\n        if (y == null) {\n            T = z;\n        } else if (z.key < y.key) {\n            y.left = z;\n        } else {\n            y.right = z;\n        }\n    }\n\n    public static void inorder(Node T, List<Integer> inorder) {\n        if (T != null) {\n            inorder(T.left, inorder);\n            inorder.add(T.key);\n            inorder(T.right, inorder);\n        }\n    }\n\n    public static void preorder(Node T, List<Integer> preorder) {\n        if (T != null) {\n            preorder.add(T.key);\n            preorder(T.left, preorder);\n            preorder(T.right, preorder);\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}