{
    "solution_id": "llama3.1-8b-1044",
    "problem_id": "p00798",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_W 8\n#define MAX_H 8\n#define MAX_N 100\n\ntypedef struct {\n    int w, h;\n    int map[MAX_H][MAX_W];\n    int dx[4] = {0, 0, -1, 1};\n    int dy[4] = {-1, 1, 0, 0};\n} Warehouse;\n\ntypedef struct {\n    int x, y;\n    int dist;\n} Node;\n\nint bfs(Warehouse *wh, int sx, int sy, int tx, int ty) {\n    int i, j, k, x, y, d;\n    Node queue[MAX_N];\n    int head = 0, tail = 0;\n    int visited[MAX_H][MAX_W] = {{0}};\n\n    queue[tail].x = sx;\n    queue[tail].y = sy;\n    queue[tail].dist = 0;\n    tail++;\n\n    while (head < tail) {\n        x = queue[head].x;\n        y = queue[head].y;\n        d = queue[head].dist;\n        head++;\n\n        if (x == tx && y == ty) {\n            return d;\n        }\n\n        for (i = 0; i < 4; i++) {\n            int nx = x + wh->dx[i];\n            int ny = y + wh->dy[i];\n\n            if (nx >= 0 && nx < wh->w && ny >= 0 && ny < wh->h && wh->map[ny][nx] != 1 && !visited[ny][nx]) {\n                queue[tail].x = nx;\n                queue[tail].y = ny;\n                queue[tail].dist = d + 1;\n                tail++;\n                visited[ny][nx] = 1;\n            }\n        }\n    }\n\n    return -1;\n}\n\nint main() {\n    int i, j, k, w, h, sx, sy, tx, ty;\n    char buf[100];\n    Warehouse wh;\n\n    while (scanf(\"%d %d\", &w, &h) == 2) {\n        if (w == 0 && h == 0) {\n            break;\n        }\n\n        memset(&wh, 0, sizeof(wh));\n        wh.w = w;\n        wh.h = h;\n\n        for (i = 0; i < h; i++) {\n            for (j = 0; j < w; j++) {\n                scanf(\"%d\", &wh.map[i][j]);\n            }\n        }\n\n        for (i = 0; i < h; i++) {\n            for (j = 0; j < w; j++) {\n                if (wh.map[i][j] == 2) {\n                    sx = j;\n                    sy = i;\n                } else if (wh.map[i][j] == 4) {\n                    tx = j;\n                    ty = i;\n                }\n            }\n        }\n\n        int dist = bfs(&wh, sx, sy, tx, ty);\n\n        printf(\"%d\\n\", dist);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}