{
    "solution_id": "llama3.1-8b-2919",
    "problem_id": "p03725",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    static class Pair {\n        int x, y;\n\n        public Pair(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    static int[][] dirs = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n    static int[][] dist = new int[801][801];\n    static int[][] vis = new int[801][801];\n    static int[][] grid = new int[801][801];\n    static int h, w, k;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        h = Integer.parseInt(st.nextToken());\n        w = Integer.parseInt(st.nextToken());\n        k = Integer.parseInt(st.nextToken());\n        for (int i = 1; i <= h; i++) {\n            st = new StringTokenizer(br.readLine());\n            for (int j = 1; j <= w; j++) {\n                grid[i][j] = st.nextToken().charAt(0) == '#' ? 1 : 0;\n            }\n        }\n        Queue<Pair> q = new LinkedList<>();\n        q.add(new Pair(h, w));\n        while (!q.isEmpty()) {\n            Pair p = q.poll();\n            for (int[] dir : dirs) {\n                int x = p.x + dir[0], y = p.y + dir[1];\n                if (x >= 1 && x <= h && y >= 1 && y <= w && grid[x][y] == 0 && vis[x][y] == 0) {\n                    vis[x][y] = 1;\n                    dist[x][y] = dist[p.x][p.y] + 1;\n                    q.add(new Pair(x, y));\n                }\n            }\n        }\n        int ans = Integer.MAX_VALUE;\n        for (int i = 1; i <= h; i++) {\n            for (int j = 1; j <= w; j++) {\n                if (grid[i][j] == 0) {\n                    int cnt = 0;\n                    for (int[] dir : dirs) {\n                        int x = i + dir[0], y = j + dir[1];\n                        if (x >= 1 && x <= h && y >= 1 && y <= w && grid[x][y] == 1) {\n                            cnt++;\n                        }\n                    }\n                    int res = 0;\n                    for (int[] dir : dirs) {\n                        int x = i + dir[0], y = j + dir[1];\n                        if (x >= 1 && x <= h && y >= 1 && y <= w && grid[x][y] == 0) {\n                            res = Math.max(res, dist[x][y]);\n                        }\n                    }\n                    res = Math.max(res, cnt);\n                    ans = Math.min(ans, res);\n                }\n            }\n        }\n        System.out.println(ans == Integer.MAX_VALUE ? -1 : ans);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}