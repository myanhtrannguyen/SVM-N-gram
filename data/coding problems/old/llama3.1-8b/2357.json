{
    "solution_id": "llama3.1-8b-2357",
    "problem_id": "p03585",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\ntypedef struct {\n    long long a, b, c;\n} Line;\n\nint cmpx(const void *a, const void *b) {\n    Line *x = (Line *)a, *y = (Line *)b;\n    return x->a - y->a;\n}\n\nint cmpy(const void *a, const void *b) {\n    Line *x = (Line *)a, *y = (Line *)b;\n    return x->b - y->b;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    Line lines[n + 2];\n    for (int i = 0; i < n; i++) {\n        scanf(\"%lld %lld %lld\", &lines[i].a, &lines[i].b, &lines[i].c);\n    }\n    lines[n].a = 1;\n    lines[n].b = 0;\n    lines[n].c = 0;\n    lines[n + 1].a = 0;\n    lines[n + 1].b = 1;\n    lines[n + 1].c = 0;\n    qsort(lines, n + 2, sizeof(Line), cmpx);\n    long long x = 0, y = 0;\n    for (int i = 0; i < n + 2; i++) {\n        if (i > 0) {\n            long long x1 = (long long)lines[i - 1].c / lines[i - 1].a;\n            long long y1 = (long long)lines[i - 1].c / lines[i - 1].b;\n            long long x2 = (long long)lines[i].c / lines[i].a;\n            long long y2 = (long long)lines[i].c / lines[i].b;\n            x = x1 + x2;\n            y = y1 + y2;\n            x = (x + lines[i].a) / (2 * lines[i].a);\n            y = (y + lines[i].b) / (2 * lines[i].b);\n        }\n    }\n    qsort(lines, n + 2, sizeof(Line), cmpy);\n    for (int i = 0; i < n + 2; i++) {\n        if (i > 0) {\n            long long x1 = (long long)lines[i - 1].c / lines[i - 1].a;\n            long long y1 = (long long)lines[i - 1].c / lines[i - 1].b;\n            long long x2 = (long long)lines[i].c / lines[i].a;\n            long long y2 = (long long)lines[i].c / lines[i].b;\n            if (x1 < x && y1 < y) {\n                x = x1;\n                y = y1;\n            }\n        }\n    }\n    printf(\"%.9lf %.9lf\\n\", x, y);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}