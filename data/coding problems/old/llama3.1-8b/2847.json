{
    "solution_id": "llama3.1-8b-2847",
    "problem_id": "p03707",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static int N, M, Q;\n    static int[][] S;\n    static int[][] dsu;\n    static int[] sz;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        N = Integer.parseInt(st.nextToken());\n        M = Integer.parseInt(st.nextToken());\n        Q = Integer.parseInt(st.nextToken());\n        S = new int[N + 1][M + 1];\n        dsu = new int[N + M + 2][N + M + 2];\n        sz = new int[N + M + 2];\n        for (int i = 1; i <= N; i++) {\n            st = new StringTokenizer(br.readLine());\n            for (int j = 1; j <= M; j++) {\n                S[i][j] = Integer.parseInt(st.nextToken());\n            }\n        }\n        for (int i = 1; i <= N + M; i++) {\n            dsu[i][i] = i;\n            sz[i] = 1;\n        }\n        for (int i = 1; i <= N; i++) {\n            for (int j = 1; j <= M; j++) {\n                if (S[i][j] == 1) {\n                    union(i, j);\n                }\n            }\n        }\n        for (int i = 1; i <= Q; i++) {\n            st = new StringTokenizer(br.readLine());\n            int x1 = Integer.parseInt(st.nextToken());\n            int y1 = Integer.parseInt(st.nextToken());\n            int x2 = Integer.parseInt(st.nextToken());\n            int y2 = Integer.parseInt(st.nextToken());\n            int ans = 0;\n            for (int j = x1; j <= x2; j++) {\n                for (int k = y1; k <= y2; k++) {\n                    if (S[j][k] == 1) {\n                        ans += sz[find(j + k)];\n                    }\n                }\n            }\n            System.out.println(ans);\n        }\n    }\n\n    static int find(int x) {\n        if (dsu[x][x] == x) {\n            return x;\n        }\n        return dsu[x][x] = find(dsu[x][x]);\n    }\n\n    static void union(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            if (sz[x] < sz[y]) {\n                int temp = x;\n                x = y;\n                y = temp;\n            }\n            dsu[y][y] = x;\n            sz[x] += sz[y];\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}