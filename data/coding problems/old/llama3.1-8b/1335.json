{
    "solution_id": "llama3.1-8b-1335",
    "problem_id": "p00870",
    "language": "Python",
    "solution": "```python\nimport sys\nimport re\n\ndef kmp_search(text, pattern):\n    n = len(text)\n    m = len(pattern)\n    lps = [0] * m\n    j = 0\n    compute_lps_array(pattern, lps)\n    i = 0\n    while i < n:\n        if pattern[j] == text[i]:\n            i += 1\n            j += 1\n        if j == m:\n            j = lps[j - 1]\n        elif i < n and pattern[j] != text[i]:\n            if j != 0:\n                j = lps[j - 1]\n            else:\n                i += 1\n    return i - m\n\ndef compute_lps_array(pattern, lps):\n    length = 0\n    i = 1\n    while i < len(pattern):\n        if pattern[i] == pattern[length]:\n            length += 1\n            lps[i] = length\n            i += 1\n        else:\n            if length != 0:\n                length = lps[length - 1]\n            else:\n                lps[i] = 0\n                i += 1\n\ndef main():\n    input_lines = sys.stdin.readlines()\n    input_lines = [line.strip() for line in input_lines]\n    i = 0\n    while i < len(input_lines):\n        n, m = map(int, input_lines[i].split())\n        i += 1\n        patterns = []\n        for _ in range(n):\n            patterns.append(input_lines[i])\n            i += 1\n        text = ''\n        for _ in range(m):\n            text += input_lines[i]\n            i += 1\n        if n == 1:\n            print(kmp_search(text, patterns[0]))\n        else:\n            result = 0\n            for p in patterns:\n                result += kmp_search(text, p)\n            print(result)\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}