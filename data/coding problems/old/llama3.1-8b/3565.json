{
    "solution_id": "llama3.1-8b-3565",
    "problem_id": "p02072",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\ndouble dist(pair<int, int> a, pair<int, int> b) {\n    return sqrt(pow(a.first - b.first, 2) + pow(a.second - b.second, 2));\n}\n\ndouble solve(vector<pair<int, int>> points, int k) {\n    double ans = 0;\n    for (int i = 0; i < k; i++) {\n        ans += dist(points[i], points[k - 1]);\n    }\n    return ans;\n}\n\ndouble f(pair<int, int> p, vector<pair<int, int>> points, int k) {\n    double ans = 0;\n    for (int i = 0; i < k; i++) {\n        ans += dist(p, points[i]);\n    }\n    return ans;\n}\n\ndouble solve2(vector<pair<int, int>> points, int k) {\n    double ans = 1e9;\n    for (int i = 0; i < 100000; i++) {\n        double x = (double)rand() / RAND_MAX * 2000 - 1000;\n        double y = (double)rand() / RAND_MAX * 2000 - 1000;\n        pair<int, int> p = { (int)x, (int)y };\n        double cur = f(p, points, k);\n        double max = 0;\n        for (int j = 0; j < k; j++) {\n            max = max > dist(p, points[j]) ? max : dist(p, points[j]);\n        }\n        ans = ans < cur + max ? ans : cur + max;\n    }\n    return ans;\n}\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<pair<int, int>> points(n);\n    for (int i = 0; i < n; i++) {\n        cin >> points[i].first >> points[i].second;\n    }\n    sort(points.begin(), points.end(), [](pair<int, int> a, pair<int, int> b) {\n        return dist({0, 0}, a) < dist({0, 0}, b);\n    });\n    double ans = solve(points, k);\n    for (int i = 0; i < n - k; i++) {\n        ans = ans < solve(points, k) ? ans : solve(points, k);\n        points.erase(points.begin() + k - 1);\n    }\n    cout << fixed << setprecision(5) << ans << endl;\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}