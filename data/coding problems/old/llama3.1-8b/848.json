{
    "solution_id": "llama3.1-8b-848",
    "problem_id": "p00749",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_W 11\n#define MAX_H 61\n\ntypedef struct {\n    int x, y;\n    int id;\n} Block;\n\ntypedef struct {\n    Block blocks[MAX_W * MAX_H];\n    int num_blocks;\n} Piece;\n\ntypedef struct {\n    Piece pieces[MAX_W * MAX_H];\n    int num_pieces;\n} Design;\n\nvoid read_design(Design *design) {\n    int w, h;\n    scanf(\"%d %d\", &w, &h);\n    design->num_pieces = 0;\n    design->num_blocks = 0;\n    for (int y = 0; y < h; y++) {\n        for (int x = 0; x < w; x++) {\n            char c;\n            scanf(\" %c\", &c);\n            if (c >= '1' && c <= '9') {\n                design->pieces[design->num_pieces].blocks[design->num_blocks].x = x;\n                design->pieces[design->num_pieces].blocks[design->num_blocks].y = y;\n                design->pieces[design->num_pieces].blocks[design->num_blocks].id = c - '0';\n                design->num_blocks++;\n            }\n        }\n    }\n    for (int y = 0; y < h; y++) {\n        for (int x = 0; x < w; x++) {\n            char c;\n            scanf(\" %c\", &c);\n            if (c >= '1' && c <= '9') {\n                int piece_id = -1;\n                for (int i = 0; i < design->num_pieces; i++) {\n                    if (design->pieces[i].blocks[0].x == x && design->pieces[i].blocks[0].y == y) {\n                        piece_id = i;\n                        break;\n                    }\n                }\n                if (piece_id != -1) {\n                    design->pieces[piece_id].num_blocks++;\n                    design->num_pieces++;\n                }\n            }\n        }\n    }\n}\n\nint is_stable(Design *design) {\n    for (int i = 0; i < design->num_pieces; i++) {\n        int xL = design->pieces[i].blocks[0].x;\n        int xR = design->pieces[i].blocks[design->pieces[i].num_blocks - 1].x;\n        double M = 0.0;\n        for (int j = 0; j < design->pieces[i].num_blocks; j++) {\n            M += (double)(design->pieces[i].blocks[j].x + 0.5) / design->pieces[i].num_blocks;\n        }\n        if (M < xL || M > xR) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main() {\n    Design design;\n    while (1) {\n        read_design(&design);\n        if (design.num_pieces == 0 && design.num_blocks == 0) {\n            break;\n        }\n        if (is_stable(&design)) {\n            printf(\"STABLE\\n\");\n        } else {\n            printf(\"UNSTABLE\\n\");\n        }\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}