{
    "solution_id": "llama3.1-8b-721",
    "problem_id": "p00717",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Point {\n    int x, y;\n};\n\ndouble distance(const Point& p1, const Point& p2) {\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2));\n}\n\nbool isMatch(const vector<Point>& p1, const vector<Point>& p2) {\n    if (p1.size() != p2.size()) return false;\n    for (int i = 0; i < p1.size(); i++) {\n        if (i == 0) continue;\n        Point prev = p1[i - 1];\n        Point curr = p1[i];\n        Point prev2 = p2[i - 1];\n        Point curr2 = p2[i];\n        if (prev.x == curr.x && prev2.x == curr2.x) {\n            if (prev.y == curr.y && prev2.y == curr2.y) return false;\n            if (prev.y != curr.y && prev2.y != curr2.y) return false;\n        }\n        if (prev.y == curr.y && prev2.y == curr2.y) {\n            if (prev.x != curr.x && prev2.x != curr2.x) return false;\n            if (prev.x == curr.x && prev2.x != curr2.x) return false;\n        }\n        if (distance(prev, curr) != distance(prev2, curr2)) return false;\n    }\n    return true;\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        vector<vector<Point>> lines(n);\n        for (int i = 0; i < n; i++) {\n            int m;\n            cin >> m;\n            lines[i].resize(m);\n            for (int j = 0; j < m; j++) {\n                cin >> lines[i][j].x >> lines[i][j].y;\n            }\n        }\n        vector<int> matches;\n        for (int i = 1; i < n; i++) {\n            if (isMatch(lines[0], lines[i])) matches.push_back(i + 1);\n        }\n        sort(matches.begin(), matches.end());\n        for (int match : matches) cout << match << endl;\n        cout << \"+++++\" << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}