{
    "solution_id": "llama3.1-8b-704",
    "problem_id": "p00713",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MAX_POINTS 300\n\ntypedef struct {\n    double x, y;\n} Point;\n\nint compare_points(const void *a, const void *b) {\n    Point *p1 = (Point *)a;\n    Point *p2 = (Point *)b;\n    return (int)((p1->x - p2->x) * 100000 + (p1->y - p2->y) * 100000);\n}\n\nint max_points_in_circle(Point points[], int n) {\n    if (n <= 1) return n;\n\n    qsort(points, n, sizeof(Point), compare_points);\n\n    int max_points = 0;\n    int left = 0;\n    int right = 1;\n\n    while (right < n) {\n        while (right < n && (points[right].x - points[left].x) * (points[right].x - points[left].x) +\n                (points[right].y - points[left].y) * (points[right].y - points[left].y) <= 1) {\n            right++;\n        }\n\n        max_points = (right - left > max_points) ? right - left : max_points;\n\n        while (left < right && (points[right].x - points[left].x) * (points[right].x - points[left].x) +\n                (points[right].y - points[left].y) * (points[right].y - points[left].y) > 1) {\n            left++;\n        }\n    }\n\n    return max_points;\n}\n\nint main() {\n    int n;\n    while (scanf(\"%d\", &n) == 1) {\n        Point points[n];\n        for (int i = 0; i < n; i++) {\n            scanf(\"%lf %lf\", &points[i].x, &points[i].y);\n        }\n\n        printf(\"%d\\n\", max_points_in_circle(points, n));\n\n        while (scanf(\"%d\", &n) == 1 && n != 0);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}