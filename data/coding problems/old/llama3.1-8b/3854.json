{
    "solution_id": "llama3.1-8b-3854",
    "problem_id": "p02284",
    "language": "Java",
    "solution": "```java\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\nclass Node {\n    int key;\n    Node left;\n    Node right;\n\n    public Node(int key) {\n        this.key = key;\n        this.left = null;\n        this.right = null;\n    }\n}\n\npublic class Main {\n    static Node root;\n\n    public static void insert(int key) {\n        root = insertNode(root, key);\n    }\n\n    private static Node insertNode(Node node, int key) {\n        if (node == null) {\n            return new Node(key);\n        }\n\n        if (key < node.key) {\n            node.left = insertNode(node.left, key);\n        } else if (key > node.key) {\n            node.right = insertNode(node.right, key);\n        }\n\n        return node;\n    }\n\n    public static boolean find(int key) {\n        return findNode(root, key) != null;\n    }\n\n    private static Node findNode(Node node, int key) {\n        if (node == null) {\n            return null;\n        }\n\n        if (key < node.key) {\n            return findNode(node.left, key);\n        } else if (key > node.key) {\n            return findNode(node.right, key);\n        } else {\n            return node;\n        }\n    }\n\n    public static void printInorder() {\n        ArrayList<Integer> keys = new ArrayList<>();\n        inorder(root, keys);\n        System.out.print(keys.get(0));\n        for (int i = 1; i < keys.size(); i++) {\n            System.out.print(\" \" + keys.get(i));\n        }\n        System.out.println();\n    }\n\n    private static void inorder(Node node, ArrayList<Integer> keys) {\n        if (node != null) {\n            inorder(node.left, keys);\n            keys.add(node.key);\n            inorder(node.right, keys);\n        }\n    }\n\n    public static void printPreorder() {\n        ArrayList<Integer> keys = new ArrayList<>();\n        preorder(root, keys);\n        System.out.print(keys.get(0));\n        for (int i = 1; i < keys.size(); i++) {\n            System.out.print(\" \" + keys.get(i));\n        }\n        System.out.println();\n    }\n\n    private static void preorder(Node node, ArrayList<Integer> keys) {\n        if (node != null) {\n            keys.add(node.key);\n            preorder(node.left, keys);\n            preorder(node.right, keys);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int m = scanner.nextInt();\n        while (m-- > 0) {\n            String op = scanner.next();\n            if (op.equals(\"insert\")) {\n                int key = scanner.nextInt();\n                insert(key);\n            } else if (op.equals(\"find\")) {\n                int key = scanner.nextInt();\n                System.out.println(find(key) ? \"yes\" : \"no\");\n            } else if (op.equals(\"print\")) {\n                printInorder();\n                printPreorder();\n            }\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}