{
    "solution_id": "llama3.1-8b-1295",
    "problem_id": "p00860",
    "language": "Python",
    "solution": "```python\nfrom collections import deque\n\ndef bfs(s, t, parent):\n    visited = [False] * (n + 1)\n    queue = deque()\n    queue.append(s)\n    visited[s] = True\n    while queue:\n        u = queue.popleft()\n        for ind, val in enumerate(graph[u]):\n            if not visited[ind] and val > 0:\n                queue.append(ind)\n                visited[ind] = True\n                parent[ind] = u\n    return visited[t]\n\ndef ford_fulkerson(source, sink):\n    parent = [-1] * (n + 1)\n    max_flow = 0\n    while bfs(source, sink, parent):\n        path_flow = float(\"Inf\")\n        s = sink\n        while s != source:\n            path_flow = min(path_flow, graph[parent[s]][s])\n            s = parent[s]\n        max_flow += path_flow\n        v = sink\n        while v != source:\n            u = parent[v]\n            graph[u][v] -= path_flow\n            graph[v][u] += path_flow\n            v = parent[v]\n    return max_flow\n\ndef solve():\n    global n, graph\n    w, h, n = map(int, input().split())\n    graph = [[0] * (w + 2) for _ in range(h + 2)]\n    for i in range(1, h + 1):\n        s = input()\n        for j in range(1, w + 1):\n            if s[j - 1] == '#':\n                graph[i][j] = -1\n            elif s[j - 1].islower():\n                graph[i][j] = 1\n            elif s[j - 1].isupper():\n                graph[i][j] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][j + 1] = 0\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            if graph[i][j] == 1:\n                graph[i][j] = 0\n                graph[i - 1][j] = 0\n                graph[i + 1][j] = 0\n                graph[i][j - 1] = 0\n                graph[i][",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}