{
    "solution_id": "llama3.1-8b-3824",
    "problem_id": "p02277",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_N 100000\n\ntypedef struct {\n    char suit;\n    int number;\n} Card;\n\nvoid swap(Card *a, Card *b) {\n    Card temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint partition(Card *A, int p, int r) {\n    Card x = A[r];\n    int i = p - 1;\n    for (int j = p; j < r; j++) {\n        if (A[j].number <= x.number) {\n            i++;\n            swap(&A[i], &A[j]);\n        }\n    }\n    swap(&A[i + 1], &A[r]);\n    return i + 1;\n}\n\nvoid quicksort(Card *A, int p, int r) {\n    if (p < r) {\n        int q = partition(A, p, r);\n        quicksort(A, p, q - 1);\n        quicksort(A, q + 1, r);\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    Card *A = (Card *)malloc(n * sizeof(Card));\n    for (int i = 0; i < n; i++) {\n        char suit;\n        int number;\n        scanf(\" %c %d\", &suit, &number);\n        A[i].suit = suit;\n        A[i].number = number;\n    }\n    quicksort(A, 0, n - 1);\n    int stable = 1;\n    for (int i = 0; i < n - 1; i++) {\n        if (A[i].number == A[i + 1].number && A[i].suit != A[i + 1].suit) {\n            stable = 0;\n            break;\n        }\n    }\n    printf(\"%s\\n\", stable ? \"Stable\" : \"Not stable\");\n    for (int i = 0; i < n; i++) {\n        printf(\"%c %d\\n\", A[i].suit, A[i].number);\n    }\n    free(A);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}