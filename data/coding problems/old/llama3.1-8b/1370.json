{
    "solution_id": "llama3.1-8b-1370",
    "problem_id": "p00879",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    static class Equation {\n        String left;\n        String right;\n\n        public Equation(String left, String right) {\n            this.left = left;\n            this.right = right;\n        }\n    }\n\n    static class Molecule {\n        String name;\n        int count;\n\n        public Molecule(String name, int count) {\n            this.name = name;\n            this.count = count;\n        }\n    }\n\n    static class Element {\n        String name;\n        int count;\n\n        public Element(String name, int count) {\n            this.name = name;\n            this.count = count;\n        }\n    }\n\n    static class GCD {\n        int gcd(int a, int b) {\n            if (b == 0) return a;\n            return gcd(b, a % b);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line;\n        List<Equation> equations = new ArrayList<>();\n        while ((line = br.readLine()) != null && !line.equals(\".\")) {\n            equations.add(new Equation(line.substring(0, line.indexOf(\"->\")), line.substring(line.indexOf(\"->\") + 2)));\n        }\n\n        for (Equation equation : equations) {\n            String[] left = equation.left.split(\"\\\\+\");\n            String[] right = equation.right.split(\"\\\\+\");\n\n            Map<String, Integer> leftElements = new HashMap<>();\n            Map<String, Integer> rightElements = new HashMap<>();\n\n            for (String molecule : left) {\n                String name = molecule.replaceAll(\"\\\\d\", \"\");\n                int count = Integer.parseInt(molecule.replaceAll(\"[^\\\\d]\", \"\"));\n                leftElements.put(name, leftElements.getOrDefault(name, 0) + count);\n            }\n\n            for (String molecule : right) {\n                String name = molecule.replaceAll(\"\\\\d\", \"\");\n                int count = Integer.parseInt(molecule.replaceAll(\"[^\\\\d]\", \"\"));\n                rightElements.put(name, rightElements.getOrDefault(name, 0) + count);\n            }\n\n            List<Molecule> leftMolecules = new ArrayList<>();\n            List<Molecule> rightMolecules = new ArrayList<>();\n\n            for (Map.Entry<String, Integer> entry : leftElements.entrySet()) {\n                leftMolecules.add(new Molecule(entry.getKey(), entry.getValue()));\n            }\n\n            for (Map.Entry<String, Integer> entry : rightElements.entrySet()) {\n                rightMolecules.add(new Molecule(entry.getKey(), entry.getValue()));\n            }\n\n            List<Integer> coefficients = new ArrayList<>();\n\n            for (Molecule leftMolecule : leftMolecules) {\n                for (Molecule rightMolecule : rightMolecules) {\n                    if (leftMolecule.name.equals(rightMolecule.name)) {\n                        int gcd = new GCD().gcd(leftMolecule.count, rightMolecule.count);\n                        coefficients.add(leftMolecule.count / gcd);\n                        coefficients.add(rightMolecule.count / gcd);\n                    }\n                }\n            }\n\n            Collections.sort(coefficients);\n            StringBuilder sb = new StringBuilder();\n            for (int coefficient : coefficients) {\n                sb.append(coefficient).append(\" \");\n            }\n            System.out.println(sb.toString().trim());\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}