{
    "solution_id": "llama3.1-8b-723",
    "problem_id": "p00717",
    "language": "Python",
    "solution": "```python\nimport math\nimport sys\n\ndef rotate(p, angle):\n    x, y = p\n    new_x = x * math.cos(angle) - y * math.sin(angle)\n    new_y = x * math.sin(angle) + y * math.cos(angle)\n    return (new_x, new_y)\n\ndef translate(p, dx, dy):\n    x, y = p\n    return (x + dx, y + dy)\n\ndef get_template(template):\n    points = []\n    for line in template.split('\\n')[2:]:\n        x, y = map(int, line.split())\n        points.append((x, y))\n    return points\n\ndef get_polygon(polygon):\n    points = []\n    for line in polygon.split('\\n')[2:]:\n        x, y = map(int, line.split())\n        points.append((x, y))\n    return points\n\ndef get_distance(p1, p2):\n    return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)\n\ndef get_angle(p1, p2):\n    return math.atan2(p2[1] - p1[1], p2[0] - p1[0])\n\ndef is_match(template, polygon):\n    template_points = get_template(template)\n    polygon_points = get_polygon(polygon)\n    if len(template_points) != len(polygon_points):\n        return False\n    for i in range(len(template_points)):\n        t = template_points[i]\n        p = polygon_points[i]\n        if get_distance(t, p) > 1e-6:\n            return False\n    return True\n\ndef get_angle_diff(a1, a2):\n    return abs(a1 - a2)\n\ndef get_match(template, polygons):\n    matches = []\n    for i, polygon in enumerate(polygons):\n        if is_match(template, polygon):\n            matches.append(i + 1)\n    return matches\n\ndef main():\n    while True:\n        template = sys.stdin.readline().strip()\n        if not template:\n            break\n        polygons = []\n        while True:\n            polygon = sys.stdin.readline().strip()\n            if not polygon:\n                break\n            polygons.append(polygon)\n        matches = get_match(template, polygons)\n        print(' '.join(map(str, matches)))\n        print('+++++')\n\nif __name__ == '__main__':\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}