{
    "solution_id": "llama3.1-8b-1129",
    "problem_id": "p00819",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nstd::string rotateLeft(const std::string& s) {\n    std::string result = s.substr(1) + s[0];\n    return result;\n}\n\nstd::string rotateRight(const std::string& s) {\n    std::string result = s.substr(s.size() - 1) + s.substr(0, s.size() - 1);\n    return result;\n}\n\nstd::string swap(const std::string& s) {\n    int mid = s.size() / 2;\n    std::string left = s.substr(0, mid);\n    std::string right = s.substr(mid);\n    std::string result = right + left;\n    if (s.size() % 2 != 0) {\n        result = result.substr(0, mid) + s[mid] + result.substr(mid + 1);\n    }\n    return result;\n}\n\nstd::string reverse(const std::string& s) {\n    std::string result = s;\n    std::reverse(result.begin(), result.end());\n    return result;\n}\n\nstd::string incrementDigits(const std::string& s) {\n    std::string result = s;\n    for (int i = 0; i < s.size(); ++i) {\n        if (std::isdigit(result[i])) {\n            result[i] = std::to_string((result[i] - '0' + 1) % 10 + '0');\n        }\n    }\n    return result;\n}\n\nstd::string decrementDigits(const std::string& s) {\n    std::string result = s;\n    for (int i = 0; i < s.size(); ++i) {\n        if (std::isdigit(result[i])) {\n            result[i] = std::to_string((result[i] - '0' - 1 + 10) % 10 + '0');\n        }\n    }\n    return result;\n}\n\nstd::string inferMessage(const std::string& order, const std::string& message) {\n    std::vector<std::string> operations = {\"A\", \"J\", \"M\", \"P\", \"E\", \"C\"};\n    std::vector<std::function<std::string(const std::string&)>> functions = {\n        reverse,\n        rotateLeft,\n        decrementDigits,\n        incrementDigits,\n        rotateRight,\n        swap\n    };\n\n    for (char c : order) {\n        message = functions[std::distance(operations.begin(), std::find(operations.begin(), operations.end(), c))](message);\n    }\n\n    return message;\n}\n\nint main() {\n    int n;\n    std::cin >> n;\n    std::cin.ignore();\n\n    for (int i = 0; i < n; ++i) {\n        std::string order;\n        std::string message;\n        std::getline(std::cin, order);\n        std::getline(std::cin, message);\n        std::cout << inferMessage(order, message) << std::endl;\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}