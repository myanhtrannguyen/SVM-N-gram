{
    "solution_id": "llama3.1-8b-724",
    "problem_id": "p00718",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAXLEN 20\n#define MAXN 500\n\ntypedef struct {\n    int val;\n    char str[MAXLEN];\n} MCXI;\n\nMCXI* createMCXI(char* str) {\n    MCXI* mcxi = (MCXI*)malloc(sizeof(MCXI));\n    mcxi->val = 0;\n    mcxi->str[0] = '\\0';\n    int i = 0;\n    while (str[i] != '\\0') {\n        if (str[i] >= '2' && str[i] <= '9') {\n            mcxi->val = mcxi->val * 10 + (str[i] - '0');\n            mcxi->str[0] = str[i];\n            mcxi->str[1] = '\\0';\n        } else if (str[i] == 'm') {\n            mcxi->val += 5000;\n            strcat(mcxi->str, \"m\");\n        } else if (str[i] == 'c') {\n            mcxi->val += 200;\n            strcat(mcxi->str, \"c\");\n        } else if (str[i] == 'x') {\n            mcxi->val += 30;\n            strcat(mcxi->str, \"x\");\n        } else if (str[i] == 'i') {\n            mcxi->val += 1;\n            strcat(mcxi->str, \"i\");\n        }\n        i++;\n    }\n    return mcxi;\n}\n\nvoid destroyMCXI(MCXI* mcxi) {\n    free(mcxi);\n}\n\nint getDigit(char c) {\n    return c - '0';\n}\n\nchar* getMCXIString(int val) {\n    static char str[MAXLEN];\n    int i = 0;\n    while (val > 0) {\n        int digit = val % 10;\n        if (digit == 5) {\n            str[i++] = 'm';\n            val /= 10;\n        } else if (digit == 2) {\n            str[i++] = 'c';\n            val /= 10;\n        } else if (digit == 3) {\n            str[i++] = 'x';\n            val /= 10;\n        } else if (digit == 1) {\n            str[i++] = 'i';\n            val /= 10;\n        } else {\n            str[i++] = '0' + digit;\n            val /= 10;\n        }\n    }\n    str[i] = '\\0';\n    return str;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        char str1[MAXLEN], str2[MAXLEN];\n        scanf(\"%s %s\", str1, str2);\n        MCXI* mcxi1 = createMCXI(str1);\n        MCXI* mcxi2 = createMCXI(str2);\n        int sum = mcxi1->val + mcxi2->val;\n        char* result = getMCXIString(sum);\n        printf(\"%s\\n\", result);\n        destroyMCXI(mcxi1);\n        destroyMCXI(mcxi2);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}