{
    "solution_id": "llama3.1-8b-599",
    "problem_id": "p00686",
    "language": "Python",
    "solution": "```python\nclass Robot:\n    def __init__(self, m, n):\n        self.m = m\n        self.n = n\n        self.x = 1\n        self.y = 1\n        self.dir = 0  # 0: north, 1: east, 2: south, 3: west\n\n    def move(self, k):\n        if self.dir == 0:  # north\n            if self.y + k <= self.n:\n                self.y += k\n            else:\n                self.y = self.n\n        elif self.dir == 1:  # east\n            if self.x + k <= self.m:\n                self.x += k\n            else:\n                self.x = self.m\n        elif self.dir == 2:  # south\n            if self.y - k >= 1:\n                self.y -= k\n            else:\n                self.y = 1\n        elif self.dir == 3:  # west\n            if self.x - k >= 1:\n                self.x -= k\n            else:\n                self.x = 1\n\n    def turn_right(self):\n        self.dir = (self.dir + 1) % 4\n\n    def turn_left(self):\n        self.dir = (self.dir - 1) % 4\n\n\ndef main():\n    while True:\n        m, n = map(int, input().split())\n        if m == 0 and n == 0:\n            break\n        robot = Robot(m, n)\n        while True:\n            command = input().split()\n            if command[0] == \"STOP\":\n                break\n            elif command[0] == \"FORWARD\":\n                robot.move(int(command[1]))\n            elif command[0] == \"BACKWARD\":\n                robot.move(-int(command[1]))\n            elif command[0] == \"RIGHT\":\n                robot.turn_right()\n            elif command[0] == \"LEFT\":\n                robot.turn_left()\n        print(robot.x, robot.y)\n\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}