{
    "solution_id": "llama3.1-8b-544",
    "problem_id": "p00650",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N 100\n#define MAX_M 10000\n\nint n, m;\nint adj[MAX_N][MAX_N];\nint cost[MAX_M];\nint visited[MAX_N];\nint group[MAX_N];\n\nvoid dfs(int u, int g) {\n    visited[u] = 1;\n    group[u] = g;\n    for (int v = 0; v < n; v++) {\n        if (adj[u][v] && !visited[v]) {\n            dfs(v, g);\n        }\n    }\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--) {\n        scanf(\"%d %d\", &n, &m);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                adj[i][j] = 0;\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            int u, v, c;\n            scanf(\"%d %d %d\", &u, &v, &c);\n            adj[u][v] = c;\n        }\n        int min_cost = 0;\n        for (int i = 0; i < n; i++) {\n            if (!visited[i]) {\n                for (int j = 0; j < n; j++) {\n                    visited[j] = 0;\n                }\n                dfs(i, 1);\n                int g = 1;\n                for (int j = 0; j < n; j++) {\n                    if (group[j] == 1) {\n                        for (int k = 0; k < n; k++) {\n                            if (adj[j][k] && group[k] != 1) {\n                                min_cost += adj[j][k];\n                                adj[j][k] = 0;\n                                adj[k][j] = 0;\n                            }\n                        }\n                        g++;\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\", min_cost);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}