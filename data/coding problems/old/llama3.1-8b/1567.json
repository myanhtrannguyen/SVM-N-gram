{
    "solution_id": "llama3.1-8b-1567",
    "problem_id": "p02931",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64];\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') {\n                    if (cnt != 0) {\n                        break;\n                    } else {\n                        continue;\n                    }\n                }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') {\n                c = read();\n            }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n\n    static class Pair implements Comparable<Pair> {\n        int row, col, val;\n\n        public Pair(int row, int col, int val) {\n            this.row = row;\n            this.col = col;\n            this.val = val;\n        }\n\n        @Override\n        public int compareTo(Pair o) {\n            return o.val - val;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        Reader sc = new Reader();\n        int n = sc.nextInt();\n        int h = sc.nextInt();\n        int w = sc.nextInt();\n        int[][] arr = new int[h + 1][w + 1];\n        int[] row = new int[h + 1];\n        int[] col = new int[w + 1];\n        for (int i = 0; i < n; i++) {\n            int r = sc.nextInt();\n            int c = sc.nextInt();\n            int val = sc.nextInt();\n            arr[r][c] = Math.max(arr[r][c], val);\n            row[r] = Math.max(row[r], val);\n            col[c] = Math.max(col[c], val);\n        }\n        long ans = 0;\n        for (int i = 1; i <= h; i++) {\n            ans += row[i];\n        }\n        for (int i = 1; i <= w; i++) {\n            ans += col[i];\n        }\n        for (int i = 1; i <= h; i++) {\n            for (int j = 1; j <= w; j++) {\n                ans = Math.max(ans, row[i] + col[j] - arr[i][j]);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}