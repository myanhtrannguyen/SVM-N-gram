{
    "solution_id": "llama3.1-8b-426",
    "problem_id": "p00599",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    static class Point {\n        double x, y;\n\n        public Point(double x, double y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    static class Edge {\n        Point p1, p2;\n\n        public Edge(Point p1, Point p2) {\n            this.p1 = p1;\n            this.p2 = p2;\n        }\n    }\n\n    static double dist(Point p1, Point p2) {\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n    }\n\n    static double angle(Point p1, Point p2, Point p3) {\n        double v1x = p2.x - p1.x;\n        double v1y = p2.y - p1.y;\n        double v2x = p3.x - p2.x;\n        double v2y = p3.y - p2.y;\n        return Math.toDegrees(Math.atan2(v2y, v2x) - Math.atan2(v1y, v1x));\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        while (t-- > 0) {\n            int n = Integer.parseInt(br.readLine());\n            List<Point> points = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                String[] line = br.readLine().split(\" \");\n                points.add(new Point(Double.parseDouble(line[0]), Double.parseDouble(line[1])));\n            }\n            List<Edge> edges = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                edges.add(new Edge(points.get(i), points.get((i + 1) % n)));\n            }\n            int thin = 0, thick = 0;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    if (edges.get(i).p1 == edges.get(j).p1 || edges.get(i).p1 == edges.get(j).p2 ||\n                            edges.get(i).p2 == edges.get(j).p1 || edges.get(i).p2 == edges.get(j).p2) {\n                        System.out.println(\"-1 -1\");\n                        gotoNextTest:\n                        continue;\n                    }\n                    double angle1 = angle(edges.get(i).p1, edges.get(i).p2, edges.get(j).p1);\n                    double angle2 = angle(edges.get(i).p1, edges.get(i).p2, edges.get(j).p2);\n                    if (Math.abs(angle1 - 36) < 1e-4 && Math.abs(angle2 - 72) < 1e-4) {\n                        thin++;\n                    } else if (Math.abs(angle1 - 72) < 1e-4 && Math.abs(angle2 - 36) < 1e-4) {\n                        thick++;\n                    }\n                }\n            }\n            System.out.println(thin + \" \" + thick);\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}