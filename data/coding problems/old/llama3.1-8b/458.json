{
    "solution_id": "llama3.1-8b-458",
    "problem_id": "p00607",
    "language": "Java",
    "solution": "```java\nimport java.util.Scanner;\nimport java.util.Stack;\n\npublic class EmacsLikeEditor {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        StringBuilder text = new StringBuilder();\n        String line;\n        while (true) {\n            line = scanner.nextLine();\n            if (line.equals(\"END_OF_TEXT\")) {\n                break;\n            }\n            text.append(line).append(\"\\n\");\n        }\n        Stack<String> buffer = new Stack<>();\n        int cursorLine = 0;\n        int cursorChar = 0;\n        String[] lines = text.toString().split(\"\\n\");\n        for (int i = 0; i < lines.length; i++) {\n            if (!lines[i].isEmpty()) {\n                cursorLine = i;\n                cursorChar = lines[i].length();\n            }\n        }\n        String command;\n        while (true) {\n            command = scanner.nextLine();\n            if (command.equals(\"-\")) {\n                break;\n            }\n            switch (command) {\n                case \"a\":\n                    cursorChar = 0;\n                    break;\n                case \"e\":\n                    cursorChar = lines[cursorLine].length();\n                    break;\n                case \"p\":\n                    if (cursorLine > 0) {\n                        cursorLine--;\n                        cursorChar = 0;\n                    } else {\n                        cursorLine--;\n                        cursorChar = 0;\n                    }\n                    break;\n                case \"n\":\n                    if (cursorLine < lines.length - 1) {\n                        cursorLine++;\n                        cursorChar = 0;\n                    } else {\n                        cursorLine++;\n                        cursorChar = 0;\n                    }\n                    break;\n                case \"f\":\n                    if (cursorChar < lines[cursorLine].length()) {\n                        cursorChar++;\n                    } else if (cursorLine < lines.length - 1) {\n                        cursorLine++;\n                        cursorChar = 0;\n                    }\n                    break;\n                case \"b\":\n                    if (cursorChar > 0) {\n                        cursorChar--;\n                    } else if (cursorLine > 0) {\n                        cursorLine--;\n                        cursorChar = lines[cursorLine].length();\n                    }\n                    break;\n                case \"d\":\n                    if (cursorChar < lines[cursorLine].length()) {\n                        lines[cursorLine] = lines[cursorLine].substring(0, cursorChar) + lines[cursorLine].substring(cursorChar + 1);\n                        if (cursorLine < lines.length - 1) {\n                            lines[cursorLine + 1] = lines[cursorLine + 1] + lines[cursorLine].substring(cursorChar);\n                        }\n                        lines[cursorLine] = lines[cursorLine].trim();\n                        if (lines[cursorLine].isEmpty()) {\n                            lines[cursorLine] = \"\\n\";\n                        }\n                        cursorChar = 0;\n                    } else if (cursorLine < lines.length - 1) {\n                        lines[cursorLine + 1] = lines[cursorLine + 1] + lines[cursorLine];\n                        lines[cursorLine] = \"\\n\";\n                        cursorLine++;\n                        cursorChar = 0;\n                    }\n                    break;\n                case \"k\":\n                    if (cursorChar < lines[cursorLine].length()) {\n                        lines[cursorLine] = lines[cursorLine].substring(0, cursorChar) + lines[cursorLine].substring(cursorChar + 1);\n                        if (cursorLine < lines.length - 1) {\n                            lines[cursorLine + 1] = lines[cursorLine + 1] + lines[cursorLine].substring(cursorChar);\n                        }\n                        lines[cursorLine] = lines[cursorLine].trim();\n                        if (lines[cursorLine].isEmpty()) {\n                            lines[cursorLine] = \"\\n\";\n                        }\n                        buffer.push(\"\\n\");\n                        cursorChar = 0;\n                    } else if (cursorLine < lines.length - 1) {\n                        lines[cursorLine + 1] = lines[cursorLine + 1] + lines[cursorLine];\n                        lines[cursorLine] = \"\\n\";\n                        buffer.push(lines[cursorLine]);\n                        lines[cursorLine] = \"\";\n                        cursorLine++;\n                        cursorChar = 0;\n                    }\n                    break;\n                case \"y\":\n                    if (buffer.isEmpty()) {\n                        break;\n                    }\n                    String str = buffer.pop();\n                    if (str.equals(\"\\n\")) {\n                        lines[cursorLine] = lines[cursorLine].substring(0, cursorChar) + str + lines[cursorLine].substring(cursorChar);\n                        cursorChar = 0;\n                    } else {\n                        lines[cursorLine] = lines[cursorLine].substring(0, cursorChar) + str + lines[cursorLine].substring(cursorChar);\n                        cursorChar = str.length() + cursorChar;\n                    }\n                    break;\n            }\n        }\n        for (String line1 : lines) {\n            System.out.print(line1);\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}