{
    "solution_id": "llama3.1-8b-3030",
    "problem_id": "p01671",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static int N = 100000;\n    static int M = 200000;\n    static int INF = 0x3f3f3f3f;\n\n    static class Edge implements Comparable<Edge> {\n        int u, v, w;\n\n        public Edge(int u, int v, int w) {\n            this.u = u;\n            this.v = v;\n            this.w = w;\n        }\n\n        public int compareTo(Edge o) {\n            return Integer.compare(w, o.w);\n        }\n    }\n\n    static int[] parent;\n    static int[] size;\n\n    static int find(int x) {\n        return x == parent[x] ? x : (parent[x] = find(parent[x]));\n    }\n\n    static void union(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            if (size[x] < size[y]) {\n                int temp = x;\n                x = y;\n                y = temp;\n            }\n            parent[y] = x;\n            size[x] += size[y];\n        }\n    }\n\n    static void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        Edge[] edges = new Edge[m];\n        for (int i = 0; i < m; i++) {\n            edges[i] = new Edge(nextInt() - 1, nextInt() - 1, nextInt());\n        }\n        Arrays.sort(edges);\n        parent = new int[n];\n        size = new int[n];\n        for (int i = 0; i < n; i++) {\n            parent[i] = i;\n            size[i] = 1;\n        }\n        int[] ans = new int[m];\n        int cost = 0;\n        for (int i = 0; i < m; i++) {\n            cost += edges[i].w;\n            union(edges[i].u, edges[i].v);\n            int cnt = 0;\n            for (int j = 0; j < n; j++) {\n                if (find(j) == j) {\n                    cnt++;\n                }\n            }\n            if (cnt < 2) {\n                ans[i] = -1;\n            } else {\n                ans[i] = cost - edges[i].w;\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            out.println(ans[i]);\n        }\n    }\n\n    static BufferedReader br;\n    static StringTokenizer st;\n    static PrintWriter out;\n\n    public static void main(String[] args) throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        solve();\n        out.close();\n    }\n\n    static String next() throws IOException {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}