{
    "solution_id": "llama3.1-8b-424",
    "problem_id": "p00599",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <math.h>\n\n#define MAXN 100\n\ntypedef struct {\n    double x, y;\n} Point;\n\nint n;\nPoint p[MAXN];\n\nint orientation(Point p, Point q, Point r) {\n    double val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n    if (val == 0) return 0;\n    return (val > 0) ? 1 : -1;\n}\n\nint on_segment(Point p, Point q, Point r) {\n    if (q.x <= max(p.x, r.x) && q.x >= min(p.x, r.x) &&\n        q.y <= max(p.y, r.y) && q.y >= min(p.y, r.y))\n        return 1;\n    return 0;\n}\n\nint distance(Point p, Point q) {\n    return (int)round(sqrt(pow(q.x - p.x, 2) + pow(q.y - p.y, 2)));\n}\n\nint do_intersect(Point p1, Point q1, Point p2, Point q2) {\n    int o1 = orientation(p1, q1, p2);\n    int o2 = orientation(p1, q1, q2);\n    int o3 = orientation(p2, q2, p1);\n    int o4 = orientation(p2, q2, q1);\n\n    if (o1 != o2 && o3 != o4)\n        return 1;\n\n    if (o1 == 0 && on_segment(p1, p2, q1))\n        return 1;\n\n    if (o2 == 0 && on_segment(p1, q2, q1))\n        return 1;\n\n    if (o3 == 0 && on_segment(p2, p1, q2))\n        return 1;\n\n    if (o4 == 0 && on_segment(p2, q1, q2))\n        return 1;\n\n    return 0;\n}\n\nint intersect(Point p1, Point q1, Point p2, Point q2) {\n    int x1 = p1.x, y1 = p1.y, x2 = q1.x, y2 = q1.y;\n    int x3 = p2.x, y3 = p2.y, x4 = q2.x, y4 = q2.y;\n\n    int denom = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (denom == 0) return -1;\n\n    int t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / denom;\n    int u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / denom;\n\n    if (t > 0 && t < 1 && u > 0 && u < 1) return 1;\n\n    return 0;\n}\n\nint is_valid(Point p[], int n) {\n    for (int i = 0; i < n; i++) {\n        if (intersect(p[i], p[(i + 1) % n], p[(i + n - 1) % n], p[(i + n) % n])) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t--) {\n        scanf(\"%d\", &n);\n        for (int i = 0; i < n; i++) {\n            scanf(\"%lf %lf\", &p[i].x, &p[i].y);\n        }\n\n        if (!is_valid(p, n)) {\n            printf(\"-1 -1\\n\");\n            continue;\n        }\n\n        int thin = 0, thick = 0;\n        for (int i = 0; i < n; i++) {\n            int len = distance(p[i], p[(i + 1) % n]);\n            if (len % 2 == 0) {\n                thin += len / 2;\n            } else {\n                thick += (len - 1) / 2;\n            }\n        }\n\n        printf(\"%d %d\\n\", thin, thick);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}