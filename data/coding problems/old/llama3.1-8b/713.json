{
    "solution_id": "llama3.1-8b-713",
    "problem_id": "p00715",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\n\nstruct Street {\n    string name;\n    bool is_ns;\n    vector<string> cross;\n};\n\nbool is_stronger(const Street& a, const Street& b) {\n    if (a.cross.size() < b.cross.size()) return true;\n    if (a.cross.size() > b.cross.size()) return false;\n    for (const auto& c : a.cross) {\n        if (find(b.cross.begin(), b.cross.end(), c) == b.cross.end()) return true;\n    }\n    return false;\n}\n\nbool is_equal(const Street& a, const Street& b) {\n    if (a.cross.size() != b.cross.size()) return false;\n    for (const auto& c : a.cross) {\n        if (find(b.cross.begin(), b.cross.end(), c) == b.cross.end()) return false;\n    }\n    return true;\n}\n\nbool is_valid(const unordered_map<string, Street>& streets, const string& x, const string& y) {\n    if (streets.find(x) == streets.end() || streets.find(y) == streets.end()) return false;\n    if (streets[x].is_ns == streets[y].is_ns) return false;\n    if (streets[x].is_ns) {\n        if (streets[x].name > streets[y].name) return true;\n        return false;\n    } else {\n        if (streets[x].name < streets[y].name) return true;\n        return false;\n    }\n}\n\nint main() {\n    int n, m;\n    cin >> n;\n    unordered_map<string, Street> streets;\n    for (int i = 0; i < n; i++) {\n        string x, y;\n        cin >> x >> y;\n        Street s;\n        s.name = x;\n        s.is_ns = (x[0] == 'N' || x[0] == 'S');\n        s.cross.push_back(y);\n        if (streets.find(y) != streets.end()) {\n            s.cross.insert(s.cross.end(), streets[y].cross.begin(), streets[y].cross.end());\n        }\n        streets[x] = s;\n        streets[y] = s;\n    }\n    cin >> m;\n    for (int i = 0; i < m; i++) {\n        string x, y;\n        cin >> x >> y;\n        if (is_valid(streets, x, y)) {\n            cout << \"YES\" << endl;\n        } else {\n            cout << \"NO\" << endl;\n        }\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}