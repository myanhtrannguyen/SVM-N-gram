{
    "solution_id": "llama3.1-8b-3451",
    "problem_id": "p01961",
    "language": "Python",
    "solution": "```python\nfrom collections import deque\n\ndef bfs(grid, start, end):\n    h, w = len(grid), len(grid[0])\n    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]\n    queue = deque([(start, [start])])\n    visited = set([start])\n    while queue:\n        (x, y), path = queue.popleft()\n        if (x, y) == end:\n            return path\n        for dx, dy in directions:\n            nx, ny = x + dx, y + dy\n            if 0 <= nx < h and 0 <= ny < w and grid[nx][ny] != '#' and (nx, ny) not in visited:\n                queue.append(((nx, ny), path + [(nx, ny)]))\n                visited.add((nx, ny))\n    return None\n\ndef find_journey(grid):\n    h, w = len(grid), len(grid[0])\n    start = None\n    for i in range(h):\n        for j in range(w):\n            if grid[i][j] == '@':\n                start = (i, j)\n                break\n        if start:\n            break\n    end = None\n    for i in range(h):\n        for j in range(w):\n            if grid[i][j] == '*':\n                end = (i, j)\n                break\n        if end:\n            break\n    journey = bfs(grid, start, end)\n    if journey:\n        for i in range(h):\n            for j in range(w):\n                if (i, j) in journey:\n                    grid[i][j] = '#'\n    return grid\n\ndef main():\n    h, w = map(int, input().split())\n    grid = []\n    for _ in range(h):\n        grid.append(list(input().strip()))\n    grid = find_journey(grid)\n    for row in grid:\n        print(''.join(row))\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}