{
    "solution_id": "llama3.1-8b-3842",
    "problem_id": "p02281",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    static class Node {\n        int id;\n        int left;\n        int right;\n\n        public Node(int id, int left, int right) {\n            this.id = id;\n            this.left = left;\n            this.right = right;\n        }\n    }\n\n    static class Tree {\n        int n;\n        Node[] nodes;\n\n        public Tree(int n) {\n            this.n = n;\n            this.nodes = new Node[n];\n        }\n\n        public void addNode(int id, int left, int right) {\n            nodes[id] = new Node(id, left, right);\n        }\n\n        public List<Integer> preorder(int root) {\n            List<Integer> result = new ArrayList<>();\n            if (root == -1) return result;\n            result.add(nodes[root].id);\n            result.addAll(preorder(nodes[root].left));\n            result.addAll(preorder(nodes[root].right));\n            return result;\n        }\n\n        public List<Integer> inorder(int root) {\n            List<Integer> result = new ArrayList<>();\n            if (root == -1) return result;\n            result.addAll(inorder(nodes[root].left));\n            result.add(nodes[root].id);\n            result.addAll(inorder(nodes[root].right));\n            return result;\n        }\n\n        public List<Integer> postorder(int root) {\n            List<Integer> result = new ArrayList<>();\n            if (root == -1) return result;\n            result.addAll(postorder(nodes[root].left));\n            result.addAll(postorder(nodes[root].right));\n            result.add(nodes[root].id);\n            return result;\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        Tree tree = new Tree(n);\n        for (int i = 0; i < n; i++) {\n            int id = scanner.nextInt();\n            int left = scanner.nextInt();\n            int right = scanner.nextInt();\n            tree.addNode(id, left, right);\n        }\n        scanner.close();\n\n        List<Integer> preorder = tree.preorder(0);\n        List<Integer> inorder = tree.inorder(0);\n        List<Integer> postorder = tree.postorder(0);\n\n        System.out.println(\"Preorder\");\n        System.out.println(preorder.stream().map(String::valueOf).collect(Collectors.joining(\" \")));\n        System.out.println(\"Inorder\");\n        System.out.println(inorder.stream().map(String::valueOf).collect(Collectors.joining(\" \")));\n        System.out.println(\"Postorder\");\n        System.out.println(postorder.stream().map(String::valueOf).collect(Collectors.joining(\" \")));\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}