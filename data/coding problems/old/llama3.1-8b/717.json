{
    "solution_id": "llama3.1-8b-717",
    "problem_id": "p00716",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\ndouble calculateSimpleInterest(double balance, double interestRate, double charge, int years) {\n    double interest = 0;\n    for (int i = 0; i < years; i++) {\n        interest += round(balance * interestRate);\n        balance += round(balance * interestRate) - charge;\n    }\n    return balance + interest;\n}\n\ndouble calculateCompoundInterest(double balance, double interestRate, double charge, int years) {\n    double interest = 0;\n    for (int i = 0; i < years; i++) {\n        interest = round(balance * interestRate);\n        balance += interest - charge;\n    }\n    return balance;\n}\n\ndouble calculateMaxAmount(double initialBalance, int years, vector<vector<string>> operations) {\n    double maxAmount = 0;\n    for (auto operation : operations) {\n        double interestRate = stod(operation[1]);\n        double charge = stod(operation[2]);\n        if (operation[0] == \"0\") {\n            double amount = calculateSimpleInterest(initialBalance, interestRate, charge, years);\n            if (amount > maxAmount) {\n                maxAmount = amount;\n            }\n        } else {\n            double amount = calculateCompoundInterest(initialBalance, interestRate, charge, years);\n            if (amount > maxAmount) {\n                maxAmount = amount;\n            }\n        }\n    }\n    return maxAmount;\n}\n\nint main() {\n    int m;\n    cin >> m;\n    for (int i = 0; i < m; i++) {\n        int initialBalance;\n        int years;\n        int n;\n        cin >> initialBalance >> years >> n;\n        vector<vector<string>> operations(n, vector<string>(3));\n        for (int j = 0; j < n; j++) {\n            cin >> operations[j][0] >> operations[j][1] >> operations[j][2];\n        }\n        double maxAmount = calculateMaxAmount(initialBalance, years, operations);\n        cout << round(maxAmount) << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}