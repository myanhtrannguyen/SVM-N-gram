{
    "solution_id": "llama3.1-8b-542",
    "problem_id": "p00649",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\npublic class Main {\n\n    static class Frame {\n        int x1, y1, x2, y2, order;\n\n        public Frame(int x1, int y1, int x2, int y2, int order) {\n            this.x1 = x1;\n            this.y1 = y1;\n            this.x2 = x2;\n            this.y2 = y2;\n            this.order = order;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line;\n        List<Frame> frames = new ArrayList<>();\n        while ((line = br.readLine()) != null) {\n            if (line.equals(\"0\")) break;\n            int n = Integer.parseInt(line);\n            for (int i = 0; i < n; i++) {\n                String[] parts = br.readLine().split(\" \");\n                int x1 = Integer.parseInt(parts[0]);\n                int y1 = Integer.parseInt(parts[1]);\n                int x2 = Integer.parseInt(parts[2]);\n                int y2 = Integer.parseInt(parts[3]);\n                frames.add(new Frame(x1, y1, x2, y2, i + 1));\n            }\n            Collections.sort(frames, new Comparator<Frame>() {\n                @Override\n                public int compare(Frame f1, Frame f2) {\n                    if (f1.x2 == f2.x2) {\n                        return Integer.compare(f1.y2, f2.y2);\n                    } else {\n                        return Integer.compare(f2.x2, f1.x2);\n                    }\n                }\n            });\n            int x = frames.get(0).x2;\n            int y = frames.get(0).y2;\n            int order = 1;\n            while (true) {\n                for (int i = 0; i < frames.size(); i++) {\n                    if (frames.get(i).x1 > x || frames.get(i).y1 > y) continue;\n                    if (frames.get(i).x2 < x || frames.get(i).y2 < y) continue;\n                    frames.get(i).order = order;\n                    order++;\n                }\n                boolean found = false;\n                for (int i = 0; i < frames.size(); i++) {\n                    if (frames.get(i).x2 == x && frames.get(i).y2 == y) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) break;\n                for (int i = 0; i < frames.size(); i++) {\n                    if (frames.get(i).x2 == x && frames.get(i).y2 == y) {\n                        x = frames.get(i).x1;\n                        y = frames.get(i).y2;\n                        break;\n                    }\n                }\n            }\n            for (Frame frame : frames) {\n                System.out.println(frame.order);\n            }\n            System.out.println();\n            frames.clear();\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}