{
    "solution_id": "llama3.1-8b-3170",
    "problem_id": "p01739",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    static class Node implements Comparable<Node> {\n        int id;\n        int time;\n\n        public Node(int id, int time) {\n            this.id = id;\n            this.time = time;\n        }\n\n        @Override\n        public int compareTo(Node o) {\n            return Integer.compare(this.time, o.time);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        List<List<Node>> graph = new ArrayList<>();\n        for (int i = 0; i <= n; i++) {\n            graph.add(new ArrayList<>());\n        }\n        for (int i = 1; i <= n; i++) {\n            String[] line = br.readLine().split(\" \");\n            int k = Integer.parseInt(line[0]);\n            for (int j = 1; j <= k; j++) {\n                int t = Integer.parseInt(line[j * 2 - 1]);\n                int c = Integer.parseInt(line[j * 2]);\n                graph.get(t).add(new Node(i, c));\n            }\n        }\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[1] = 0;\n        PriorityQueue<Node> pq = new PriorityQueue<>();\n        pq.add(new Node(1, 0));\n        while (!pq.isEmpty()) {\n            Node node = pq.poll();\n            for (Node next : graph.get(node.id)) {\n                if (dp[next.id] > dp[node.id] + next.time) {\n                    dp[next.id] = dp[node.id] + next.time;\n                    pq.add(new Node(next.id, dp[next.id]));\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            if (dp[i] < Integer.MAX_VALUE) {\n                ans += dp[i];\n            }\n        }\n        System.out.println(ans);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}