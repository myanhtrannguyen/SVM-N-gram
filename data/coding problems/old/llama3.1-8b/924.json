{
    "solution_id": "llama3.1-8b-924",
    "problem_id": "p00768",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_TEAMS 50\n#define MAX_PROBLEMS 10\n#define MAX_SUBMISSIONS 2000\n\ntypedef struct {\n    int team;\n    int problems;\n    int time;\n} Team;\n\nint compare_teams(const void *a, const void *b) {\n    Team *team_a = (Team *)a;\n    Team *team_b = (Team *)b;\n\n    if (team_a->problems != team_b->problems) {\n        return team_b->problems - team_a->problems;\n    } else if (team_a->time != team_b->time) {\n        return team_a->time - team_b->time;\n    } else {\n        return team_a->team - team_b->team;\n    }\n}\n\nint main() {\n    int m, t, p, r;\n    int i, j, k, l;\n    int team, problem, submission, judgment;\n    int elapsed_time;\n    Team teams[MAX_TEAMS];\n    int team_count = 0;\n\n    while (scanf(\"%d %d %d %d\", &m, &t, &p, &r) == 4) {\n        if (r == 0) {\n            break;\n        }\n\n        for (i = 0; i < t; i++) {\n            teams[i].team = i + 1;\n            teams[i].problems = 0;\n            teams[i].time = 0;\n        }\n\n        for (i = 0; i < r; i++) {\n            scanf(\"%d %d %d %d\", &elapsed_time, &team, &problem, &judgment);\n\n            for (j = 0; j < team_count; j++) {\n                if (teams[j].team == team) {\n                    if (judgment == 0) {\n                        teams[j].problems++;\n                        teams[j].time += elapsed_time + (elapsed_time - teams[j].time) / 20 * 20;\n                    }\n                    break;\n                }\n            }\n\n            if (j == team_count) {\n                if (judgment == 0) {\n                    team_count++;\n                    teams[team_count - 1].team = team;\n                    teams[team_count - 1].problems = 1;\n                    teams[team_count - 1].time = elapsed_time;\n                }\n            }\n        }\n\n        qsort(teams, team_count, sizeof(Team), compare_teams);\n\n        for (i = 0; i < team_count; i++) {\n            for (j = i + 1; j < team_count; j++) {\n                if (teams[j].team == teams[i].team) {\n                    printf(\"%d=\", teams[j].team);\n                    j++;\n                }\n            }\n            for (j = i; j < team_count; j++) {\n                if (teams[j].team != teams[i].team) {\n                    printf(\"%d\", teams[j].team);\n                }\n            }\n            printf(\"%s\", (i == team_count - 1) ? \"\\n\" : \",\");\n        }\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}