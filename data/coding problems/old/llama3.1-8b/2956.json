{
    "solution_id": "llama3.1-8b-2956",
    "problem_id": "p01597",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MAX_OBSTACLES 40000\n\ntypedef struct {\n    int x1, y1, x2, y2;\n} Obstacle;\n\nint ccw(int x1, int y1, int x2, int y2, int x3, int y3) {\n    return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1);\n}\n\nint intersect(Obstacle o1, Obstacle o2) {\n    int x1 = o1.x1, y1 = o1.y1, x2 = o1.x2, y2 = o1.y2;\n    int x3 = o2.x1, y3 = o2.y1, x4 = o2.x2, y4 = o2.y2;\n\n    int d = ccw(x1, y1, x2, y2, x3, y3) * ccw(x1, y1, x2, y2, x4, y4);\n    if (d == 0) return 0; // parallel\n\n    int i1 = ccw(x1, y1, x3, y3, x4, y4);\n    int i2 = ccw(x2, y2, x3, y3, x4, y4);\n    if (i1 * i2 < 0) return 1; // intersect\n    if (i1 == 0 && x1 >= x3 && x1 <= x4) return 1; // intersect\n    if (i2 == 0 && x2 >= x3 && x2 <= x4) return 1; // intersect\n\n    return 0; // no intersect\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    Obstacle obstacles[MAX_OBSTACLES];\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d %d %d %d\", &obstacles[i].x1, &obstacles[i].y1, &obstacles[i].x2, &obstacles[i].y2);\n    }\n\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (intersect(obstacles[i], obstacles[j])) {\n                for (int k = 0; k < n; k++) {\n                    if (intersect(obstacles[i], obstacles[k]) && intersect(obstacles[j], obstacles[k])) {\n                        count++;\n                    }\n                }\n            }\n        }\n    }\n\n    printf(\"%d\\n\", count);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}