{
    "solution_id": "llama3.1-8b-1038",
    "problem_id": "p00796",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Point {\n        double x, y, z;\n        int num;\n\n        public Point(double x, double y, double z, int num) {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n            this.num = num;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        while (t-- > 0) {\n            String[] s = br.readLine().split(\" \");\n            double a = Double.parseDouble(s[0]);\n            double b = Double.parseDouble(s[1]);\n            double c = Double.parseDouble(s[2]);\n            int n = Integer.parseInt(br.readLine());\n            Point[] points = new Point[n];\n            for (int i = 0; i < n; i++) {\n                s = br.readLine().split(\" \");\n                points[i] = new Point(Double.parseDouble(s[0]), Double.parseDouble(s[1]), Double.parseDouble(s[2]), i + 1);\n            }\n            Arrays.sort(points, (p1, p2) -> {\n                double d1 = dist(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);\n                double d2 = dist(p2.x, p2.y, p2.z, p1.x, p1.y, p1.z);\n                return Double.compare(d1, d2);\n            });\n            double[] sides = {dist(points[0].x, points[0].y, points[0].z, points[1].x, points[1].y, points[1].z),\n                    dist(points[1].x, points[1].y, points[1].z, points[2].x, points[2].y, points[2].z),\n                    dist(points[2].x, points[2].y, points[2].z, points[0].x, points[0].y, points[0].z)};\n            Arrays.sort(sides);\n            double ratio = (sides[0] / a) * 100;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    for (int k = j + 1; k < n; k++) {\n                        double[] sides2 = {dist(points[i].x, points[i].y, points[i].z, points[j].x, points[j].y, points[j].z),\n                                dist(points[j].x, points[j].y, points[j].z, points[k].x, points[k].y, points[k].z),\n                                dist(points[k].x, points[k].y, points[k].z, points[i].x, points[i].y, points[i].z)};\n                        Arrays.sort(sides2);\n                        if (Math.abs(sides2[0] / sides[0] - ratio / 100) < 0.001 && Math.abs(sides2[1] / sides[1] - ratio / 100) < 0.001 && Math.abs(sides2[2] / sides[2] - ratio / 100) < 0.001) {\n                            System.out.println(points[i].num + \" \" + points[j].num + \" \" + points[k].num);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    static double dist(double x1, double y1, double z1, double x2, double y2, double z2) {\n        return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}