{
    "solution_id": "llama3.1-8b-1343",
    "problem_id": "p00872",
    "language": "Python",
    "solution": "```python\nimport re\nimport math\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef parse_polynomial(s):\n    terms = re.findall(r'([+-]?\\d*x\\^\\d+|\\d*x\\^\\d+|[+-]?\\d+|\\d+)', s)\n    result = []\n    for term in terms:\n        if term[0] == '-':\n            term = term[1:]\n        if '^' in term:\n            coeff, exp = term.split('x^')\n            coeff = int(coeff)\n            exp = int(exp)\n        else:\n            coeff = int(term)\n            exp = 0\n        result.append((coeff, exp))\n    return result\n\ndef gcm(p1, p2):\n    result = []\n    max_exp = max(max(exp for coeff, exp in p1), max(exp for coeff, exp in p2))\n    for exp in range(max_exp, -1, -1):\n        coeff1 = 1\n        coeff2 = 1\n        for coeff, exp2 in p1:\n            if exp2 == exp:\n                coeff1 *= coeff\n        for coeff, exp2 in p2:\n            if exp2 == exp:\n                coeff2 *= coeff\n        if coeff1 != 0 and coeff2 != 0:\n            g = gcd(coeff1, coeff2)\n            result.append((g, exp))\n    result = sorted(result, key=lambda x: x[1], reverse=True)\n    result = [f'{coeff}x^{exp}' if exp != 0 else f'{coeff}' for coeff, exp in result]\n    return ' + '.join(result).replace('+ -', '- ')\n\ndef main():\n    while True:\n        s1 = input()\n        s2 = input()\n        if s1 == '.':\n            break\n        p1 = parse_polynomial(s1)\n        p2 = parse_polynomial(s2)\n        print(gcm(p1, p2))\n\nif __name__ == '__main__':\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}