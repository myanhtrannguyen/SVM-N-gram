{
    "solution_id": "llama3.1-8b-3074",
    "problem_id": "p01682",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class ShipuraEvaluator {\n    private static final long MOD = 1000000007;\n\n    public static void main(String[] args) throws IOException {\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n             PrintWriter pw = new PrintWriter(System.out)) {\n\n            String line;\n            while ((line = br.readLine()) != null) {\n                if (line.equals(\"#\")) {\n                    break;\n                }\n\n                String expression = line.trim();\n                long result = evaluateExpression(expression);\n                pw.println(result);\n            }\n        }\n    }\n\n    private static long evaluateExpression(String expression) {\n        Pattern pattern = Pattern.compile(\"S<([^>]+)>\");\n        Matcher matcher = pattern.matcher(expression);\n        while (matcher.find()) {\n            String subExpression = matcher.group(1);\n            long result = evaluateExpression(subExpression);\n            result = result * result % MOD;\n            expression = expression.replace(\"S<\" + subExpression + \">\", String.valueOf(result));\n        }\n\n        pattern = Pattern.compile(\"\\\\d+\");\n        matcher = pattern.matcher(expression);\n        while (matcher.find()) {\n            String number = matcher.group();\n            long value = Long.parseLong(number);\n            expression = expression.replace(number, String.valueOf(value));\n        }\n\n        pattern = Pattern.compile(\">>\");\n        matcher = pattern.matcher(expression);\n        while (matcher.find()) {\n            int index = matcher.start();\n            String left = expression.substring(0, index);\n            String right = expression.substring(index + 2);\n            long leftValue = Long.parseLong(left);\n            long rightValue = Long.parseLong(right);\n            long result = leftValue >> rightValue;\n            expression = expression.replace(left + \">>\" + right, String.valueOf(result));\n        }\n\n        return Long.parseLong(expression);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}