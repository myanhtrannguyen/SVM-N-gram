{
    "solution_id": "llama3.1-8b-398",
    "problem_id": "p00592",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Interval {\n        int start, end;\n\n        Interval(int start, int end) {\n            this.start = start;\n            this.end = end;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = 1;\n        while (t-- > 0) {\n            StringTokenizer st = new StringTokenizer(br.readLine());\n            int n = Integer.parseInt(st.nextToken());\n            int p = Integer.parseInt(st.nextToken());\n            int q = Integer.parseInt(st.nextToken());\n            List<Interval>[] intervals = new List[n];\n            for (int i = 0; i < n; i++) {\n                intervals[i] = new ArrayList<>();\n            }\n            while (n-- > 0) {\n                st = new StringTokenizer(br.readLine());\n                int k = Integer.parseInt(st.nextToken());\n                for (int i = 0; i < k; i++) {\n                    st = new StringTokenizer(br.readLine());\n                    int start = Integer.parseInt(st.nextToken());\n                    int end = Integer.parseInt(st.nextToken());\n                    intervals[Integer.parseInt(st.nextToken())].add(new Interval(start, end));\n                }\n            }\n            int maxDuration = 0;\n            for (int i = 0; i < n; i++) {\n                Collections.sort(intervals[i], Comparator.comparingInt(a -> a.start));\n                int prevEnd = -1;\n                for (Interval interval : intervals[i]) {\n                    if (prevEnd < interval.start) {\n                        maxDuration = Math.max(maxDuration, interval.end - interval.start);\n                    } else {\n                        maxDuration = Math.max(maxDuration, interval.end - prevEnd);\n                    }\n                    prevEnd = Math.max(prevEnd, interval.end);\n                }\n            }\n            int totalDuration = (q - p) / 60;\n            maxDuration = Math.min(maxDuration, totalDuration);\n            System.out.println(maxDuration * 60);\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}