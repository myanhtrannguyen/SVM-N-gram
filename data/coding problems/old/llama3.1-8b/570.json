{
    "solution_id": "llama3.1-8b-570",
    "problem_id": "p00656",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    static class TrieNode {\n        Map<Character, TrieNode> children = new HashMap<>();\n        int expectation = 0;\n        int price = 0;\n    }\n\n    static class Trie {\n        TrieNode root;\n\n        public Trie() {\n            root = new TrieNode();\n        }\n\n        public void addWord(String word, int expectation, int price) {\n            TrieNode node = root;\n            for (char c : word.toCharArray()) {\n                node = node.children.computeIfAbsent(c, k -> new TrieNode());\n            }\n            node.expectation = expectation;\n            node.price = price;\n        }\n\n        public int query(String word, int budget) {\n            TrieNode node = root;\n            int maxExpectation = 0;\n            int minPrice = Integer.MAX_VALUE;\n            for (char c : word.toCharArray()) {\n                if (!node.children.containsKey(c)) {\n                    return maxExpectation;\n                }\n                node = node.children.get(c);\n                if (node.price < minPrice) {\n                    minPrice = node.price;\n                }\n                if (node.price <= budget) {\n                    maxExpectation = Math.max(maxExpectation, node.expectation);\n                }\n            }\n            return maxExpectation;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        StringTokenizer st;\n\n        Trie trie = new Trie();\n        int n, w;\n        while (true) {\n            st = new StringTokenizer(br.readLine());\n            if (st.nextToken().equals(\"0\")) {\n                break;\n            }\n            n = Integer.parseInt(st.nextToken());\n            w = Integer.parseInt(st.nextToken());\n            for (int i = 0; i < n; i++) {\n                st = new StringTokenizer(br.readLine());\n                String word = st.nextToken();\n                int expectation = Integer.parseInt(st.nextToken());\n                int price = Integer.parseInt(st.nextToken());\n                trie.addWord(word, expectation, price);\n            }\n            int q = Integer.parseInt(br.readLine());\n            for (int i = 0; i < q; i++) {\n                String word = br.readLine();\n                int maxExpectation = trie.query(word, w);\n                pw.println(maxExpectation);\n            }\n        }\n        pw.close();\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}