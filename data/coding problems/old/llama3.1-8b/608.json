{
    "solution_id": "llama3.1-8b-608",
    "problem_id": "p00689",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <math.h>\n\n#define MAX_FLAGS 400\n\ntypedef struct {\n    int x, y;\n} Flag;\n\nint compare_flags(const void *a, const void *b) {\n    Flag *flag_a = (Flag *)a;\n    Flag *flag_b = (Flag *)b;\n\n    double angle_a = atan2(flag_a->y, flag_a->x);\n    double angle_b = atan2(flag_b->y, flag_b->x);\n\n    if (angle_a < angle_b) return -1;\n    if (angle_a > angle_b) return 1;\n    return 0;\n}\n\ndouble distance(Flag *a, Flag *b) {\n    return sqrt(pow(a->x - b->x, 2) + pow(a->y - b->y, 2));\n}\n\nint main() {\n    int n;\n    Flag flags[MAX_FLAGS];\n\n    while (scanf(\"%d\", &n) == 1) {\n        if (n == 0) break;\n\n        for (int i = 0; i < n; i++) {\n            scanf(\"%d %d\", &flags[i].x, &flags[i].y);\n        }\n\n        qsort(flags, n, sizeof(Flag), compare_flags);\n\n        double total_distance = 0;\n        Flag current_direction = {1, 0};\n        Flag next_flag = flags[0];\n\n        for (int i = 0; i < n; i++) {\n            double min_distance = INFINITY;\n            Flag min_flag;\n\n            for (int j = 0; j < n; j++) {\n                if (i == j) continue;\n\n                double distance_to_flag = distance(&flags[j], &next_flag);\n                double angle_to_flag = atan2(flags[j].y - next_flag.y, flags[j].x - next_flag.x);\n\n                if (angle_to_flag > atan2(current_direction.y, current_direction.x)) {\n                    if (distance_to_flag < min_distance) {\n                        min_distance = distance_to_flag;\n                        min_flag = flags[j];\n                    }\n                }\n            }\n\n            total_distance += min_distance;\n            current_direction = {next_flag.x - min_flag.x, next_flag.y - min_flag.y};\n            next_flag = min_flag;\n        }\n\n        printf(\"%.1f\\n\", total_distance);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}