{
    "solution_id": "llama3.1-8b-3212",
    "problem_id": "p01790",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 100005\n\ntypedef struct {\n    int to, next;\n} edge;\n\nedge e[N * 2];\nint head[N], cnt = 1;\n\nvoid add_edge(int u, int v) {\n    e[++cnt].to = v;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n}\n\nint n, ans;\nchar s[N];\nint dep[N], son[N], siz[N], top[N], dfn[N], num;\nint stk[N], top_id;\n\nvoid dfs1(int u, int fa) {\n    siz[u] = 1;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dep[v] = dep[u] + 1;\n        dfs1(v, u);\n        siz[u] += siz[v];\n        if (siz[v] > siz[son[u]]) son[u] = v;\n    }\n}\n\nvoid dfs2(int u, int tp) {\n    top[u] = tp;\n    stk[++top_id] = u;\n    if (son[u]) dfs2(son[u], tp);\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == son[u] || v == top[u]) continue;\n        dfs2(v, v);\n    }\n    stk[top_id--] = u;\n}\n\nint get(int u, int v) {\n    int res = 0;\n    while (top[u] != top[v]) {\n        if (dep[top[u]] < dep[top[v]]) {\n            int tmp = u;\n            u = v;\n            v = tmp;\n        }\n        res += dfn[top[u]] - dfn[u] + 1;\n        u = top[u];\n    }\n    if (dep[u] > dep[v]) {\n        int tmp = u;\n        u = v;\n        v = tmp;\n    }\n    res += dfn[v] - dfn[u] + 1;\n    return res;\n}\n\nint check(char *s) {\n    int cnt = 0;\n    while (*s) {\n        if (*s == '(') cnt++;\n        else cnt--;\n        if (cnt < 0) return 0;\n        s++;\n    }\n    return cnt == 0;\n}\n\nvoid dfs3(int u, int fa) {\n    dfn[u] = ++num;\n    int cnt = 0;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        if (check(s + dfn[v] - dfn[u])) cnt++;\n        dfs3(v, u);\n    }\n    if (son[u]) dfs3(son[u], u);\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == son[u] || v == top[u]) continue;\n        if (check(s + dfn[v] - dfn[u])) cnt++;\n    }\n    ans += cnt * (siz[u] - cnt);\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    scanf(\"%s\", s + 1);\n    for (int i = 1; i < n; i++) {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        add_edge(u, v);\n        add_edge(v, u);\n    }\n    dfs1(1, 0);\n    dfs2(1, 1);\n    dfs3(1, 0);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}