{
    "solution_id": "llama3.1-8b-3932",
    "problem_id": "p02304",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAXN 100005\n#define MAXM 1000005\n\ntypedef struct {\n    int x1, y1, x2, y2;\n} Segment;\n\nSegment segs[MAXN];\nint n;\nint x[2 * MAXN], y[2 * MAXN];\nint cntx[2 * MAXN], cnty[2 * MAXN];\nint ans;\n\nint cmpx(const void *a, const void *b) {\n    Segment *p = (Segment *)a;\n    Segment *q = (Segment *)b;\n    if (p->x1 == q->x1) return p->y1 - q->y1;\n    return p->x1 - q->x1;\n}\n\nint cmpy(const void *a, const void *b) {\n    Segment *p = (Segment *)a;\n    Segment *q = (Segment *)b;\n    if (p->y1 == q->y1) return p->x1 - q->x1;\n    return p->y1 - q->y1;\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d %d %d %d\", &segs[i].x1, &segs[i].y1, &segs[i].x2, &segs[i].y2);\n        if (segs[i].x1 > segs[i].x2) {\n            int temp = segs[i].x1;\n            segs[i].x1 = segs[i].x2;\n            segs[i].x2 = temp;\n        }\n        if (segs[i].y1 > segs[i].y2) {\n            int temp = segs[i].y1;\n            segs[i].y1 = segs[i].y2;\n            segs[i].y2 = temp;\n        }\n        x[2 * i - 1] = segs[i].x1;\n        x[2 * i] = segs[i].x2;\n        y[2 * i - 1] = segs[i].y1;\n        y[2 * i] = segs[i].y2;\n    }\n    qsort(x, 2 * n, sizeof(int), cmpx);\n    qsort(y, 2 * n, sizeof(int), cmpy);\n    for (int i = 1; i <= 2 * n; i++) {\n        cntx[i] = cntx[i - 1];\n        cnty[i] = cnty[i - 1];\n        if (i % 2 == 1) cntx[i]++;\n        if (i <= 2 * n - 1 && i % 2 == 0) cntx[i]++;\n        if (i % 2 == 0) cnty[i]++;\n        if (i <= 2 * n - 1 && i % 2 == 1) cnty[i]++;\n    }\n    for (int i = 1; i <= 2 * n; i++) {\n        if (i % 2 == 0) {\n            int j = lower_bound(y, y + 2 * n, x[i - 1]) - y;\n            ans += cntx[i - 1] - cntx[j - 1];\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}