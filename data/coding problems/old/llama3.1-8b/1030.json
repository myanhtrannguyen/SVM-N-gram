{
    "solution_id": "llama3.1-8b-1030",
    "problem_id": "p00794",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    static class Ant {\n        int x, y, time, hp;\n\n        public Ant(int x, int y, int time, int hp) {\n            this.x = x;\n            this.y = y;\n            this.time = time;\n            this.hp = hp;\n        }\n    }\n\n    static class State implements Comparable<State> {\n        int x, y, time, hp;\n        int food, hole;\n\n        public State(int x, int y, int time, int hp, int food, int hole) {\n            this.x = x;\n            this.y = y;\n            this.time = time;\n            this.hp = hp;\n            this.food = food;\n            this.hole = hole;\n        }\n\n        @Override\n        public int compareTo(State other) {\n            return Integer.compare(this.time + this.hp, other.time + other.hp);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input;\n        while ((input = br.readLine().split(\" \")) != null && input.length > 0) {\n            if (input.length == 2 && input[0].equals(\"0\") && input[1].equals(\"0\")) break;\n            int w = Integer.parseInt(input[0]);\n            int h = Integer.parseInt(input[1]);\n            int[][] grid = new int[h][w];\n            for (int i = 0; i < h; i++) {\n                input = br.readLine().split(\" \");\n                for (int j = 0; j < w; j++) {\n                    grid[i][j] = Integer.parseInt(input[j]);\n                }\n            }\n            int[][] dist = new int[h][w];\n            for (int i = 0; i < h; i++) {\n                Arrays.fill(dist[i], -1);\n            }\n            Queue<State> queue = new LinkedList<>();\n            for (int i = 0; i < h; i++) {\n                for (int j = 0; j < w; j++) {\n                    if (grid[i][j] == 2) {\n                        queue.add(new State(j, i, 0, 6, 0, 0));\n                        dist[i][j] = 0;\n                    }\n                }\n            }\n            while (!queue.isEmpty()) {\n                State state = queue.poll();\n                if (state.hp <= 0) continue;\n                int[][] directions = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n                for (int[] dir : directions) {\n                    int x = state.x + dir[0];\n                    int y = state.y + dir[1];\n                    if (x >= 0 && x < w && y >= 0 && y < h && grid[y][x] != 0 && grid[y][x] != 1) {\n                        if (dist[y][x] == -1) {\n                            dist[y][x] = state.time + 1;\n                            queue.add(new State(x, y, state.time + 1, Math.max(0, state.hp - 1), state.food + (grid[y][x] == 4 ? 1 : 0), state.hole + (grid[y][x] == 3 ? 1 : 0)));\n                        }\n                    }\n                }\n            }\n            int minTime = Integer.MAX_VALUE;\n            for (int i = 0; i < h; i++) {\n                for (int j = 0; j < w; j++) {\n                    if (grid[i][j] == 3 && dist[i][j] != -1) {\n                        minTime = Math.min(minTime, dist[i][j]);\n                    }\n                }\n            }\n            if (minTime == Integer.MAX_VALUE) {\n                System.out.println(-1);\n            } else {\n                System.out.println(minTime);\n            }\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}