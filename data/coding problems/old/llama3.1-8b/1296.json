{
    "solution_id": "llama3.1-8b-1296",
    "problem_id": "p00861",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\n#define MAX_LINE 80\n#define MAX_PROGRAM 1000\n#define MAX_NAME 20\n\nint check_program(char *program) {\n    int line = 0;\n    int array[MAX_NAME][2] = {{0}};\n    int assigned[MAX_NAME][MAX_LINE] = {{0}};\n    int n = 0;\n\n    while (1) {\n        char line_str[MAX_LINE + 1];\n        fgets(line_str, MAX_LINE + 1, (FILE *) program);\n        line++;\n\n        if (line_str[0] == '.') {\n            break;\n        }\n\n        int i = 0;\n        while (line_str[i] != '[') {\n            i++;\n        }\n\n        int j = 0;\n        while (line_str[i + j] != ']') {\n            j++;\n        }\n\n        char name[MAX_NAME];\n        strncpy(name, line_str, i);\n        name[i] = '\\0';\n\n        int len = atoi(line_str + i + 1);\n        if (len > 2147483647) {\n            return line;\n        }\n\n        if (array[n][0] == 0) {\n            array[n][0] = n;\n            array[n][1] = len;\n            n++;\n        }\n\n        if (array[n - 1][1] < len) {\n            return line;\n        }\n\n        if (line_str[i + j + 1] == '=') {\n            i = i + j + 2;\n            int k = 0;\n            while (line_str[i + k] != ']') {\n                k++;\n            }\n\n            char expr[MAX_LINE];\n            strncpy(expr, line_str + i, k);\n            expr[k] = '\\0';\n\n            int expr_val = atoi(expr);\n            if (expr_val >= len) {\n                return line;\n            }\n\n            if (assigned[n - 1][expr_val] == 0) {\n                return line;\n            }\n\n            i = i + k + 1;\n            k = 0;\n            while (line_str[i + k] != '\\0') {\n                k++;\n            }\n\n            char value[MAX_LINE];\n            strncpy(value, line_str + i, k);\n            value[k] = '\\0';\n\n            int value_val = atoi(value);\n            if (value_val >= len) {\n                return line;\n            }\n\n            assigned[n - 1][value_val] = 1;\n        }\n    }\n\n    return 0;\n}\n\nint main() {\n    char program[MAX_PROGRAM][MAX_LINE + 1];\n    int i = 0;\n    while (1) {\n        fgets(program[i], MAX_LINE + 1, stdin);\n        if (program[i][0] == '.') {\n            break;\n        }\n        i++;\n    }\n\n    int result = 0;\n    for (int j = 0; j < i; j++) {\n        result = check_program(program + j);\n        if (result != 0) {\n            break;\n        }\n    }\n\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}