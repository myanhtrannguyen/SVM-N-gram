{
    "solution_id": "llama3.1-8b-909",
    "problem_id": "p00764",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <cmath>\n#include <vector>\n\nusing namespace std;\n\ndouble distance(double x1, double y1, double x2, double y2) {\n    return sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n\ndouble intersect(double x1, double y1, double r1, double x2, double y2, double r2) {\n    double d = distance(x1, y1, x2, y2);\n    if (d > r1 + r2) return 0;\n    if (d < abs(r1 - r2)) return 0;\n    double a = (r1 * r1 - r2 * r2 + d * d) / (2 * d);\n    double h = sqrt(r1 * r1 - a * a);\n    double xm = x1 + a * (x2 - x1) / d;\n    double ym = y1 + a * (y2 - y1) / d;\n    double xs1 = xm + h * (y2 - y1) / d;\n    double xs2 = xm - h * (y2 - y1) / d;\n    double ys1 = ym - h * (x2 - x1) / d;\n    double ys2 = ym + h * (x2 - x1) / d;\n    double d1 = distance(x1, y1, xs1, ys1);\n    double d2 = distance(x1, y1, xs2, ys2);\n    if (d1 < d2) return d1;\n    return d2;\n}\n\ndouble chain_confined_path(int n, vector<vector<double>>& circles) {\n    double total_distance = 0;\n    for (int i = 0; i < n - 1; i++) {\n        total_distance += intersect(circles[i][0], circles[i][1], circles[i][2], circles[i + 1][0], circles[i + 1][1], circles[i + 1][2]);\n    }\n    total_distance += distance(circles[0][0], circles[0][1], circles[n - 1][0], circles[n - 1][1]);\n    return total_distance;\n}\n\nint main() {\n    int n;\n    while (cin >> n) {\n        if (n == 0) break;\n        vector<vector<double>> circles(n);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 3; j++) {\n                cin >> circles[i][j];\n            }\n        }\n        double result = chain_confined_path(n, circles);\n        cout << fixed << setprecision(6) << result << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}