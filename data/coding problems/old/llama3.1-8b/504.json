{
    "solution_id": "llama3.1-8b-504",
    "problem_id": "p00640",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_PAGES 100\n#define MAX_BUTTONS 100\n#define MAX_NAME 20\n\ntypedef struct {\n    int w, h;\n    char name[MAX_NAME];\n    int b;\n    struct {\n        int x1, y1, x2, y2;\n        char name[MAX_NAME];\n    } buttons[MAX_BUTTONS];\n} page;\n\ntypedef struct {\n    page pages[MAX_PAGES];\n    int n, m, p;\n} browser;\n\nvoid init(browser *b) {\n    b->n = 0;\n    b->m = 0;\n    b->p = 0;\n}\n\nvoid add_page(browser *b, page p) {\n    if (b->n < MAX_PAGES) {\n        b->pages[b->n++] = p;\n    }\n}\n\nvoid add_button(browser *b, int i, page p) {\n    if (i < b->n && i >= 0) {\n        int j = b->n - 1;\n        while (j > i) {\n            b->pages[j] = b->pages[j - 1];\n            j--;\n        }\n        b->pages[i] = p;\n        b->p = i;\n    }\n}\n\nvoid back(browser *b) {\n    if (b->p > 0) {\n        b->p--;\n    }\n}\n\nvoid forward(browser *b) {\n    if (b->p < b->n - 1) {\n        b->p++;\n    }\n}\n\nvoid show(browser *b) {\n    if (b->p < b->n) {\n        printf(\"%s\\n\", b->pages[b->p].name);\n    }\n}\n\nint is_button(browser *b, int x, int y) {\n    if (b->p < b->n) {\n        int i;\n        for (i = 0; i < b->pages[b->p].b; i++) {\n            if (b->pages[b->p].buttons[i].x1 <= x && x <= b->pages[b->p].buttons[i].x2 &&\n                b->pages[b->p].buttons[i].y1 <= y && y <= b->pages[b->p].buttons[i].y2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n\nint main() {\n    browser b;\n    init(&b);\n    int n, m, w, h, i, j, k, x, y;\n    char name[MAX_NAME];\n    scanf(\"%d\", &n);\n    while (n--) {\n        scanf(\"%d %d\", &w, &h);\n        page p;\n        p.w = w;\n        p.h = h;\n        scanf(\"%s %d\", name, &p.b);\n        for (i = 0; i < p.b; i++) {\n            scanf(\"%d %d %d %d %s\", &p.buttons[i].x1, &p.buttons[i].y1, &p.buttons[i].x2, &p.buttons[i].y2, name);\n        }\n        strcpy(p.name, name);\n        add_page(&b, p);\n        scanf(\"%d\", &m);\n        while (m--) {\n            scanf(\"%s\", name);\n            if (strcmp(name, \"show\") == 0) {\n                show(&b);\n            } else if (strcmp(name, \"back\") == 0) {\n                back(&b);\n            } else if (strcmp(name, \"forward\") == 0) {\n                forward(&b);\n            } else {\n                scanf(\"%d %d\", &x, &y);\n                if (is_button(&b, x, y)) {\n                    add_button(&b, b.p, b.pages[b.p]);\n                    b.p++;\n                }\n            }\n        }\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}