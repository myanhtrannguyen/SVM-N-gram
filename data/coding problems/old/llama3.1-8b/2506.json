{
    "solution_id": "llama3.1-8b-2506",
    "problem_id": "p03622",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <queue>\n#include <bitset>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, int> pli;\ntypedef pair<ll, ll> pll;\ntypedef long double ld;\n#define mp make_pair\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst ll MOD = 998244353;\nll add(ll x, ll y) {\n\tx += y;\n\tif (x >= MOD) return x - MOD;\n\treturn x;\n}\nll sub(ll x, ll y) {\n\tx -= y;\n\tif (x < 0) return x + MOD;\n\treturn x;\n}\nll mult(ll x, ll y) {\n\treturn (x * y) % MOD;\n}\nll bin_pow(ll x, ll p) {\n\tif (p == 0) return 1;\n\tif (p & 1) return mult(x, bin_pow(x, p - 1));\n\treturn bin_pow(mult(x, x), p / 2);\n}\nll inv(ll x) {\n\treturn bin_pow(x, MOD - 2);\n}\n\nconst int N = 500500;\nll n, m;\nll fact[N], inv_fact[N];\n\nll C(ll n, ll k) {\n\tif (n < 0 || k < 0 || k > n) return 0;\n\treturn mult(fact[n], mult(inv_fact[k], inv_fact[n - k]));\n}\n\nint main()\n{\n\n\tfact[0] = 1;\n\tfor (int i = 1; i < N; i++)\n\t\tfact[i] = mult(fact[i - 1], i);\n\tinv_fact[N - 1] = inv(fact[N - 1]);\n\tfor (int i = N - 2; i >= 0; i--)\n\t\tinv_fact[i] = mult(inv_fact[i + 1], i + 1);\n\n\tscanf(\"%lld%lld\", &n, &m);\n\tll ans = 0;\n\tfor (int i = 0; i <= n; i++)\n\t\tans = add(ans, mult(C(n, i), mult(C(m + i, m), C(n + m - i, n))));\n\tll q = fact[n + m];\n\tll q_inv = inv(q);\n\tll r = mult(ans, q_inv);\n\tprintf(\"%lld\\n\", r);\n\n\treturn 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}