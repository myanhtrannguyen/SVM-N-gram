{
    "solution_id": "llama3.1-8b-1049",
    "problem_id": "p00799",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\nstruct Guard {\n    int id;\n    int time;\n    int chargingTime;\n    int nextConsumeTime;\n    int nextChargeTime;\n};\n\nint main() {\n    int numTests;\n    cin >> numTests;\n    cin.ignore();\n\n    for (int test = 0; test < numTests; test++) {\n        int numGuards, duration;\n        cin >> numGuards >> duration;\n        cin.ignore();\n\n        vector<Guard> guards(numGuards);\n        for (int i = 0; i < numGuards; i++) {\n            string line;\n            getline(cin, line);\n            istringstream iss(line);\n            int consumeTime, chargeTime;\n            while (iss >> consumeTime >> chargeTime) {\n                if (consumeTime == 0 && chargeTime == 0) break;\n                guards[i].consumeTime = consumeTime;\n                guards[i].chargingTime = chargeTime;\n                guards[i].nextConsumeTime = consumeTime;\n                guards[i].nextChargeTime = chargeTime;\n            }\n        }\n\n        getline(cin, line); // ignore empty line\n\n        priority_queue<int, vector<int>, greater<int>> queue;\n        int currentTime = 0;\n        int totalWaitTime = 0;\n\n        while (currentTime < duration) {\n            for (int i = 0; i < numGuards; i++) {\n                if (guards[i].nextConsumeTime <= currentTime) {\n                    queue.push(guards[i].nextChargeTime);\n                    guards[i].nextConsumeTime += guards[i].consumeTime;\n                    guards[i].nextChargeTime += guards[i].chargingTime;\n                }\n            }\n\n            if (!queue.empty()) {\n                int chargeTime = queue.top();\n                queue.pop();\n                currentTime = max(currentTime, guards[0].nextConsumeTime);\n                totalWaitTime += currentTime - queue.top() - currentTime;\n                currentTime += chargeTime;\n            } else {\n                currentTime++;\n            }\n        }\n\n        cout << totalWaitTime << endl;\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}