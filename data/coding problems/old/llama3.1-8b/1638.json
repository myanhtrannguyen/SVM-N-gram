{
    "solution_id": "llama3.1-8b-1638",
    "problem_id": "p02949",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <limits>\n\nusing namespace std;\n\nconst int MAXN = 2505;\nconst int MAXM = 5005;\n\nstruct Edge {\n    int to, cost, time;\n};\n\nint n, m, p;\nvector<Edge> g[MAXN];\nint dist[MAXN], time[MAXN];\n\nvoid dijkstra() {\n    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;\n    for (int i = 1; i <= n; i++) {\n        dist[i] = numeric_limits<int>::max();\n        time[i] = 0;\n    }\n    dist[1] = 0;\n    q.push({0, 1});\n    while (!q.empty()) {\n        auto [d, u] = q.top();\n        q.pop();\n        if (d > dist[u]) continue;\n        for (auto [v, c, t] : g[u]) {\n            int nd = d + c;\n            int nt = t + 1;\n            if (nd < dist[v] || (nd == dist[v] && nt < time[v])) {\n                dist[v] = nd;\n                time[v] = nt;\n                q.push({nd, v});\n            }\n        }\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> m >> p;\n    for (int i = 1; i <= m; i++) {\n        int u, v, c;\n        cin >> u >> v >> c;\n        g[u].push_back({v, c, 0});\n    }\n    dijkstra();\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        int t = (dist[i] + p - 1) / p;\n        int res = dist[i] - t * p;\n        ans = max(ans, res);\n    }\n    if (ans == 0) cout << -1;\n    else cout << ans;\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}