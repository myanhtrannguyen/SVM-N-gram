{
    "solution_id": "llama3.1-8b-3470",
    "problem_id": "p01966",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static class SegmentTree {\n        long[] tree;\n        int n;\n\n        public SegmentTree(int n) {\n            this.n = n;\n            tree = new long[4 * n];\n            build(1, 1, n);\n        }\n\n        void build(int v, int l, int r) {\n            if (l == r) {\n                tree[v] = 0;\n                return;\n            }\n            int m = (l + r) / 2;\n            build(2 * v, l, m);\n            build(2 * v + 1, m + 1, r);\n            tree[v] = Math.max(tree[2 * v], tree[2 * v + 1]);\n        }\n\n        void update(int v, int l, int r, int pos, long val) {\n            if (l == r) {\n                tree[v] = Math.max(tree[v], val);\n                return;\n            }\n            int m = (l + r) / 2;\n            if (pos <= m) {\n                update(2 * v, l, m, pos, val);\n            } else {\n                update(2 * v + 1, m + 1, r, pos, val);\n            }\n            tree[v] = Math.max(tree[2 * v], tree[2 * v + 1]);\n        }\n\n        long query(int v, int l, int r, int a, int b) {\n            if (l >= a && r <= b) {\n                return tree[v];\n            }\n            if (l > b || r < a) {\n                return 0;\n            }\n            int m = (l + r) / 2;\n            return Math.max(query(2 * v, l, m, a, b), query(2 * v + 1, m + 1, r, a, b));\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int q = Integer.parseInt(st.nextToken());\n        SegmentTree stree = new SegmentTree(n);\n        long[] time = new long[q + 1];\n        for (int i = 1; i <= q; i++) {\n            st = new StringTokenizer(br.readLine());\n            int a = Integer.parseInt(st.nextToken());\n            int b = Integer.parseInt(st.nextToken());\n            int p = Integer.parseInt(st.nextToken());\n            time[i] = Math.max(time[i - 1], (long) (b - a) + stree.query(1, 1, n, a, b) + p);\n            stree.update(1, 1, n, b, time[i] - (b - a) - p);\n        }\n        for (int i = 1; i <= q; i++) {\n            System.out.println(time[i]);\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}