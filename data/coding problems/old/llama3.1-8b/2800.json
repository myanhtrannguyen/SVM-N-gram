{
    "solution_id": "llama3.1-8b-2800",
    "problem_id": "p03695",
    "language": "Python",
    "solution": "```python\nn = int(input())\na = list(map(int, input().split()))\n\ncolors = {\n    1: \"gray\", 2: \"gray\", 3: \"gray\", 4: \"gray\", 5: \"gray\", 6: \"gray\",\n    7: \"gray\", 8: \"gray\", 9: \"gray\", 10: \"gray\", 11: \"gray\", 12: \"gray\",\n    13: \"gray\", 14: \"gray\", 15: \"gray\", 16: \"gray\", 17: \"gray\", 18: \"gray\",\n    19: \"gray\", 20: \"gray\", 21: \"gray\", 22: \"gray\", 23: \"gray\", 24: \"gray\",\n    25: \"gray\", 26: \"gray\", 27: \"gray\", 28: \"gray\", 29: \"gray\", 30: \"gray\",\n    31: \"gray\", 32: \"brown\", 33: \"brown\", 34: \"brown\", 35: \"brown\", 36: \"brown\",\n    37: \"brown\", 38: \"brown\", 39: \"brown\", 40: \"brown\", 41: \"brown\", 42: \"brown\",\n    43: \"brown\", 44: \"brown\", 45: \"brown\", 46: \"brown\", 47: \"brown\", 48: \"brown\",\n    49: \"brown\", 50: \"brown\", 51: \"brown\", 52: \"brown\", 53: \"brown\", 54: \"brown\",\n    55: \"brown\", 56: \"brown\", 57: \"brown\", 58: \"brown\", 59: \"brown\", 60: \"brown\",\n    61: \"brown\", 62: \"brown\", 63: \"brown\", 64: \"brown\", 65: \"brown\", 66: \"brown\",\n    67: \"brown\", 68: \"brown\", 69: \"brown\", 70: \"brown\", 71: \"brown\", 72: \"brown\",\n    73: \"brown\", 74: \"brown\", 75: \"brown\", 76: \"brown\", 77: \"brown\", 78: \"brown\",\n    79: \"brown\", 80: \"brown\", 81: \"brown\", 82: \"brown\", 83: \"brown\", 84: \"brown\",\n    85: \"brown\", 86: \"brown\", 87: \"brown\", 88: \"brown\", 89: \"brown\", 90: \"brown\",\n    91: \"brown\", 92: \"brown\", 93: \"brown\", 94: \"brown\", 95: \"brown\", 96: \"brown\",\n    97: \"brown\", 98: \"brown\", 99: \"brown\", 100: \"brown\", 101: \"brown\", 102: \"brown\",\n    103: \"brown\", 104: \"brown\", 105: \"brown\", 106: \"brown\", 107: \"brown\", 108: \"brown\",\n    109: \"brown\", 110: \"brown\", 111: \"brown\", 112: \"brown\", 113: \"brown\", 114: \"brown\",\n    115: \"brown\", 116: \"brown\", 117: \"brown\", 118: \"brown\", 119: \"brown\", 120: \"brown\",\n    121: \"brown\", 122: \"brown\", 123: \"brown\", 124: \"brown\", 125: \"brown\", 126: \"brown\",\n    127: \"brown\", 128: \"brown\", 129: \"brown\", 130: \"brown\", 131: \"brown\", 132: \"brown\",\n    133: \"brown\", 134: \"brown\", 135: \"brown\", 136: \"brown\", 137: \"brown\", 138: \"brown\",\n    139: \"brown\", 140: \"brown\", 141: \"brown\", 142: \"brown\", 143: \"brown\", 144: \"brown\",\n    145: \"brown\", 146: \"brown\", 147: \"brown\", 148: \"brown\", 149: \"brown\", 150: \"brown\",\n    151: \"brown\", 152: \"brown\", 153: \"brown\", 154: \"brown\", 155: \"brown\", 156: \"brown\",\n    157: \"brown\", 158: \"brown\", 159: \"brown\", 160: \"brown\", 161: \"brown\", 162: \"brown\",\n    163: \"brown\", 164: \"brown\", 165: \"brown\", 166: \"brown\", 167: \"brown\", 168: \"brown\",\n    169: \"brown\", 170: \"brown\", 171: \"brown\", 172: \"brown\", 173: \"brown\", 174: \"brown\",\n    175: \"brown\", 176: \"brown\", 177: \"brown\", 178: \"brown\", 179: \"brown\", 180: \"brown\",\n    181: \"brown\", 182: \"brown\", 183: \"brown\", 184: \"brown\", 185: \"brown\", 186: \"brown\",\n    187: \"brown\", 188: \"brown\", 189: \"brown\", 190: \"brown\", 191: \"brown\", 192: \"brown\",\n    193: \"brown\", 194: \"brown\", 195: \"brown\", 196: \"brown\", 197: \"brown\", 198: \"brown\",\n    199: \"brown\", 200: \"brown\", 201: \"brown\", 202: \"brown\", 203: \"brown\", 204: \"brown\",\n    205: \"brown\", 206: \"brown\", 207: \"brown\", 208: \"brown\", 209: \"brown\", 210: \"green\",\n    211: \"green\", 212: \"green\", 213: \"green\", 214: \"green\", 215: \"green\", 216: \"green\",\n    217: \"green\", 218: \"green\", 219: \"green\", 220: \"green\", 221: \"green\", 222: \"green\",\n    223: \"green\", 224: \"green\", 225: \"green\", 226: \"green\", 227: \"green\", 228: \"green\",\n    229: \"green\", 230: \"green\", 231: \"green\", 232: \"green\", 233: \"green\", 234: \"green\",\n    235: \"green\", 236: \"green\", 237: \"green\", 238: \"green\", 239: \"green\", 240: \"green\",\n    241: \"green\", 242: \"green\", 243: \"green\", 244: \"green\", 245: \"green\", 246: \"green\",\n    247: \"green\", 248: \"green\", 249: \"green\", 250: \"green\", 251: \"green\", 252: \"green\",\n    253: \"green\", 254: \"green\", 255: \"green\", 256: \"green\", 257: \"green\", 258: \"green\",\n    259: \"green\", 260: \"green\", 261: \"green\", 262: \"green\", 263: \"green\", 264: \"green\",\n    265: \"green\", 266: \"green\", 267: \"green\", 268: \"green\", 269: \"green\", 270: \"green\",\n    271: \"green\", 272: \"green\", 273: \"green\", 274: \"green\", 275: \"green\", 276: \"green\",\n    277: \"green\", 278: \"green\", 279: \"green\", 280: \"green\", 281: \"green\", 282: \"green\",\n    283: \"green\", 284: \"green\", 285: \"green\", 286: \"green\", 287: \"green\", 288: \"green\",\n    289: \"green\", 290: \"green\", 291: \"green\", 292: \"green\", 293: \"green\", 294: \"green\",\n    295: \"green\", 296: \"green\", 297: \"green\", 298: \"green\", 299: \"green\", 300: \"green\",\n    301: \"green\", 302: \"green\", 303: \"green\", 304: \"green\", 305: \"green\", 306: \"green\",\n    307: \"green\", 308: \"green\", 309: \"green\", 310: \"green\", 311: \"green\", 312: \"green\",\n    313: \"green\", 314: \"green\", 315: \"green\", 316: \"green\", 317: \"green\", 318: \"green\",\n    319: \"green\", 320: \"green\", 321: \"green\", 322: \"green\", 323: \"green\", 324: \"green\",\n    325: \"green\", 326: \"green\", 327: \"green\", 328: \"green\", 329: \"",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}