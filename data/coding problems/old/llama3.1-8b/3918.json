{
    "solution_id": "llama3.1-8b-3918",
    "problem_id": "p02300",
    "language": "Java",
    "solution": "```java\nimport java.util.Arrays;\nimport java.util.Comparator;\n\npublic class Main {\n    static class Point {\n        int x, y;\n\n        public Point(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public static void main(String[] args) {\n        int n = readInt();\n        Point[] points = new Point[n];\n        for (int i = 0; i < n; i++) {\n            points[i] = new Point(readInt(), readInt());\n        }\n\n        Point[] hull = convexHull(points);\n        System.out.println(hull.length);\n        for (Point p : hull) {\n            System.out.println(p.x + \" \" + p.y);\n        }\n    }\n\n    static int readInt() {\n        try {\n            return Integer.parseInt(readLine());\n        } catch (NumberFormatException e) {\n            return 0;\n        }\n    }\n\n    static String readLine() {\n        try {\n            return java.util.Scanner.class.newInstance().nextLine();\n        } catch (Exception e) {\n            return \"\";\n        }\n    }\n\n    static Point[] convexHull(Point[] points) {\n        int n = points.length;\n        if (n < 3) return points;\n\n        Point[] hull = new Point[n];\n        int top = 0;\n\n        // Find the leftmost point\n        int min_x = Integer.MAX_VALUE;\n        int min_y = Integer.MAX_VALUE;\n        int min_idx = -1;\n        for (int i = 0; i < n; i++) {\n            if (points[i].x < min_x || (points[i].x == min_x && points[i].y < min_y)) {\n                min_x = points[i].x;\n                min_y = points[i].y;\n                min_idx = i;\n            }\n        }\n\n        // Sort points by polar angle with the leftmost point\n        Arrays.sort(points, new Comparator<Point>() {\n            @Override\n            public int compare(Point p1, Point p2) {\n                int dx1 = p1.x - min_x;\n                int dy1 = p1.y - min_y;\n                int dx2 = p2.x - min_x;\n                int dy2 = p2.y - min_y;\n                if (dx1 * dy2 - dx2 * dy1 != 0) {\n                    return dx1 * dy2 - dx2 * dy1 > 0 ? 1 : -1;\n                } else {\n                    return dx1 - dx2;\n                }\n            }\n        });\n\n        // Build the convex hull\n        hull[top++] = points[0];\n        for (int i = 1; i < n; i++) {\n            while (top >= 2 && crossProduct(hull[top - 2], hull[top - 1], points[i]) <= 0) {\n                top--;\n            }\n            hull[top++] = points[i];\n        }\n\n        // Remove duplicate points\n        int k = 0;\n        for (int i = 0; i < top; i++) {\n            if (i == 0 || hull[i].x != hull[i - 1].x || hull[i].y != hull[i - 1].y) {\n                hull[k++] = hull[i];\n            }\n        }\n        hull = Arrays.copyOf(hull, k);\n\n        return hull;\n    }\n\n    static int crossProduct(Point p1, Point p2, Point p3) {\n        return (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}