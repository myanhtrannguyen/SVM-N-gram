{
    "solution_id": "llama3.1-8b-3959",
    "problem_id": "p02310",
    "language": "Python",
    "solution": "```python\nimport math\n\ndef calculate_tangent_points(px, py, cx, cy, r):\n    # Calculate the distance between the point and the center of the circle\n    distance = math.sqrt((px - cx) ** 2 + (py - cy) ** 2)\n\n    # Calculate the angle between the point and the center of the circle\n    angle = math.acos((distance ** 2 + r ** 2 - (cx - px) ** 2 - (cy - py) ** 2) / (2 * distance * r))\n\n    # Calculate the tangent points\n    tangent_x1 = cx + (cx - px) * math.cos(angle) - (cy - py) * math.sin(angle)\n    tangent_y1 = cy + (cx - px) * math.sin(angle) + (cy - py) * math.cos(angle)\n    tangent_x2 = cx - (cx - px) * math.cos(angle) + (cy - py) * math.sin(angle)\n    tangent_y2 = cy - (cx - px) * math.sin(angle) - (cy - py) * math.cos(angle)\n\n    # Return the tangent points with smaller x and y first\n    if tangent_x1 < tangent_x2:\n        if tangent_y1 < tangent_y2:\n            return [tangent_x1, tangent_y1], [tangent_x2, tangent_y2]\n        else:\n            return [tangent_x2, tangent_y2], [tangent_x1, tangent_y1]\n    else:\n        if tangent_y1 < tangent_y2:\n            return [tangent_x2, tangent_y2], [tangent_x1, tangent_y1]\n        else:\n            return [tangent_x1, tangent_y1], [tangent_x2, tangent_y2]\n\n# Read the input\npx, py = map(float, input().split())\ncx, cy, r = map(float, input().split())\n\n# Calculate and print the tangent points\ntangent_points1, tangent_points2 = calculate_tangent_points(px, py, cx, cy, r)\nprint(f\"{tangent_points1[0]:.7f} {tangent_points1[1]:.7f}\")\nprint(f\"{tangent_points2[0]:.7f} {tangent_points2[1]:.7f}\")\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}