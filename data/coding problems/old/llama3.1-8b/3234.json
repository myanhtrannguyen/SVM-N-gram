{
    "solution_id": "llama3.1-8b-3234",
    "problem_id": "p01795",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int N = (int) 1e6 + 5;\n    static final int M = 18;\n    static final int mod = (int) 1e9 + 9;\n    static int n, m;\n    static int[] a = new int[N];\n    static int[] b = new int[N];\n    static int[] c = new int[N];\n    static int[] fa = new int[N];\n    static int[] sz = new int[N];\n    static int[] id = new int[N];\n    static int[] vis = new int[N];\n    static int[] ans = new int[1 << M];\n    static int[] f = new int[1 << M];\n    static int[] g = new int[1 << M];\n\n    static int find(int x) {\n        return fa[x] == x ? x : (fa[x] = find(fa[x]));\n    }\n\n    static void merge(int x, int y) {\n        x = find(x);\n        y = find(y);\n        if (x != y) {\n            fa[x] = y;\n            sz[y] += sz[x];\n        }\n    }\n\n    static void dfs(int x, int y) {\n        if (vis[x] == 1) {\n            g[y] = 1;\n            return;\n        }\n        vis[x] = 1;\n        for (int i = 0; i < m; i++) {\n            if (((1 << i) & y) != 0) {\n                if (c[i] == 0) {\n                    merge(a[i], b[i]);\n                } else {\n                    merge(a[i], b[i]);\n                    merge(b[i], a[i]);\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            if (((1 << i) & y) != 0) {\n                if (c[i] == 0) {\n                    if (find(a[i]) == find(b[i])) {\n                        g[y] = 0;\n                        return;\n                    }\n                } else {\n                    if (find(a[i]) == find(b[i])) {\n                        g[y] = 0;\n                        return;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            if (((1 << i) & y) != 0) {\n                if (c[i] == 0) {\n                    dfs(a[i], y ^ (1 << i));\n                } else {\n                    dfs(a[i], y);\n                    dfs(b[i], y);\n                }\n            }\n        }\n        g[y] = 1;\n    }\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        n = sc.nextInt();\n        m = sc.nextInt();\n        for (int i = 0; i < m; i++) {\n            a[i] = sc.nextInt();\n            b[i] = sc.nextInt();\n            c[i] = sc.nextInt();\n            fa[a[i]] = a[i];\n            fa[b[i]] = b[i];\n            sz[a[i]] = 1;\n            sz[b[i]] = 1;\n            id[a[i]] = i;\n            id[b[i]] = i;\n        }\n        for (int i = 1; i <= 3 * n; i++) {\n            if (fa[i] == i) {\n                ans[0] = (ans[0] + sz[i]) % mod;\n            }\n        }\n        for (int i = 1; i < (1 << m); i++) {\n            f[i] = (f[i >> 1] * 2 + g[i]) % mod;\n            if ((i & 1) == 0) {\n                f[i] = (f[i] + f[i - 1]) % mod;\n            }\n            ans[i] = (ans[i >> 1] * f[i]) % mod;\n        }\n        pw.println(ans[(1 << m) - 1]);\n        pw.close();\n    }\n\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}