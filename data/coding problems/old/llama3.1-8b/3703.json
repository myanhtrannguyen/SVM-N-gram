{
    "solution_id": "llama3.1-8b-3703",
    "problem_id": "p02246",
    "language": "Python",
    "solution": "```python\nfrom collections import deque\n\ndef is_solvable(puzzle):\n    inversions = 0\n    for i in range(4):\n        for j in range(i + 1, 4):\n            if puzzle[i * 4 + j] and puzzle[i * 4 + j] < puzzle[j * 4 + j]:\n                inversions += 1\n    return inversions % 2 == 0\n\ndef is_valid(puzzle, x, y):\n    return 0 <= x < 4 and 0 <= y < 4\n\ndef get_neighbors(puzzle):\n    neighbors = []\n    x, y = -1, -1\n    for i in range(4):\n        for j in range(4):\n            if puzzle[i * 4 + j] == 0:\n                x, y = i, j\n                break\n        if x != -1:\n            break\n    for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n        nx, ny = x + dx, y + dy\n        if is_valid(puzzle, nx, ny):\n            neighbor = [puzzle[:y * 4 + (nx * 4 + ny - x * 4 - y)] + [puzzle[y * 4 + (nx * 4 + ny - x * 4 - y)]]\n                        + puzzle[y * 4 + (nx * 4 + ny - x * 4 - y) + 1:] for y in range(4)]\n            neighbors.append(neighbor)\n    return neighbors\n\ndef bfs(puzzle):\n    queue = deque([(puzzle, 0)])\n    visited = set()\n    while queue:\n        state, steps = queue.popleft()\n        if state == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0]:\n            return steps\n        if tuple(map(tuple, state)) in visited:\n            continue\n        visited.add(tuple(map(tuple, state)))\n        for neighbor in get_neighbors(state):\n            queue.append((neighbor, steps + 1))\n    return -1\n\ndef main():\n    puzzle = []\n    for _ in range(4):\n        row = list(map(int, input().split()))\n        puzzle.append(row)\n    if is_solvable(puzzle):\n        print(bfs(puzzle))\n    else:\n        print(-1)\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}