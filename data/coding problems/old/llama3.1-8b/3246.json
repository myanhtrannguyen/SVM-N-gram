{
    "solution_id": "llama3.1-8b-3246",
    "problem_id": "p01798",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Point {\n        int x, y;\n        public Point(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int L = Integer.parseInt(st.nextToken());\n        int M = Integer.parseInt(st.nextToken());\n        int N = Integer.parseInt(st.nextToken());\n\n        List<Point> A = new ArrayList<>();\n        List<Point> B = new ArrayList<>();\n        List<Point> C = new ArrayList<>();\n\n        for (int i = 0; i < L; i++) {\n            st = new StringTokenizer(br.readLine());\n            A.add(new Point(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));\n        }\n\n        for (int i = 0; i < M; i++) {\n            st = new StringTokenizer(br.readLine());\n            B.add(new Point(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));\n        }\n\n        for (int i = 0; i < N; i++) {\n            st = new StringTokenizer(br.readLine());\n            C.add(new Point(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())));\n        }\n\n        Map<String, List<Integer>> map = new HashMap<>();\n\n        for (int i = 0; i < L; i++) {\n            for (int j = 0; j < M; j++) {\n                int dx = A.get(i).x - B.get(j).x;\n                int dy = A.get(i).y - B.get(j).y;\n                String key = dx + \",\" + dy;\n                map.computeIfAbsent(key, k -> new ArrayList<>()).add(i);\n                map.computeIfAbsent(key, k -> new ArrayList<>()).add(j);\n            }\n        }\n\n        int ans = 0;\n        for (Point p : C) {\n            for (Map.Entry<String, List<Integer>> entry : map.entrySet()) {\n                String[] parts = entry.getKey().split(\",\");\n                int dx = p.x - Integer.parseInt(parts[0]);\n                int dy = p.y - Integer.parseInt(parts[1]);\n                if (dx % 2 == 0 && dy % 2 == 0) {\n                    int count = entry.getValue().size();\n                    ans += count * (count - 1) / 2;\n                }\n            }\n        }\n\n        System.out.println(ans);\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}