{
    "solution_id": "llama3.1-8b-506",
    "problem_id": "p00640",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Browser {\n        int[] buffer;\n        int pointer;\n        int size;\n\n        public Browser(int n) {\n            buffer = new int[n];\n            pointer = 0;\n            size = 0;\n        }\n\n        public void addPage(int page) {\n            if (size < buffer.length) {\n                buffer[size] = page;\n                size++;\n                pointer = size - 1;\n            }\n        }\n\n        public void removePages(int index) {\n            if (index < size) {\n                for (int i = index; i < size - 1; i++) {\n                    buffer[i] = buffer[i + 1];\n                }\n                size--;\n                if (size > 0) {\n                    pointer = size - 1;\n                }\n            }\n        }\n\n        public int getCurrentPage() {\n            if (size > 0) {\n                return buffer[pointer];\n            } else {\n                return -1;\n            }\n        }\n\n        public void movePointerLeft() {\n            if (size > 0) {\n                pointer--;\n            }\n        }\n\n        public void movePointerRight() {\n            if (size > 0) {\n                pointer++;\n            }\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        while (t-- > 0) {\n            StringTokenizer st = new StringTokenizer(br.readLine());\n            int n = Integer.parseInt(st.nextToken());\n            int w = Integer.parseInt(st.nextToken());\n            int h = Integer.parseInt(st.nextToken());\n            Browser browser = new Browser(n);\n            browser.addPage(0);\n            Map<Integer, String> pages = new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                st = new StringTokenizer(br.readLine());\n                String name = st.nextToken();\n                int b = Integer.parseInt(st.nextToken());\n                pages.put(i, name);\n                for (int j = 0; j < b; j++) {\n                    st = new StringTokenizer(br.readLine());\n                    int x1 = Integer.parseInt(st.nextToken());\n                    int y1 = Integer.parseInt(st.nextToken());\n                    int x2 = Integer.parseInt(st.nextToken());\n                    int y2 = Integer.parseInt(st.nextToken());\n                    int page = Integer.parseInt(st.nextToken());\n                    pages.put(page, name);\n                }\n            }\n            int m = Integer.parseInt(br.readLine());\n            for (int i = 0; i < m; i++) {\n                String op = br.readLine();\n                if (op.equals(\"show\")) {\n                    System.out.println(pages.get(browser.getCurrentPage()));\n                } else if (op.equals(\"back\")) {\n                    browser.movePointerLeft();\n                    if (browser.getCurrentPage() == -1) {\n                        browser.movePointerRight();\n                    }\n                } else if (op.equals(\"forward\")) {\n                    browser.movePointerRight();\n                    if (browser.getCurrentPage() == -1) {\n                        browser.movePointerLeft();\n                    }\n                } else {\n                    st = new StringTokenizer(op);\n                    int x = Integer.parseInt(st.nextToken());\n                    int y = Integer.parseInt(st.nextToken());\n                    for (int j = 0; j < n; j++) {\n                        if (pages.containsKey(j)) {\n                            int[] button = getButton(pages.get(j), w, h);\n                            if (button[0] <= x && x <= button[1] && button[2] <= y && y <= button[3]) {\n                                browser.removePages(j);\n                                browser.addPage(j);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    static int[] getButton(String name, int w, int h) {\n        int[] button = new int[4];\n        for (int i = 0; i < name.length(); i++) {\n            if (name.charAt(i) == '1') {\n                button[0] = i % w;\n            } else if (name.charAt(i) == '2') {\n                button[1] = i % w;\n            } else if (name.charAt(i) == '3') {\n                button[2] = i / w;\n            } else if (name.charAt(i) == '4') {\n                button[3] = i / w;\n            }\n        }\n        return button;\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}