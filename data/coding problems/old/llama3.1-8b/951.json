{
    "solution_id": "llama3.1-8b-951",
    "problem_id": "p00774",
    "language": "Python",
    "solution": "```python\ndef chain_disappearance(board):\n    # Function to check if a group of stones can disappear\n    def can_disappear(row, col, digit):\n        if col < 4 and board[row][col] == board[row][col+1] == board[row][col+2] == digit:\n            return True\n        if col > 0 and board[row][col] == board[row][col-1] == board[row][col-2] == digit:\n            return True\n        return False\n\n    # Function to drop stones down\n    def drop_stones(row):\n        for col in range(5):\n            if board[row][col] != 0:\n                for r in range(row-1, -1, -1):\n                    if board[r][col] == 0:\n                        board[r][col] = board[r+1][col]\n                        board[r+1][col] = 0\n\n    # Main function to calculate the score\n    score = 0\n    while True:\n        disappeared = False\n        for row in range(len(board)):\n            for col in range(5):\n                if board[row][col] != 0:\n                    if can_disappear(row, col, board[row][col]):\n                        score += board[row][col]\n                        disappeared = True\n                        for r in range(row-1, -1, -1):\n                            if board[r][col] != 0:\n                                board[r][col] = board[r+1][col]\n                                board[r+1][col] = 0\n        if not disappeared:\n            break\n        drop_stones(len(board)-1)\n        for row in range(len(board)-2, -1, -1):\n            drop_stones(row)\n    return score\n\n# Read input\nboards = []\nwhile True:\n    try:\n        H = int(input())\n        board = []\n        for _ in range(H):\n            board.append([int(x) for x in input().split()])\n        boards.append(board)\n    except ValueError:\n        break\n\n# Calculate and print scores\nfor board in boards:\n    print(chain_disappearance(board))\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}