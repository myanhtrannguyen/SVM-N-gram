{
    "solution_id": "llama3.1-8b-2786",
    "problem_id": "p03692",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 15;\nconst int M = N * (N - 1) / 2 + 1;\nconst int MOD = 1e9 + 7;\n\nint n, m;\nint dp[N][1 << N];\nint f[N][1 << N];\nint g[N][1 << N];\nint h[N][1 << N];\n\nvoid add(int& x, int y) {\n    x = (x + y) % MOD;\n}\n\nint main() {\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++) {\n        int x, y;\n        cin >> x >> y;\n        x--, y--;\n        f[x][1 << y] = 1;\n    }\n    for (int i = 0; i < n; i++) {\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][S], h[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(f[i][S], f[j][S ^ (1 << j)]);\n                    }\n                }\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(g[i][S], g[j][S ^ (1 << j)]);\n                    }\n                }\n            }\n        }\n        for (int S = 0; S < (1 << n); S++) {\n            if (S >> i & 1) {\n                for (int j = 0; j < n; j++) {\n                    if (j != i && (S >> j & 1)) {\n                        add(h[i][",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}