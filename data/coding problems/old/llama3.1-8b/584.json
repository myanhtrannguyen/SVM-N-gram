{
    "solution_id": "llama3.1-8b-584",
    "problem_id": "p00683",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_TEXT_LENGTH 1000\n#define MAX_COMMANDS 1000\n#define MAX_WORD_LENGTH 100\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n\n    for (int i = 0; i < t; i++) {\n        char text[MAX_TEXT_LENGTH + 1];\n        scanf(\"%s\", text);\n\n        int m;\n        scanf(\"%d\", &m);\n\n        int cursor = 0;\n        int text_length = strlen(text);\n\n        for (int j = 0; j < m; j++) {\n            char command[20];\n            scanf(\"%s\", command);\n\n            if (strcmp(command, \"forward\") == 0) {\n                if (cursor < text_length - 1) {\n                    cursor++;\n                }\n            } else if (strcmp(command, \"backward\") == 0) {\n                if (cursor > 0) {\n                    cursor--;\n                }\n            } else if (strcmp(command, \"forward word\") == 0) {\n                int word_start = cursor;\n                while (word_start < text_length && text[word_start] != ' ' && text[word_start] != '\\0') {\n                    word_start++;\n                }\n\n                if (word_start < text_length) {\n                    cursor = word_start + 1;\n                } else {\n                    cursor = text_length;\n                }\n            } else if (strcmp(command, \"backward word\") == 0) {\n                int word_end = cursor;\n                while (word_end > 0 && text[word_end - 1] != ' ' && text[word_end - 1] != '\\0') {\n                    word_end--;\n                }\n\n                if (word_end > 0) {\n                    cursor = word_end - 1;\n                } else {\n                    cursor = 0;\n                }\n            } else if (strcmp(command, \"insert\") == 0) {\n                char insert_text[MAX_WORD_LENGTH + 1];\n                scanf(\"%s\", insert_text);\n                int insert_length = strlen(insert_text);\n\n                for (int k = text_length - 1; k >= cursor; k--) {\n                    text[k + insert_length] = text[k];\n                }\n\n                for (int k = 0; k < insert_length; k++) {\n                    text[cursor + k] = insert_text[k];\n                }\n\n                cursor += insert_length;\n                text_length += insert_length;\n            } else if (strcmp(command, \"delete char\") == 0) {\n                if (cursor < text_length) {\n                    for (int k = cursor; k < text_length - 1; k++) {\n                        text[k] = text[k + 1];\n                    }\n                    text_length--;\n                }\n            } else if (strcmp(command, \"delete word\") == 0) {\n                int word_start = cursor;\n                while (word_start < text_length && text[word_start] != ' ' && text[word_start] != '\\0') {\n                    word_start++;\n                }\n\n                if (word_start < text_length) {\n                    for (int k = word_start; k < text_length; k++) {\n                        text[k - word_start + cursor] = text[k];\n                    }\n                    text_length -= word_start - cursor;\n                    cursor = word_start - 1;\n                }\n            }\n        }\n\n        printf(\"%s^\", text);\n        for (int k = text_length - 1; k >= cursor; k--) {\n            printf(\"%c\", text[k]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}