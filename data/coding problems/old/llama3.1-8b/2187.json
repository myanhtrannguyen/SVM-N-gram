{
    "solution_id": "llama3.1-8b-2187",
    "problem_id": "p03542",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static class Edge implements Comparable<Edge> {\n        int u, v, w;\n\n        public Edge(int u, int v, int w) {\n            this.u = u;\n            this.v = v;\n            this.w = w;\n        }\n\n        @Override\n        public int compareTo(Edge o) {\n            return Integer.compare(w, o.w);\n        }\n    }\n\n    static class DSU {\n        int[] fa;\n\n        public DSU(int n) {\n            fa = new int[n + 1];\n            for (int i = 1; i <= n; i++) fa[i] = i;\n        }\n\n        int find(int x) {\n            if (fa[x] != x) fa[x] = find(fa[x]);\n            return fa[x];\n        }\n\n        void merge(int x, int y) {\n            x = find(x);\n            y = find(y);\n            fa[x] = y;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = Integer.parseInt(in.readLine());\n        int[] x = new int[n + 1];\n        StringTokenizer st = new StringTokenizer(in.readLine());\n        for (int i = 1; i <= n; i++) x[i] = Integer.parseInt(st.nextToken());\n\n        Edge[] e = new Edge[n];\n        for (int i = 1; i <= n - 1; i++) {\n            st = new StringTokenizer(in.readLine());\n            int u = Integer.parseInt(st.nextToken());\n            int v = Integer.parseInt(st.nextToken());\n            int w = Integer.parseInt(st.nextToken());\n            e[i] = new Edge(u, v, w);\n        }\n\n        Arrays.sort(e, 1, n);\n\n        DSU dsu = new DSU(n);\n        long ans = 0;\n        for (int i = 1; i <= n - 1; i++) {\n            int u = e[i].u;\n            int v = e[i].v;\n            int w = e[i].w;\n            ans += w + x[u] + x[v];\n            dsu.merge(u, v);\n        }\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                if (dsu.find(i) != dsu.find(j)) {\n                    ans += x[i] + x[j];\n                }\n            }\n        }\n\n        out.println(ans);\n\n        out.close();\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}