{
    "solution_id": "llama3.1-8b-1223",
    "problem_id": "p00842",
    "language": "Python",
    "solution": "```python\nimport sys\nimport math\n\ndef find_root(matrix):\n    n = len(matrix)\n    max_val = 0\n    root = 0\n    for i in range(1, n):\n        if max_val < sum(matrix[i]):\n            max_val = sum(matrix[i])\n            root = i\n    return root\n\ndef find_parent(matrix, root):\n    n = len(matrix)\n    parent = [0] * n\n    for i in range(n):\n        if i != root:\n            parent[i] = matrix[i].index(min(matrix[i]))\n    return parent\n\ndef find_children(matrix, parent):\n    n = len(matrix)\n    children = [[] for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            if i != j and matrix[i][j] == 1:\n                children[parent[i]].append(j)\n    return children\n\ndef dfs(matrix, parent, children, visited, degree):\n    n = len(matrix)\n    for i in range(n):\n        if i not in visited:\n            visited.append(i)\n            degree.append(len(children[i]))\n            for child in children[i]:\n                if child not in visited:\n                    visited.append(child)\n                    degree.append(len(children[child]))\n\ndef main():\n    lines = sys.stdin.readlines()\n    i = 0\n    while i < len(lines):\n        n = int(lines[i].strip())\n        matrix = []\n        for j in range(n):\n            matrix.append([int(x) for x in lines[i + j + 1].strip().split()])\n        i += n + 1\n        if matrix:\n            root = find_root(matrix)\n            parent = find_parent(matrix, root)\n            children = find_children(matrix, parent)\n            visited = [root]\n            degree = []\n            dfs(matrix, parent, children, visited, degree)\n            degree.sort()\n            print(' '.join(map(str, degree)))\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}