{
    "solution_id": "llama3.1-8b-2759",
    "problem_id": "p03685",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static class Point implements Comparable<Point> {\n        int x, y, id;\n\n        public Point(int x, int y, int id) {\n            this.x = x;\n            this.y = y;\n            this.id = id;\n        }\n\n        @Override\n        public int compareTo(Point o) {\n            if (x == o.x) {\n                return Integer.compare(y, o.y);\n            }\n            return Integer.compare(x, o.x);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int R = Integer.parseInt(st.nextToken());\n        int C = Integer.parseInt(st.nextToken());\n        int N = Integer.parseInt(st.nextToken());\n        Point[] points = new Point[2 * N];\n        for (int i = 0; i < N; i++) {\n            st = new StringTokenizer(br.readLine());\n            int x1 = Integer.parseInt(st.nextToken());\n            int y1 = Integer.parseInt(st.nextToken());\n            int x2 = Integer.parseInt(st.nextToken());\n            int y2 = Integer.parseInt(st.nextToken());\n            points[2 * i] = new Point(x1, y1, i);\n            points[2 * i + 1] = new Point(x2, y2, i);\n        }\n        Arrays.sort(points);\n        int[] parent = new int[2 * N];\n        for (int i = 0; i < 2 * N; i++) {\n            parent[i] = i;\n        }\n        for (int i = 0; i < 2 * N - 1; i++) {\n            int x1 = points[i].x;\n            int y1 = points[i].y;\n            int x2 = points[i + 1].x;\n            int y2 = points[i + 1].y;\n            int id1 = points[i].id;\n            int id2 = points[i + 1].id;\n            if (x1 == x2 && y1 == y2) {\n                if (find(parent, id1) != find(parent, id2)) {\n                    parent[find(parent, id2)] = find(parent, id1);\n                }\n            } else if (x1 == x2) {\n                if (find(parent, id1) != find(parent, id2)) {\n                    parent[find(parent, id2)] = find(parent, id1);\n                }\n            } else if (y1 == y2) {\n                if (find(parent, id1) != find(parent, id2)) {\n                    parent[find(parent, id2)] = find(parent, id1);\n                }\n            } else {\n                if (find(parent, id1) != find(parent, id2)) {\n                    parent[find(parent, id2)] = find(parent, id1);\n                }\n            }\n        }\n        boolean ok = true;\n        for (int i = 0; i < N; i++) {\n            if (find(parent, 2 * i) == find(parent, 2 * i + 1)) {\n                ok = false;\n                break;\n            }\n        }\n        System.out.println(ok ? \"YES\" : \"NO\");\n    }\n\n    static int find(int[] parent, int i) {\n        if (parent[i] != i) {\n            parent[i] = find(parent, parent[i]);\n        }\n        return parent[i];\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}