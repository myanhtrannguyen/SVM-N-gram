{
    "solution_id": "llama3.1-8b-2047",
    "problem_id": "p03384",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static int n;\n    static int[] v, w;\n    static int[] p;\n    static List<Integer>[] g;\n    static boolean[] vis;\n    static int[] dep;\n    static int[] fa;\n    static int[] siz;\n    static int[] top;\n    static int[] dfn;\n    static int[] low;\n    static int[] stk;\n    static int idx;\n    static int[] head;\n    static int[] to;\n    static int[] nxt;\n    static int cnt;\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        n = sc.nextInt();\n        v = new int[n + 1];\n        w = new int[n + 1];\n        p = new int[n + 1];\n        g = new List[n + 1];\n        for (int i = 1; i <= n; i++) {\n            g[i] = new ArrayList<>();\n        }\n        vis = new boolean[n + 1];\n        dep = new int[n + 1];\n        fa = new int[n + 1];\n        siz = new int[n + 1];\n        top = new int[n + 1];\n        dfn = new int[n + 1];\n        low = new int[n + 1];\n        stk = new int[n + 1];\n        head = new int[n + 1];\n        to = new int[n * 2 + 1];\n        nxt = new int[n * 2 + 1];\n        cnt = 0;\n        for (int i = 1; i <= n; i++) {\n            v[i] = sc.nextInt();\n            w[i] = sc.nextInt();\n            g[v[i]].add(w[i]);\n            g[w[i]].add(v[i]);\n        }\n        dfs(1, 0);\n        for (int i = 1; i <= n; i++) {\n            if (vis[i]) {\n                dfs2(i, 0);\n                break;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            if (p[i] == 0) {\n                p[i] = i;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            if (p[i] == 0) {\n                dfs3(i, 0);\n                break;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            if (p[i] == 0) {\n                pw.println(-1);\n                pw.close();\n                return;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            p[i] = Math.min(p[i], i);\n        }\n        for (int i = 1; i <= n; i++) {\n            pw.print(p[i] + \" \");\n        }\n        pw.close();\n    }\n\n    static void add(int u, int v) {\n        to[++cnt] = v;\n        nxt[cnt] = head[u];\n        head[u] = cnt;\n    }\n\n    static void dfs(int u, int fa) {\n        vis[u] = true;\n        dep[u] = dep[fa] + 1;\n        fa[u] = fa;\n        siz[u] = 1;\n        for (int v : g[u]) {\n            if (v == fa) continue;\n            dfs(v, u);\n            siz[u] += siz[v];\n            if (siz[v] > siz[g[u].get(0)]) {\n                g[u].remove(0);\n                g[u].add(v);\n            }\n        }\n    }\n\n    static void dfs2(int u, int fa) {\n        vis[u] = true;\n        dfn[u] = low[u] = ++idx;\n        stk[++idx] = u;\n        for (int v : g[u]) {\n            if (v == fa) continue;\n            if (vis[v]) {\n                low[u] = Math.min(low[u], dfn[v]);\n            } else {\n                dfs2(v, u);\n                low[u] = Math.min(low[u], low[v]);\n                if (low[v] >= dfn[u]) {\n                    int x = 0;\n                    do {\n                        x = stk[idx--];\n                        p[x] = u;\n                    } while (x != v);\n                    add(u, v);\n                    add(v, u);\n                }\n            }\n        }\n        if (u == fa) {\n            for (int i = 1; i <= n; i++) {\n                if (!vis[i]) {\n                    dfs2(i, 0);\n                    break;\n                }\n            }\n        }\n    }\n\n    static void dfs3(int u, int fa) {\n        vis[u] = true;\n        for (int v : g[u]) {\n            if (v == fa) continue;\n            dfs3(v, u);\n        }\n    }\n}\n\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}