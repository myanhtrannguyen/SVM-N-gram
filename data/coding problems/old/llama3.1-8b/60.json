{
    "solution_id": "llama3.1-8b-60",
    "problem_id": "p00015",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_DIGITS 100\n\nchar* add_strings(char* num1, char* num2) {\n    int len1 = strlen(num1);\n    int len2 = strlen(num2);\n    int max_len = (len1 > len2) ? len1 : len2;\n    char* result = (char*)malloc((max_len + 2) * sizeof(char));\n    result[max_len + 1] = '\\0';\n\n    int carry = 0;\n    for (int i = 0; i < max_len; i++) {\n        int digit1 = (i < len1) ? num1[len1 - 1 - i] - '0' : 0;\n        int digit2 = (i < len2) ? num2[len2 - 1 - i] - '0' : 0;\n        int sum = digit1 + digit2 + carry;\n        result[max_len - i] = (sum % 10) + '0';\n        carry = sum / 10;\n    }\n\n    if (carry > 0) {\n        result[0] = carry + '0';\n        return result;\n    }\n\n    int i = 0;\n    while (i < max_len && result[i] == '0') {\n        i++;\n    }\n\n    if (i == max_len) {\n        free(result);\n        return (char*)\"0\";\n    }\n\n    char* new_result = (char*)malloc((max_len - i + 1) * sizeof(char));\n    strcpy(new_result, result + i);\n    free(result);\n    return new_result;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    for (int i = 0; i < n; i++) {\n        char num1[MAX_DIGITS + 1];\n        char num2[MAX_DIGITS + 1];\n        scanf(\"%s\", num1);\n        scanf(\"%s\", num2);\n\n        char* sum = add_strings(num1, num2);\n        long long int sum_int = atoll(sum);\n\n        if (sum_int > 8100000000000000000LL) {\n            printf(\"overflow\\n\");\n        } else {\n            printf(\"%lld\\n\", sum_int);\n        }\n\n        free(sum);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}