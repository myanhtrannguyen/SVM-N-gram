{
    "solution_id": "llama3.1-8b-781",
    "problem_id": "p00732",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <cmath>\n#include <vector>\n\nusing namespace std;\n\nstruct Point {\n    double x, y;\n};\n\ndouble crossProduct(Point p1, Point p2, Point p3) {\n    return (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x);\n}\n\ndouble distance(Point p1, Point p2) {\n    return sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y));\n}\n\ndouble angle(Point p1, Point p2, Point p3) {\n    return atan2(crossProduct(p1, p2, p3), distance(p1, p2) * distance(p2, p3));\n}\n\ndouble rotate(double angle, double x, double y) {\n    double new_x = x * cos(angle) - y * sin(angle);\n    double new_y = x * sin(angle) + y * cos(angle);\n    return new_x;\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        double L, R;\n        int N;\n        cin >> L >> R >> N;\n        Point p[N];\n        for (int i = 0; i < N; i++) {\n            cin >> p[i].x >> p[i].y;\n        }\n        double angle = 2 * 3.14159265359 * R;\n        double x = 0, y = L;\n        for (int i = 0; i < N; i++) {\n            double new_angle = angle + angle(p[0], p[i], p[(i + 1) % N]);\n            if (new_angle < angle(p[0], p[i], p[(i + 1) % N])) {\n                break;\n            }\n            angle = new_angle;\n            x = rotate(angle, 0, L);\n            y = 0;\n        }\n        printf(\"%.10lf %.10lf\\n\", x, y);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}