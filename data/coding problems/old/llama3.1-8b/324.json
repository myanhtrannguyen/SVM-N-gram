{
    "solution_id": "llama3.1-8b-324",
    "problem_id": "p00392",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n// Function to find prime factors of a number\nint* find_prime_factors(int n, int* count) {\n    int* factors = (int*)malloc(n * sizeof(int));\n    *count = 0;\n    for (int i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors[(*count)++] = i;\n            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors[(*count)++] = n;\n    }\n    return factors;\n}\n\n// Function to check if two numbers have a common prime factor\nint has_common_prime_factor(int a, int b) {\n    int count_a = 0, count_b = 0;\n    int* factors_a = find_prime_factors(a, &count_a);\n    int* factors_b = find_prime_factors(b, &count_b);\n    for (int i = 0; i < count_a; i++) {\n        for (int j = 0; j < count_b; j++) {\n            if (factors_a[i] == factors_b[j]) {\n                free(factors_a);\n                free(factors_b);\n                return 1;\n            }\n        }\n    }\n    free(factors_a);\n    free(factors_b);\n    return 0;\n}\n\n// Function to check if a sequence is coprime-sortable\nint is_coprime_sortable(int* arr, int n) {\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] > arr[j] && has_common_prime_factor(arr[i], arr[j])) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int* arr = (int*)malloc(n * sizeof(int));\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n    printf(\"%d\\n\", is_coprime_sortable(arr, n));\n    free(arr);\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}