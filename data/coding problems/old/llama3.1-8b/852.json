{
    "solution_id": "llama3.1-8b-852",
    "problem_id": "p00750",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stdbool.h>\n\n#define MAXN 45\n#define MAXA 405\n#define MAXS 7\n\ntypedef struct {\n    int to;\n    char str[MAXS];\n} Edge;\n\ntypedef struct {\n    int from;\n    int to;\n    char str[MAXS];\n} Arrow;\n\ntypedef struct {\n    int n, a, s, g;\n    Arrow arrows[MAXA];\n    Edge edges[MAXN];\n    int edge_cnt;\n} Graph;\n\nvoid dfs(Graph *g, int u, int p, char *str, char *ans) {\n    if (u == g->g) {\n        if (strcmp(ans, str) < 0) {\n            strcpy(ans, str);\n        }\n        return;\n    }\n    for (int i = 0; i < g->edge_cnt; i++) {\n        if (g->edges[i].from == u) {\n            char tmp[MAXS];\n            strcpy(tmp, str);\n            strcat(tmp, g->edges[i].str);\n            dfs(g, g->edges[i].to, u, tmp, ans);\n        }\n    }\n}\n\nvoid solve(Graph *g) {\n    char ans[MAXS] = \"\";\n    dfs(g, g->s, -1, \"\", ans);\n    if (strcmp(ans, \"\") == 0) {\n        printf(\"NO\\n\");\n    } else {\n        printf(\"%s\\n\", ans);\n    }\n}\n\nint main() {\n    Graph g;\n    g.n = 0;\n    g.a = 0;\n    g.s = 0;\n    g.g = 0;\n    g.edge_cnt = 0;\n\n    while (scanf(\"%d %d %d %d\", &g.n, &g.a, &g.s, &g.g) == 4) {\n        if (g.n == 0 && g.a == 0 && g.s == 0 && g.g == 0) {\n            break;\n        }\n        for (int i = 0; i < g.a; i++) {\n            scanf(\"%d %d %s\", &g.arrows[i].from, &g.arrows[i].to, g.arrows[i].str);\n        }\n        for (int i = 0; i < g.a; i++) {\n            g.edges[g.edge_cnt].from = g.arrows[i].from;\n            g.edges[g.edge_cnt].to = g.arrows[i].to;\n            strcpy(g.edges[g.edge_cnt].str, g.arrows[i].str);\n            g.edge_cnt++;\n        }\n        solve(&g);\n        g.n = 0;\n        g.a = 0;\n        g.s = 0;\n        g.g = 0;\n        g.edge_cnt = 0;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}