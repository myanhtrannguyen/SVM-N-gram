{
    "solution_id": "llama3.1-8b-3779",
    "problem_id": "p02265",
    "language": "Python",
    "solution": "```python\nclass Node:\n    def __init__(self, key):\n        self.key = key\n        self.prev = None\n        self.next = None\n\nclass DoublyLinkedList:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n\n    def insert(self, key):\n        node = Node(key)\n        if not self.head:\n            self.head = node\n            self.tail = node\n        else:\n            node.next = self.head\n            self.head.prev = node\n            self.head = node\n\n    def delete(self, key):\n        current = self.head\n        while current:\n            if current.key == key:\n                if current.prev:\n                    current.prev.next = current.next\n                else:\n                    self.head = current.next\n                if current.next:\n                    current.next.prev = current.prev\n                else:\n                    self.tail = current.prev\n                return\n            current = current.next\n\n    def deleteFirst(self):\n        if self.head:\n            self.head = self.head.next\n            if self.head:\n                self.head.prev = None\n\n    def deleteLast(self):\n        if self.tail:\n            self.tail = self.tail.prev\n            if self.tail:\n                self.tail.next = None\n\n    def printList(self):\n        current = self.head\n        while current:\n            print(current.key, end=' ')\n            current = current.next\n        print()\n\ndll = DoublyLinkedList()\nn = int(input())\nfor _ in range(n):\n    command = input().split()\n    if command[0] == 'insert':\n        dll.insert(int(command[1]))\n    elif command[0] == 'delete':\n        dll.delete(int(command[1]))\n    elif command[0] == 'deleteFirst':\n        dll.deleteFirst()\n    elif command[0] == 'deleteLast':\n        dll.deleteLast()\ndll.printList()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}