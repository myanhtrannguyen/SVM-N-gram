{
    "solution_id": "llama3.1-8b-3832",
    "problem_id": "p02279",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXN 100005\n\ntypedef struct Node {\n    int id, parent, degree, depth;\n    int left, right;\n    int type;\n} Node;\n\nNode nodes[MAXN];\n\nvoid dfs(int u) {\n    nodes[u].depth = nodes[nodes[u].parent].depth + 1;\n    if (nodes[u].depth == 0) {\n        nodes[u].type = 0; // root\n    } else if (nodes[u].degree == 0) {\n        nodes[u].type = 1; // leaf\n    } else {\n        nodes[u].type = 2; // internal node\n    }\n    for (int i = nodes[u].left; i != -1; i = nodes[i].right) {\n        dfs(i);\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        int id, degree;\n        scanf(\"%d %d\", &id, &degree);\n        nodes[id].id = id;\n        nodes[id].parent = -1;\n        nodes[id].degree = degree;\n        nodes[id].left = -1;\n        nodes[id].right = -1;\n        nodes[id].type = -1;\n        for (int j = 0; j < degree; j++) {\n            int child;\n            scanf(\"%d\", &child);\n            if (nodes[id].left == -1) {\n                nodes[id].left = child;\n            } else {\n                int temp = nodes[id].right;\n                nodes[id].right = child;\n                while (temp != -1) {\n                    nodes[temp].right = child;\n                    temp = nodes[temp].right;\n                }\n            }\n        }\n    }\n    dfs(0);\n    for (int i = 0; i < n; i++) {\n        printf(\"node %d: parent = %d, depth = %d, \", nodes[i].id, nodes[i].parent, nodes[i].depth);\n        if (nodes[i].type == 0) {\n            printf(\"root, \");\n        } else if (nodes[i].type == 1) {\n            printf(\"leaf, \");\n        } else {\n            printf(\"internal node, \");\n        }\n        printf(\"[\");\n        for (int j = nodes[i].left; j != -1; j = nodes[j].right) {\n            printf(\"%d\", j);\n            if (nodes[j].right != -1) {\n                printf(\", \");\n            }\n        }\n        printf(\"]\\n\");\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}