{
    "solution_id": "llama3.1-8b-2134",
    "problem_id": "p03406",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdint>\n\nusing namespace std;\n\nconst int64_t MOD = 1e9 + 7;\n\nint64_t powmod(int64_t a, int64_t b) {\n    int64_t res = 1;\n    a %= MOD;\n    while (b > 0) {\n        if (b & 1) res = res * a % MOD;\n        a = a * a % MOD;\n        b >>= 1;\n    }\n    return res;\n}\n\nint64_t inv(int64_t a) {\n    return powmod(a, MOD - 2);\n}\n\nint64_t C(int64_t n, int64_t k) {\n    if (k > n) return 0;\n    int64_t res = 1;\n    for (int64_t i = 1; i <= k; i++) {\n        res = res * (n - i + 1) % MOD * inv(i) % MOD;\n    }\n    return res;\n}\n\nint64_t solve(int64_t n, vector<int64_t> a) {\n    int64_t m = a.size();\n    int64_t res = 0;\n    for (int64_t i = 0; i < (1 << m); i++) {\n        int64_t cnt = 0;\n        for (int64_t j = 0; j < m; j++) {\n            if (i & (1 << j)) cnt++;\n        }\n        int64_t x = 0;\n        for (int64_t j = 0; j < m; j++) {\n            if (i & (1 << j)) {\n                x ^= a[j];\n            }\n        }\n        if (x == 0) {\n            res += C(n, cnt);\n        } else {\n            res += C(n - 1, cnt - 1) * (1 - C(n - 1, cnt - 1)) % MOD;\n        }\n        res %= MOD;\n    }\n    return res;\n}\n\nint main() {\n    int64_t n, m;\n    cin >> n >> m;\n    vector<int64_t> a(m);\n    for (int64_t i = 0; i < m; i++) {\n        cin >> a[i];\n    }\n    cout << solve(n, a) << endl;\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}