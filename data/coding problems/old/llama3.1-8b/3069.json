{
    "solution_id": "llama3.1-8b-3069",
    "problem_id": "p01681",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst double eps = 1e-6;\n\nstruct Point {\n    double x, y;\n};\n\ndouble cross(const Point& a, const Point& b) {\n    return a.x * b.y - a.y * b.x;\n}\n\ndouble dot(const Point& a, const Point& b) {\n    return a.x * b.x + a.y * b.y;\n}\n\ndouble dist(const Point& a, const Point& b) {\n    return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        vector<Point> p(n + 1);\n        for (int i = 0; i <= n; i++) {\n            cin >> p[i].x >> p[i].y;\n        }\n        vector<int> order(n);\n        for (int i = 0; i < n; i++) {\n            order[i] = i;\n        }\n        int ans = 1;\n        do {\n            bool ok = true;\n            for (int i = 0; i < n; i++) {\n                double ang = atan2(p[order[(i + 1) % n]].y - p[order[i]].y, p[order[(i + 1) % n]].x - p[order[i]].x);\n                double ang2 = atan2(p[order[i]].y - p[n].y, p[order[i]].x - p[n].x);\n                if (abs(ang - ang2) < eps) {\n                    ok = false;\n                    break;\n                }\n            }\n            if (ok) {\n                ans++;\n            }\n        } while (next_permutation(order.begin(), order.end()));\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}