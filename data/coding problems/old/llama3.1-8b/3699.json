{
    "solution_id": "llama3.1-8b-3699",
    "problem_id": "p02245",
    "language": "Python",
    "solution": "```python\nfrom collections import deque\n\ndef is_valid(x, y):\n    return 0 <= x < 3 and 0 <= y < 3\n\ndef is_goal(board):\n    goal = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 0]\n    ]\n    for i in range(3):\n        for j in range(3):\n            if board[i][j] != goal[i][j]:\n                return False\n    return True\n\ndef find_empty(board):\n    for i in range(3):\n        for j in range(3):\n            if board[i][j] == 0:\n                return (i, j)\n\ndef get_neighbors(board, x, y):\n    neighbors = []\n    if is_valid(x-1, y):\n        neighbors.append((x-1, y))\n    if is_valid(x+1, y):\n        neighbors.append((x+1, y))\n    if is_valid(x, y-1):\n        neighbors.append((x, y-1))\n    if is_valid(x, y+1):\n        neighbors.append((x, y+1))\n    return neighbors\n\ndef solve(board):\n    queue = deque([(board, 0)])\n    visited = set()\n    while queue:\n        state, steps = queue.popleft()\n        if is_goal(state):\n            return steps\n        x, y = find_empty(state)\n        for nx, ny in get_neighbors(state, x, y):\n            new_state = [row[:] for row in state]\n            new_state[x][y], new_state[nx][ny] = new_state[nx][ny], new_state[x][y]\n            new_state_tuple = tuple(map(tuple, new_state))\n            if new_state_tuple not in visited:\n                queue.append((new_state, steps + 1))\n                visited.add(new_state_tuple)\n    return -1\n\ndef main():\n    board = []\n    for _ in range(3):\n        row = list(map(int, input().split()))\n        board.append(row)\n    print(solve(board))\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}