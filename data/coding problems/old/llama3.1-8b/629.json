{
    "solution_id": "llama3.1-8b-629",
    "problem_id": "p00694",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <unordered_map>\n\nusing namespace std;\n\nstruct Point {\n    int x, y, z;\n};\n\nstruct Key {\n    vector<Point> points;\n    unordered_map<int, int> labels;\n};\n\nKey parseKey(const string& description) {\n    Key key;\n    int label = 0;\n    istringstream iss(description);\n    string line;\n    getline(iss, line);\n    int n = stoi(line);\n    for (int i = 0; i < n; ++i) {\n        getline(iss, line);\n        istringstream lineIss(line);\n        string token;\n        Point point = {0, 0, 0};\n        while (lineIss >> token) {\n            if (token[0] == '+') {\n                if (token[1] == 'x') {\n                    point.x += (token[2] == '+' ? 1 : -1);\n                } else if (token[1] == 'y') {\n                    point.y += (token[2] == '+' ? 1 : -1);\n                } else if (token[1] == 'z') {\n                    point.z += (token[2] == '+' ? 1 : -1);\n                }\n            } else {\n                int num = stoi(token);\n                if (key.labels.find(num) == key.labels.end()) {\n                    key.labels[num] = label;\n                    label++;\n                }\n                key.points.push_back(point);\n            }\n        }\n    }\n    return key;\n}\n\nbool areKeysSame(const Key& key1, const Key& key2) {\n    if (key1.points.size() != key2.points.size()) return false;\n    if (key1.labels.size() != key2.labels.size()) return false;\n    for (size_t i = 0; i < key1.points.size(); ++i) {\n        if (key1.points[i].x != key2.points[i].x ||\n            key1.points[i].y != key2.points[i].y ||\n            key1.points[i].z != key2.points[i].z) return false;\n        if (key1.labels.find(i) == key1.labels.end() ||\n            key2.labels.find(i) == key2.labels.end()) return false;\n        if (key1.labels[i] != key2.labels[i]) return false;\n    }\n    return true;\n}\n\nint main() {\n    string line;\n    int count = 0;\n    while (getline(cin, line)) {\n        if (line == \"0\") break;\n        Key key1 = parseKey(line);\n        getline(cin, line);\n        Key key2 = parseKey(line);\n        if (areKeysSame(key1, key2)) {\n            cout << \"SAME\" << endl;\n        } else {\n            cout << \"DIFFERENT\" << endl;\n        }\n        count++;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}