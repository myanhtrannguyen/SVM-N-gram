{
    "solution_id": "llama3.1-8b-1200",
    "problem_id": "p00837",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_DESKS 10\n#define MAX_BOOKS 30\n#define MAX_STUDENTS 100\n#define MAX_REQUESTS 50\n#define MAX_BOOK_ID 99\n\ntypedef struct {\n    int id;\n    int cost;\n} Book;\n\ntypedef struct {\n    int id;\n    int requests[MAX_REQUESTS];\n    int num_requests;\n} Student;\n\ntypedef struct {\n    int id;\n    int cost;\n} Request;\n\nint main() {\n    int m, c, n;\n    int i, j, k, l;\n    int desk[MAX_DESKS];\n    int num_books[MAX_DESKS];\n    Student students[MAX_STUDENTS];\n    Request requests[MAX_REQUESTS];\n    Book books[MAX_BOOK_ID + 1];\n    int total_cost;\n\n    while (scanf(\"%d %d %d\", &m, &c, &n) == 3) {\n        if (m == 0 && c == 0 && n == 0) break;\n\n        for (i = 0; i < m; i++) {\n            desk[i] = i + 1;\n            num_books[i] = 0;\n        }\n\n        for (i = 0; i < n; i++) {\n            scanf(\"%d\", &students[i].num_requests);\n            for (j = 0; j < students[i].num_requests; j++) {\n                scanf(\"%d\", &students[i].requests[j]);\n                books[students[i].requests[j]].id = students[i].requests[j];\n                books[students[i].requests[j]].cost = 0;\n            }\n        }\n\n        total_cost = 0;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < students[i].num_requests; j++) {\n                int book_id = students[i].requests[j];\n                int book_cost = 0;\n                int book_index = -1;\n\n                for (k = 0; k < m; k++) {\n                    if (num_books[k] < c) {\n                        for (l = 0; l < m; l++) {\n                            if (desk[l] == k + 1) {\n                                if (books[book_id].id == desk[l]) {\n                                    book_cost += k + 1;\n                                    book_index = k;\n                                    break;\n                                }\n                            }\n                        }\n                        if (book_index != -1) break;\n                    }\n                }\n\n                if (book_index == -1) {\n                    book_cost += m + 1;\n                    for (k = 0; k < m; k++) {\n                        if (num_books[k] < c) {\n                            book_index = k;\n                            break;\n                        }\n                    }\n                }\n\n                if (book_index != -1) {\n                    for (k = 0; k < m; k++) {\n                        if (num_books[k] < c && k != book_index) {\n                            for (l = 0; l < m; l++) {\n                                if (desk[l] == k + 1) {\n                                    if (books[book_id].id == desk[l]) {\n                                        book_cost += k + 1;\n                                        book_index = k;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (book_index != -1) break;\n                        }\n                    }\n                }\n\n                if (book_index == -1) {\n                    book_cost += m + 1;\n                } else {\n                    for (k = 0; k < m; k++) {\n                        if (num_books[k] < c && k != book_index) {\n                            book_cost += k + 1;\n                            break;\n                        }\n                    }\n                }\n\n                if (book_index != -1) {\n                    for (k = 0; k < m; k++) {\n                        if (num_books[k] < c && k != book_index) {\n                            for (l = 0; l < m; l++) {\n                                if (desk[l] == k + 1) {\n                                    if (books[book_id].id == desk[l]) {\n                                        book_cost += k + 1;\n                                        book_index = k;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (book_index != -1) break;\n                        }\n                    }\n                }\n\n                if (book_index != -1) {\n                    book_cost += book_index + 1;\n                }\n\n                total_cost += book_cost;\n                books[book_id].cost += book_cost;\n                if (num_books[book_index] < c) {\n                    num_books[book_index]++;\n                } else {\n                    for (k = 0; k < m; k++) {\n                        if (num_books[k] < c) {\n                            for (l = 0; l < m; l++) {\n                                if (desk[l] == k + 1) {\n                                    if (books[desk[l]].cost > books[book_id].cost) {\n                                        book_cost += k + 1;\n                                        book_index = k;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (book_index != -1) break;\n                        }\n                    }\n\n                    if (book_index == -1) {\n                        book_cost += m + 1;\n                    } else {\n                        for (k = 0; k < m; k++) {\n                            if (num_books[k] < c && k != book_index) {\n                                book_cost += k + 1;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (book_index != -1) {\n                        for (k = 0; k < m; k++) {\n                            if (num_books[k] < c && k != book_index) {\n                                for (l = 0; l < m; l++) {\n                                    if (desk[l] == k + 1) {\n                                        if (books[desk[l]].cost > books[book_id].cost) {\n                                            book_cost += k + 1;\n                                            book_index = k;\n                                            break;\n                                        }\n                                    }\n                                }\n                                if (book_index != -1) break;\n                            }\n                        }\n                    }\n\n                    if (book_index != -1) {\n                        book_cost += book_index + 1;\n                    }\n\n                    total_cost += book_cost;\n                    books[book_id].cost += book_cost;\n                    num_books[book_index]++;\n                }\n            }\n        }\n\n        printf(\"%d\\n\", total_cost);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}