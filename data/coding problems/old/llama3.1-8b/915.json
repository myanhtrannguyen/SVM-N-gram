{
    "solution_id": "llama3.1-8b-915",
    "problem_id": "p00765",
    "language": "Python",
    "solution": "```python\nimport sys\nimport math\n\ndef read_input():\n    while True:\n        line = sys.stdin.readline().strip()\n        if line == \"0 0 0\":\n            break\n        N, M, L = map(int, line.split())\n        hand_pattern = sys.stdin.readline().strip()\n        yield N, M, L, hand_pattern\n\ndef parse_hand_pattern(hand_pattern):\n    variables = {}\n    i = 0\n    while i < len(hand_pattern):\n        if hand_pattern[i] == '*':\n            i += 1\n        elif hand_pattern[i] == ' ':\n            i += 1\n            continue\n        j = i\n        while j < len(hand_pattern) and hand_pattern[j] != ' ':\n            j += 1\n        var = hand_pattern[i:j]\n        if var in variables:\n            variables[var].append(j - i)\n        else:\n            variables[var] = [j - i]\n        i = j + 1\n    return variables\n\ndef calculate_probability(N, M, L, hand_pattern):\n    variables = parse_hand_pattern(hand_pattern)\n    for var in variables:\n        variables[var].sort(reverse=True)\n    total_cards = N * M\n    if total_cards < L:\n        return 0\n    probability = 1\n    for var in variables:\n        var_prob = 0\n        for i in range(len(variables[var])):\n            var_prob += math.comb(N, variables[var][i])\n        var_prob /= math.comb(total_cards, L)\n        for i in range(len(variables[var])):\n            var_prob *= math.comb(N - variables[var][i], L - i - 1)\n        probability *= var_prob\n    return probability\n\ndef main():\n    for N, M, L, hand_pattern in read_input():\n        probability = calculate_probability(N, M, L, hand_pattern)\n        print(f\"{probability:.12f}\")\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}