{
    "solution_id": "llama3.1-8b-3841",
    "problem_id": "p02281",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nstruct Node {\n    int id;\n    int left;\n    int right;\n};\n\nclass BinaryTree {\npublic:\n    vector<Node> nodes;\n    vector<int> preorder;\n    vector<int> inorder;\n    vector<int> postorder;\n\n    void readNodes(int n) {\n        nodes.resize(n);\n        for (int i = 0; i < n; i++) {\n            cin >> nodes[i].id >> nodes[i].left >> nodes[i].right;\n        }\n    }\n\n    void buildTree(int n) {\n        for (int i = 0; i < n; i++) {\n            if (nodes[i].left != -1) {\n                nodes[nodes[i].left].left = nodes[i].id;\n            }\n            if (nodes[i].right != -1) {\n                nodes[nodes[i].right].right = nodes[i].id;\n            }\n        }\n    }\n\n    void preorder(int node) {\n        if (node != -1) {\n            preorder.push_back(nodes[node].id);\n            preorder(nodes[node].left);\n            preorder(nodes[node].right);\n        }\n    }\n\n    void inorder(int node) {\n        if (node != -1) {\n            inorder(nodes[node].left);\n            inorder.push_back(nodes[node].id);\n            inorder(nodes[node].right);\n        }\n    }\n\n    void postorder(int node) {\n        if (node != -1) {\n            postorder(nodes[node].left);\n            postorder(nodes[node].right);\n            postorder.push_back(nodes[node].id);\n        }\n    }\n\n    void printResult() {\n        cout << \"Preorder\" << endl;\n        for (int i = 0; i < preorder.size(); i++) {\n            cout << preorder[i];\n            if (i < preorder.size() - 1) {\n                cout << \" \";\n            }\n        }\n        cout << endl;\n\n        cout << \"Inorder\" << endl;\n        for (int i = 0; i < inorder.size(); i++) {\n            cout << inorder[i];\n            if (i < inorder.size() - 1) {\n                cout << \" \";\n            }\n        }\n        cout << endl;\n\n        cout << \"Postorder\" << endl;\n        for (int i = 0; i < postorder.size(); i++) {\n            cout << postorder[i];\n            if (i < postorder.size() - 1) {\n                cout << \" \";\n            }\n        }\n        cout << endl;\n    }\n};\n\nint main() {\n    int n;\n    cin >> n;\n    BinaryTree tree;\n    tree.readNodes(n);\n    tree.buildTree(n);\n    tree.preorder(-1);\n    tree.inorder(-1);\n    tree.postorder(-1);\n    tree.printResult();\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}