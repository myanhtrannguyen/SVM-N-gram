{
    "solution_id": "llama3.1-8b-3935",
    "problem_id": "p02304",
    "language": "Python",
    "solution": "```python\nimport sys\n\nclass Segment:\n    def __init__(self, x1, y1, x2, y2):\n        self.x1 = x1\n        self.y1 = y1\n        self.x2 = x2\n        self.y2 = y2\n\n    def is_vertical(self):\n        return self.x1 == self.x2\n\n    def is_horizontal(self):\n        return self.y1 == self.y2\n\n    def get_endpoints(self):\n        if self.is_vertical():\n            return [(self.x1, self.y1), (self.x1, self.y2)]\n        else:\n            return [(self.x1, self.y1), (self.x2, self.y1)]\n\n    def __lt__(self, other):\n        if self.is_vertical() and other.is_vertical():\n            return self.x1 < other.x1\n        elif self.is_vertical():\n            return True\n        elif other.is_vertical():\n            return False\n        else:\n            return self.y1 < other.y1\n\ndef count_intersections(segments):\n    segments.sort()\n    intersections = 0\n    current_endpoints = []\n    for segment in segments:\n        endpoints = segment.get_endpoints()\n        for endpoint in endpoints:\n            if endpoint in current_endpoints:\n                intersections += 1\n            else:\n                current_endpoints.append(endpoint)\n    return intersections\n\ndef main():\n    n = int(input())\n    segments = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(int, input().split())\n        segment = Segment(x1, y1, x2, y2)\n        segments.append(segment)\n    print(count_intersections(segments))\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}