{
    "solution_id": "llama3.1-8b-1893",
    "problem_id": "p03152",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int MOD = 1000000007;\n    static int[][] A, B;\n    static int[][] dp;\n    static int n, m;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        n = Integer.parseInt(st.nextToken());\n        m = Integer.parseInt(st.nextToken());\n        A = new int[n][];\n        B = new int[m][];\n        dp = new int[n + 1][m + 1];\n        for (int i = 0; i < n; i++) {\n            st = new StringTokenizer(br.readLine());\n            A[i] = new int[]{Integer.parseInt(st.nextToken())};\n            for (int j = 1; j < m; j++) {\n                A[i][j] = Integer.parseInt(st.nextToken());\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            st = new StringTokenizer(br.readLine());\n            B[i] = new int[]{Integer.parseInt(st.nextToken())};\n            for (int j = 1; j < n; j++) {\n                B[i][j] = Integer.parseInt(st.nextToken());\n            }\n        }\n        Arrays.sort(A, Comparator.comparingInt(a -> a[0]));\n        Arrays.sort(B, Comparator.comparingInt(a -> a[0]));\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (A[i][0] == B[j][0]) {\n                    ans = (int) ((ans + dfs(i, j)) % MOD);\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n\n    static int dfs(int i, int j) {\n        if (i == n || j == m) return 1;\n        if (dp[i][j] != 0) return dp[i][j];\n        int ans = 0;\n        int maxA = A[i][0];\n        int maxB = B[j][0];\n        int minA = A[i][0];\n        int minB = B[j][0];\n        for (int k = i; k < n; k++) {\n            minA = Math.min(minA, A[k][0]);\n            maxA = Math.max(maxA, A[k][0]);\n        }\n        for (int k = j; k < m; k++) {\n            minB = Math.min(minB, B[k][0]);\n            maxB = Math.max(maxB, B[k][0]);\n        }\n        if (maxA < maxB) {\n            ans = (int) ((ans + dfs(i + 1, j)) % MOD);\n        } else if (maxA > maxB) {\n            ans = (int) ((ans + dfs(i, j + 1)) % MOD);\n        } else {\n            int k = i;\n            while (k < n && A[k][0] <= maxA) k++;\n            int l = j;\n            while (l < m && B[l][0] <= maxA) l++;\n            if (k - i == l - j) {\n                ans = (int) ((ans + dfs(i + 1, j + 1) * (k - i - 1)) % MOD);\n            } else {\n                ans = (int) ((ans + dfs(i + 1, j + 1)) % MOD);\n            }\n        }\n        return dp[i][j] = ans;\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}