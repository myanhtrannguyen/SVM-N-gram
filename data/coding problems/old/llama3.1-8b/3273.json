{
    "solution_id": "llama3.1-8b-3273",
    "problem_id": "p01822",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\nstruct Point {\n    int x, y;\n};\n\nstruct Segment {\n    int u, v;\n};\n\nstruct Query {\n    int x, y, id;\n};\n\nbool cmp(const Point &a, const Point &b) {\n    return a.x < b.x || (a.x == b.x && a.y < b.y);\n}\n\nbool cmp2(const Query &a, const Query &b) {\n    return a.x < b.x || (a.x == b.x && a.y < b.y);\n}\n\nint n, m, q;\nPoint p[N];\nSegment e[N];\nQuery q[N];\nint fa[N], sz[N];\nint ans[N];\n\nint find(int x) {\n    return x == fa[x] ? x : fa[x] = find(fa[x]);\n}\n\nvoid merge(int u, int v) {\n    u = find(u);\n    v = find(v);\n    if (u == v) return;\n    if (sz[u] < sz[v]) swap(u, v);\n    fa[v] = u;\n    sz[u] += sz[v];\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin >> n >> m >> q;\n    for (int i = 1; i <= n; i++) {\n        cin >> p[i].x >> p[i].y;\n    }\n    for (int i = 1; i <= m; i++) {\n        cin >> e[i].u >> e[i].v;\n    }\n    for (int i = 1; i <= q; i++) {\n        cin >> q[i].x >> q[i].y;\n        q[i].id = i;\n    }\n    sort(p + 1, p + n + 1, cmp);\n    sort(e + 1, e + m + 1, [](const Segment &a, const Segment &b) {\n        return p[a.u].x < p[b.u].x || (p[a.u].x == p[b.u].x && p[a.u].y < p[b.u].y);\n    });\n    sort(q + 1, q + q + 1, cmp2);\n    for (int i = 1; i <= n; i++) {\n        fa[i] = i;\n        sz[i] = 1;\n    }\n    int l = 1, r = 0;\n    for (int i = 1; i <= m; i++) {\n        while (l > r && q[l].x < p[e[i].u].x) {\n            l--;\n            merge(q[l].id, q[l + 1].id);\n        }\n        while (l > r && q[r + 1].x == p[e[i].u].x) {\n            r++;\n            merge(q[r].id, q[r + 1].id);\n        }\n        while (l > r && q[l].x == p[e[i].u].x && q[l].y < p[e[i].u].y) {\n            l--;\n            merge(q[l].id, q[l + 1].id);\n        }\n        while (l > r && q[r + 1].x == p[e[i].u].x && q[r + 1].y < p[e[i].u].y) {\n            r++;\n            merge(q[r].id, q[r + 1].id);\n        }\n        while (l > r && q[l].x == p[e[i].u].x && q[l].y == p[e[i].u].y) {\n            l--;\n            merge(q[l].id, q[l + 1].id);\n        }\n        while (l > r && q[r + 1].x == p[e[i].u].x && q[r + 1].y == p[e[i].u].y) {\n            r++;\n            merge(q[r].id, q[r + 1].id);\n        }\n        if (find(e[i].u) == find(e[i].v)) {\n            ans[find(q[i].id)] = 1;\n        }\n    }\n    for (int i = 1; i <= q; i++) {\n        cout << (ans[i] ? \"Yes\" : \"No\") << '\\n';\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}