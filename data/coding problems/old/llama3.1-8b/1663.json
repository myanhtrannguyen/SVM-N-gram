{
    "solution_id": "llama3.1-8b-1663",
    "problem_id": "p02955",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int N = 505;\n    static int n, k;\n    static int[] a = new int[N];\n    static int[] p = new int[N];\n    static int[] mu = new int[N];\n    static int[] phi = new int[N];\n    static int[] prime = new int[N];\n    static int cnt;\n    static int ans;\n\n    static void init() {\n        for (int i = 2; i <= 1000000; i++) {\n            if (p[i] == 0) {\n                prime[++cnt] = i;\n                mu[i] = -1;\n                phi[i] = i - 1;\n            }\n            for (int j = 1; j <= cnt && prime[j] <= 1000000 / i; j++) {\n                p[i * prime[j]] = 1;\n                if (i % prime[j] == 0) {\n                    mu[i * prime[j]] = 0;\n                    phi[i * prime[j]] = phi[i] * prime[j];\n                    break;\n                }\n                mu[i * prime[j]] = -mu[i];\n                phi[i * prime[j]] = phi[i] * (prime[j] - 1);\n            }\n        }\n    }\n\n    static void solve() throws IOException {\n        n = readInt();\n        k = readInt();\n        for (int i = 1; i <= n; i++) {\n            a[i] = readInt();\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= cnt; j++) {\n                if (a[i] % prime[j] == 0) {\n                    a[i] /= prime[j];\n                    while (a[i] % prime[j] == 0) {\n                        a[i] /= prime[j];\n                    }\n                }\n            }\n        }\n        int lim = 0;\n        for (int i = 1; i <= cnt; i++) {\n            lim += phi[prime[i]];\n        }\n        for (int i = 1; i <= cnt; i++) {\n            int x = 0;\n            for (int j = 1; j <= cnt; j++) {\n                if (prime[j] != prime[i]) {\n                    x += phi[prime[j]];\n                }\n            }\n            int y = k - x;\n            if (y >= 0) {\n                lim += (y / phi[prime[i]]) * phi[prime[i]];\n            }\n        }\n        for (int i = 1; i <= cnt; i++) {\n            int x = 0;\n            for (int j = 1; j <= cnt; j++) {\n                if (prime[j] != prime[i]) {\n                    x += phi[prime[j]];\n                }\n            }\n            int y = k - x;\n            if (y >= 0) {\n                lim += (y / phi[prime[i]]) * prime[i];\n            }\n        }\n        for (int i = 1; i <= cnt; i++) {\n            int x = 0;\n            for (int j = 1; j <= cnt; j++) {\n                if (prime[j] != prime[i]) {\n                    x += phi[prime[j]];\n                }\n            }\n            int y = k - x;\n            if (y >= 0) {\n                lim += (y / phi[prime[i]]) * prime[i];\n            }\n            for (int j = 1; j <= n; j++) {\n                if (a[j] % prime[i] == 0) {\n                    a[j] /= prime[i];\n                    while (a[j] % prime[i] == 0) {\n                        a[j] /= prime[i];\n                    }\n                }\n            }\n            int g = 0;\n            for (int j = 1; j <= n; j++) {\n                g = gcd(g, a[j]);\n            }\n            if (g > lim) {\n                out.println(g);\n                return;\n            }\n            for (int j = 1; j <= n; j++) {\n                a[j] *= prime[i];\n            }\n        }\n        out.println(1);\n    }\n\n    static int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter out = new PrintWriter(System.out);\n    static StringTokenizer st;\n\n    static String next() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine().trim());\n        return st.nextToken();\n    }\n\n    static int readInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    public static void main(String[] args) throws IOException {\n        init();\n        solve();\n        out.close();\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}