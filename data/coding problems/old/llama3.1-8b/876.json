{
    "solution_id": "llama3.1-8b-876",
    "problem_id": "p00756",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n#define MAX_DISCS 100\n#define MAX_COLOR 4\n\ntypedef struct {\n    int x, y, r, c;\n} Disc;\n\nint compare_discs(const void *a, const void *b) {\n    Disc *disc_a = (Disc *)a;\n    Disc *disc_b = (Disc *)b;\n    return disc_a->x - disc_b->x;\n}\n\nint dfs(int disc, int color, int visited[MAX_DISCS], int disc_color[MAX_DISCS], int graph[MAX_DISCS][MAX_DISCS], int n) {\n    if (visited[disc]) return 0;\n    visited[disc] = 1;\n    disc_color[disc] = color;\n    int i;\n    for (i = 0; i < n; i++) {\n        if (graph[disc][i] && disc_color[i] == -1) {\n            int removed = dfs(i, color, visited, disc_color, graph, n);\n            if (removed) return 1;\n        }\n    }\n    return 0;\n}\n\nint main() {\n    int n, i, j, k, removed;\n    int disc_color[MAX_DISCS];\n    int graph[MAX_DISCS][MAX_DISCS];\n    int visited[MAX_DISCS];\n    while (scanf(\"%d\", &n) != EOF) {\n        if (n == 0) break;\n        for (i = 0; i < n; i++) {\n            scanf(\"%d %d %d %d\", &disc_color[i].x, &disc_color[i].y, &disc_color[i].r, &disc_color[i].c);\n            disc_color[i].c--;\n            memset(visited, 0, sizeof(visited));\n            memset(graph[i], 0, sizeof(graph[i]));\n            for (j = 0; j < n; j++) {\n                if (i != j) {\n                    int dx = disc_color[i].x - disc_color[j].x;\n                    int dy = disc_color[i].y - disc_color[j].y;\n                    int distance = sqrt(dx * dx + dy * dy);\n                    if (distance <= disc_color[i].r + disc_color[j].r) {\n                        graph[i][j] = 1;\n                        graph[j][i] = 1;\n                    }\n                }\n            }\n            removed = 0;\n            for (i = 0; i < n; i++) {\n                if (disc_color[i].c == -1) {\n                    memset(visited, 0, sizeof(visited));\n                    if (dfs(i, i, visited, disc_color, graph, n)) removed++;\n                }\n            }\n            printf(\"%d\\n\", removed);\n        }\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}