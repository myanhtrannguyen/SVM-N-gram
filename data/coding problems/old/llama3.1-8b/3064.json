{
    "solution_id": "llama3.1-8b-3064",
    "problem_id": "p01680",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MOD 1000000007\n#define N 100005\n\ntypedef struct {\n    int to, next;\n} edge;\n\nedge e[N << 1];\nint head[N], tot;\nint n, m, a[N], b[N], fa[N], siz[N], vis[N], dfn[N], low[N], id[N], scc_cnt;\nint st[N], top, cnt, ans;\nint d[N], g[N], f[N], p[N], q[N], dep[N];\n\nvoid add(int u, int v) {\n    e[++tot].to = v;\n    e[tot].next = head[u];\n    head[u] = tot;\n}\n\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++cnt;\n    st[++top] = u;\n    vis[u] = 1;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = (low[u] < low[v]) ? low[u] : low[v];\n        } else if (vis[v]) {\n            low[u] = (low[u] < dfn[v]) ? low[u] : dfn[v];\n        }\n    }\n    if (dfn[u] == low[u]) {\n        scc_cnt++;\n        do {\n            vis[u] = 0;\n            id[u] = scc_cnt;\n        } while (u != st[top--]);\n    }\n}\n\nvoid dfs(int u) {\n    siz[u] = 1;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs(v);\n            siz[u] += siz[v];\n        }\n    }\n}\n\nvoid dfs2(int u, int d) {\n    d[u] = d;\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs2(v, d[u] + 1);\n        }\n    }\n}\n\nvoid dfs3(int u, int d) {\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs3(v, d);\n        }\n    }\n    if (d[u] == d[u] + 1) {\n        g[u] = 1;\n        for (int i = head[u]; i; i = e[i].next) {\n            int v = e[i].to;\n            if (id[u] != id[v]) {\n                g[u] = (g[u] + g[v]) % MOD;\n            }\n        }\n    }\n}\n\nvoid dfs4(int u, int d) {\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs4(v, d);\n        }\n    }\n    if (d[u] == d[u] + 1) {\n        f[u] = 1;\n        for (int i = head[u]; i; i = e[i].next) {\n            int v = e[i].to;\n            if (id[u] != id[v]) {\n                f[u] = (f[u] + f[v]) % MOD;\n            }\n        }\n    }\n}\n\nvoid dfs5(int u, int d) {\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs5(v, d);\n        }\n    }\n    if (d[u] == d[u] + 1) {\n        p[u] = 1;\n        for (int i = head[u]; i; i = e[i].next) {\n            int v = e[i].to;\n            if (id[u] != id[v]) {\n                p[u] = (p[u] + p[v]) % MOD;\n            }\n        }\n    }\n}\n\nvoid dfs6(int u, int d) {\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (id[u] != id[v]) {\n            dfs6(v, d);\n        }\n    }\n    if (d[u] == d[u] + 1) {\n        q[u] = 1;\n        for (int i = head[u]; i; i = e[i].next) {\n            int v = e[i].to;\n            if (id[u] != id[v]) {\n                q[u] = (q[u] + q[v]) % MOD;\n            }\n        }\n    }\n}\n\nint main() {\n    while (~scanf(\"%d%d\", &n, &m)) {\n        if (n == 0 && m == 0) break;\n        for (int i = 1; i <= n; i++) {\n            head[i] = 0;\n            fa[i] = i;\n            siz[i] = 0;\n            vis[i] = 0;\n            dfn[i] = 0;\n            low[i] = 0;\n            id[i] = 0;\n            d[i] = 0;\n            g[i] = 0;\n            f[i] = 0;\n            p[i] = 0;\n            q[i] = 0;\n        }\n        tot = 0;\n        scc_cnt = 0;\n        cnt = 0;\n        top = 0;\n        ans = 0;\n        for (int i = 1; i <= m; i++) {\n            scanf(\"%d%d\", &a[i], &b[i]);\n            add(a[i], b[i]);\n            add(b[i], a[i]);\n        }\n        for (int i = 1; i <= n; i++) {\n            if (!dfn[i]) {\n                tarjan(i);\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = head[i]; j; j = e[j].next) {\n                int v = e[j].to;\n                if (id[i] != id[v]) {\n                    add(id[i], id[v]);\n                }\n            }\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs(i);\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs2(i, 1);\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs3(i, 0);\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs4(i, 0);\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs5(i, 0);\n        }\n        for (int i = 1; i <= scc_cnt; i++) {\n            dfs6(i, 0);\n        }\n        for (int i = 1; i <= n; i++) {\n            if (fa[i] == i) {\n                int x = 1;\n                for (int j = head[i]; j; j = e[j].next) {\n                    int v = e[j].to;\n                    if (id[i] != id[v]) {\n                        x = (x * g[v]) % MOD;\n                    }\n                }\n                ans = (ans + x) % MOD;\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}