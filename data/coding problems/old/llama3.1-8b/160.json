{
    "solution_id": "llama3.1-8b-160",
    "problem_id": "p00151",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_N 256\n\nint max(int a, int b) {\n    return (a > b) ? a : b;\n}\n\nint max_consecutive_ones(int n, int grid[MAX_N][MAX_N]) {\n    int max_ones = 0;\n\n    // Check horizontal\n    for (int i = 0; i < n; i++) {\n        int ones = 0;\n        for (int j = 0; j < n; j++) {\n            if (grid[i][j] == 1) {\n                ones++;\n            } else {\n                ones = 0;\n            }\n            max_ones = max(max_ones, ones);\n        }\n    }\n\n    // Check vertical\n    for (int i = 0; i < n; i++) {\n        int ones = 0;\n        for (int j = 0; j < n; j++) {\n            if (grid[j][i] == 1) {\n                ones++;\n            } else {\n                ones = 0;\n            }\n            max_ones = max(max_ones, ones);\n        }\n    }\n\n    // Check diagonal (top-left to bottom-right)\n    for (int i = 0; i < n; i++) {\n        int ones = 0;\n        for (int j = 0; j < n; j++) {\n            if (grid[i][j] == 1) {\n                ones++;\n            } else {\n                ones = 0;\n            }\n            max_ones = max(max_ones, ones);\n        }\n    }\n\n    // Check diagonal (bottom-left to top-right)\n    for (int i = 0; i < n; i++) {\n        int ones = 0;\n        for (int j = n - 1; j >= 0; j--) {\n            if (grid[i][j] == 1) {\n                ones++;\n            } else {\n                ones = 0;\n            }\n            max_ones = max(max_ones, ones);\n        }\n    }\n\n    return max_ones;\n}\n\nint main() {\n    int n;\n    int grid[MAX_N][MAX_N];\n\n    while (scanf(\"%d\", &n) == 1) {\n        if (n == 0) {\n            break;\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                scanf(\"%d\", &grid[i][j]);\n            }\n        }\n\n        printf(\"%d\\n\", max_consecutive_ones(n, grid));\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}