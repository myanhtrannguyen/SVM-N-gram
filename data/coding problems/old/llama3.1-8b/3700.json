{
    "solution_id": "llama3.1-8b-3700",
    "problem_id": "p02246",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define N 16\n\nint is_solvable(int *board) {\n    int inversions = 0;\n    for (int i = 0; i < N - 1; i++) {\n        for (int j = i + 1; j < N; j++) {\n            if (board[j] != 0 && board[i] != 0 && board[j] < board[i])\n                inversions++;\n        }\n    }\n    return inversions % 2 == 0;\n}\n\nint is_goal(int *board) {\n    for (int i = 0; i < N; i++) {\n        if (i < N - 1 && board[i] != i + 1)\n            return 0;\n        if (i == N - 1 && board[i] != 0)\n            return 0;\n    }\n    return 1;\n}\n\nint is_valid(int *board, int x, int y) {\n    return x >= 0 && x < 4 && y >= 0 && y < 4;\n}\n\nint get_blank(int *board) {\n    for (int i = 0; i < N; i++) {\n        if (board[i] == 0)\n            return i;\n    }\n    return -1;\n}\n\nvoid swap(int *board, int i, int j) {\n    int temp = board[i];\n    board[i] = board[j];\n    board[j] = temp;\n}\n\nvoid print_board(int *board) {\n    for (int i = 0; i < 4; i++) {\n        for (int j = 0; j < 4; j++) {\n            printf(\"%d \", board[i * 4 + j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\nint solve(int *board, int steps) {\n    if (is_goal(board))\n        return steps;\n\n    int blank = get_blank(board);\n    int x = blank / 4;\n    int y = blank % 4;\n\n    int moves[4][2] = {{x - 1, y}, {x + 1, y}, {x, y - 1}, {x, y + 1}};\n\n    for (int i = 0; i < 4; i++) {\n        int nx = moves[i][0];\n        int ny = moves[i][1];\n        if (is_valid(board, nx, ny)) {\n            swap(board, blank, nx * 4 + ny);\n            int result = solve(board, steps + 1);\n            if (result != -1)\n                return result;\n            swap(board, blank, nx * 4 + ny);\n        }\n    }\n\n    return -1;\n}\n\nint main() {\n    int board[16];\n    for (int i = 0; i < 16; i++) {\n        scanf(\"%d\", &board[i]);\n    }\n\n    if (!is_solvable(board)) {\n        printf(\"-1\\n\");\n        return 0;\n    }\n\n    int steps = solve(board, 0);\n    printf(\"%d\\n\", steps);\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}