{
    "solution_id": "llama3.1-8b-889",
    "problem_id": "p00759",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAX_H = 30;\nconst int MAX_W = 30;\n\nint h, w;\nint map[MAX_H][MAX_W];\nint dist[MAX_H][MAX_W];\nint broken[MAX_H][MAX_W];\n\nvoid bfs(int x, int y) {\n    queue<pair<int, int>> q;\n    q.push({x, y});\n    dist[x][y] = 0;\n    while (!q.empty()) {\n        int cx = q.front().first;\n        int cy = q.front().second;\n        q.pop();\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (map[i][j] == 0 && (i == cx || j == cy)) {\n                    if (dist[i][j] == -1) {\n                        dist[i][j] = dist[cx][cy] + 1;\n                        q.push({i, j});\n                    }\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        cin >> h >> w;\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                map[i][j] = 0;\n                dist[i][j] = -1;\n                broken[i][j] = 0;\n            }\n        }\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                int x;\n                cin >> x;\n                map[i][j] = x;\n            }\n        }\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 && j == 0) continue;\n                if (i == 0) {\n                    if (map[i][j] == 0) {\n                        bfs(i, j);\n                    }\n                } else if (j == 0) {\n                    if (map[i][j] == 0) {\n                        bfs(i, j);\n                    }\n                } else {\n                    if (map[i][j] == 0) {\n                        bfs(i, j);\n                    }\n                }\n            }\n        }\n        int min = 1e9;\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 && j == 0) continue;\n                if (i == 0) {\n                    if (map[i][j] == 0) {\n                        min = min > dist[i][j] ? dist[i][j] : min;\n                    }\n                } else if (j == 0) {\n                    if (map[i][j] == 0) {\n                        min = min > dist[i][j] ? dist[i][j] : min;\n                    }\n                } else {\n                    if (map[i][j] == 0) {\n                        min = min > dist[i][j] ? dist[i][j] : min;\n                    }\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 && j == 0) continue;\n                if (i == 0) {\n                    if (map[i][j] == 0) {\n                        ans = ans > dist[i][j] ? dist[i][j] : ans;\n                    }\n                } else if (j == 0) {\n                    if (map[i][j] == 0) {\n                        ans = ans > dist[i][j] ? dist[i][j] : ans;\n                    }\n                } else {\n                    if (map[i][j] == 0) {\n                        ans = ans > dist[i][j] ? dist[i][j] : ans;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 && j == 0) continue;\n                if (i == 0) {\n                    if (map[i][j] == 0) {\n                        if (dist[i][j] == -1) {\n                            ans = -1;\n                            break;\n                        }\n                    }\n                } else if (j == 0) {\n                    if (map[i][j] == 0) {\n                        if (dist[i][j] == -1) {\n                            ans = -1;\n                            break;\n                        }\n                    }\n                } else {\n                    if (map[i][j] == 0) {\n                        if (dist[i][j] == -1) {\n                            ans = -1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (ans == -1) break;\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}