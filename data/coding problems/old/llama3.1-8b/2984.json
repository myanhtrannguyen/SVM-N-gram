{
    "solution_id": "llama3.1-8b-2984",
    "problem_id": "p01649",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <math.h>\n\n#define MAX_BALLS 11\n#define MAX_WIDTH 1000\n#define MAX_HEIGHT 1000\n#define MAX_RADIUS 100\n#define MAX_VX 10000\n#define MAX_VY 10000\n\ntypedef struct {\n    int x, y;\n} Ball;\n\nvoid reflect(Ball *ball, int w, int h) {\n    if (ball->x < ball->r) {\n        ball->x = 2 * ball->r - ball->x;\n    } else if (ball->x > w - ball->r) {\n        ball->x = 2 * (w - ball->r) - ball->x;\n    }\n    if (ball->y < ball->r) {\n        ball->y = 2 * ball->r - ball->y;\n    } else if (ball->y > h - ball->r) {\n        ball->y = 2 * (h - ball->r) - ball->y;\n    }\n}\n\nvoid collide(Ball *ball1, Ball *ball2, int r) {\n    int dx = ball1->x - ball2->x;\n    int dy = ball1->y - ball2->y;\n    int d = sqrt(dx * dx + dy * dy);\n    if (d < 2 * r) {\n        ball1->x = ball2->x + (ball2->x - ball1->x) * (d - 2 * r) / d;\n        ball1->y = ball2->y + (ball2->y - ball1->y) * (d - 2 * r) / d;\n    }\n}\n\nvoid move(Ball *ball, int vx, int vy, int w, int h, int r) {\n    ball->x += vx;\n    ball->y += vy;\n    if (ball->x - ball->r < 0 || ball->x + ball->r > w) {\n        reflect(ball, w, h);\n    }\n    if (ball->y - ball->r < 0 || ball->y + ball->r > h) {\n        reflect(ball, w, h);\n    }\n}\n\nint main() {\n    int n, w, h, r, vx, vy;\n    int i, j;\n    int stop;\n    int hit;\n    int min_time;\n    int min_index;\n    int result;\n    Ball balls[MAX_BALLS];\n\n    while (scanf(\"%d\", &n) == 1) {\n        if (n == 0) {\n            break;\n        }\n        scanf(\"%d %d %d %d %d\", &w, &h, &r, &vx, &vy);\n        for (i = 0; i < n; i++) {\n            scanf(\"%d %d\", &balls[i].x, &balls[i].y);\n        }\n        hit = 0;\n        stop = 0;\n        min_time = 10000;\n        min_index = -1;\n        for (i = 0; i < n; i++) {\n            balls[i].vx = vx;\n            balls[i].vy = vy;\n            stop = 0;\n            while (stop == 0 && balls[i].x - balls[i].r > 0 && balls[i].x + balls[i].r < w && balls[i].y - balls[i].r > 0 && balls[i].y + balls[i].r < h) {\n                move(&balls[i], vx, vy, w, h, r);\n                for (j = 0; j < n; j++) {\n                    if (i != j) {\n                        collide(&balls[i], &balls[j], r);\n                        if (balls[i].x - balls[i].r > 0 && balls[i].x + balls[i].r < w && balls[i].y - balls[i].r > 0 && balls[i].y + balls[i].r < h) {\n                            stop = 1;\n                        }\n                    }\n                }\n                if (stop == 0) {\n                    if (sqrt(balls[i].x * balls[i].x + balls[i].y * balls[i].y) > 10000) {\n                        stop = 1;\n                    }\n                }\n            }\n            if (stop == 0) {\n                result = -1;\n                break;\n            }\n            if (min_time > sqrt(balls[i].x * balls[i].x + balls[i].y * balls[i].y)) {\n                min_time = sqrt(balls[i].x * balls[i].x + balls[i].y * balls[i].y);\n                min_index = i;\n            }\n        }\n        if (min_index != -1) {\n            for (i = 0; i < n; i++) {\n                if (i != min_index) {\n                    if (sqrt(balls[i].x * balls[i].x + balls[i].y * balls[i].y) < min_time) {\n                        result = i + 1;\n                        break;\n                    }\n                }\n            }\n        }\n        printf(\"%d\\n\", result);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}