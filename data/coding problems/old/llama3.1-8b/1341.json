{
    "solution_id": "llama3.1-8b-1341",
    "problem_id": "p00872",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <map>\n\nusing namespace std;\n\n// Function to parse polynomial expression\nmap<int, int> parsePolynomial(const string& expr) {\n    map<int, int> terms;\n    istringstream iss(expr);\n    string term;\n    while (getline(iss, term, '+')) {\n        if (term[0] == '-') {\n            term = term.substr(1);\n        }\n        size_t caret = term.find('^');\n        int coeff = 1;\n        int power = 0;\n        if (caret != string::npos) {\n            coeff = stoi(term.substr(0, caret));\n            power = stoi(term.substr(caret + 1));\n        } else {\n            coeff = stoi(term);\n            power = 0;\n        }\n        terms[power] += coeff;\n    }\n    return terms;\n}\n\n// Function to calculate GCM of two polynomials\nmap<int, int> gcmPolynomial(const map<int, int>& poly1, const map<int, int>& poly2) {\n    map<int, int> result;\n    for (auto it = poly1.begin(); it != poly1.end(); ++it) {\n        if (poly2.find(it->first) != poly2.end()) {\n            result[it->first] = gcd(it->second, poly2[it->first]);\n        }\n    }\n    return result;\n}\n\n// Function to print polynomial expression\nvoid printPolynomial(const map<int, int>& poly) {\n    bool first = true;\n    for (auto it = poly.rbegin(); it != poly.rend(); ++it) {\n        if (it->second != 0) {\n            if (!first) {\n                cout << \" + \";\n            }\n            first = false;\n            if (it->second == 1 && it->first == 0) {\n                cout << \"1\";\n            } else if (it->second == 1 && it->first == 1) {\n                cout << \"x\";\n            } else if (it->second == 1) {\n                cout << \"x^\" << it->first;\n            } else if (it->first == 0) {\n                cout << it->second;\n            } else {\n                cout << it->second << \"x^\" << it->first;\n            }\n        }\n    }\n    cout << endl;\n}\n\n// Function to calculate GCD of two numbers\nint gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    }\n    return gcd(b, a % b);\n}\n\nint main() {\n    string line;\n    while (getline(cin, line)) {\n        if (line == \".\") {\n            break;\n        }\n        map<int, int> poly1 = parsePolynomial(line);\n        getline(cin, line);\n        map<int, int> poly2 = parsePolynomial(line);\n        map<int, int> gcm = gcmPolynomial(poly1, poly2);\n        printPolynomial(gcm);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}