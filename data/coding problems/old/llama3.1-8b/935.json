{
    "solution_id": "llama3.1-8b-935",
    "problem_id": "p00770",
    "language": "Python",
    "solution": "```python\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef get_prime_caves(m):\n    prime_caves = set()\n    for i in range(1, m + 1):\n        if is_prime(i):\n            prime_caves.add(i)\n    return prime_caves\n\ndef get_descending_route(m, n, prime_caves):\n    route = [(n, 0)]\n    while route[-1][0] > 1:\n        x, y = route[-1]\n        if x % 2 == 0:\n            x //= 2\n            y += 1\n        else:\n            x = (x + 1) // 2\n            y += 1\n        if x in prime_caves:\n            route.append((x, y))\n    return route\n\ndef get_max_prime_caves(route):\n    max_caves = 0\n    max_last_cave = 0\n    for i in range(len(route)):\n        caves = 0\n        last_cave = 0\n        for j in range(i, len(route)):\n            if route[j][0] in prime_caves:\n                caves += 1\n                last_cave = route[j][0]\n        if caves > max_caves or (caves == max_caves and last_cave > max_last_cave):\n            max_caves = caves\n            max_last_cave = last_cave\n    return max_caves, max_last_cave\n\ndef main():\n    prime_caves = get_prime_caves(1000000)\n    while True:\n        m, n = map(int, input().split())\n        if m == 0 and n == 0:\n            break\n        route = get_descending_route(m, n, prime_caves)\n        max_caves, max_last_cave = get_max_prime_caves(route)\n        if max_caves == 0:\n            print(\"0 0\")\n        else:\n            print(max_caves, max_last_cave)\n\nif __name__ == \"__main__\":\n    main()\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}