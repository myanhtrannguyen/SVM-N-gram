{
    "solution_id": "llama3.1-8b-1368",
    "problem_id": "p00879",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\n#define MAX_EQ 100\n#define MAX_MOL 100\n#define MAX_NAME 100\n\ntypedef struct {\n    char name[MAX_NAME];\n    int count;\n} Mol;\n\ntypedef struct {\n    Mol mol[MAX_MOL];\n    int num;\n} Eq;\n\nint gcd(int a, int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n}\n\nint lcm(int a, int b) {\n    return a * b / gcd(a, b);\n}\n\nvoid parse_eq(char *eq, Eq *eqs) {\n    int i, j, k;\n    char *token, *saveptr;\n    token = strtok(eq, \"->\");\n    for (i = 0; i < 2; i++) {\n        eqs[i].num = 0;\n        token = strtok(NULL, \"+\");\n        while (token != NULL) {\n            for (j = 0; j < eqs[i].num; j++) {\n                if (strcmp(eqs[i].mol[j].name, token) == 0) {\n                    eqs[i].mol[j].count++;\n                    break;\n                }\n            }\n            if (j == eqs[i].num) {\n                strcpy(eqs[i].mol[eqs[i].num].name, token);\n                eqs[i].mol[eqs[i].num].count = 1;\n                eqs[i].num++;\n            }\n            token = strtok(NULL, \"+\");\n        }\n    }\n}\n\nvoid print_eq(Eq *eqs) {\n    int i, j;\n    for (i = 0; i < 2; i++) {\n        for (j = 0; j < eqs[i].num; j++) {\n            printf(\"%d \", eqs[i].mol[j].count);\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main() {\n    Eq eqs[MAX_EQ];\n    int i;\n    char eq[MAX_EQ][MAX_EQ];\n    for (i = 0; i < MAX_EQ; i++) {\n        fgets(eq[i], MAX_EQ, stdin);\n        eq[i][strcspn(eq[i], \"\\n\")] = 0;\n        if (strcmp(eq[i], \".\") == 0) break;\n        parse_eq(eq[i], eqs + i);\n    }\n    for (i = 0; i < MAX_EQ; i++) {\n        if (strcmp(eq[i], \".\") == 0) break;\n        int lcm_val = 1;\n        for (int j = 0; j < eqs[i].num; j++) {\n            for (int k = 0; k < eqs[i ^ 1].num; k++) {\n                lcm_val = lcm(lcm_val, lcm(eqs[i].mol[j].count, eqs[i ^ 1].mol[k].count));\n            }\n        }\n        for (int j = 0; j < eqs[i].num; j++) {\n            eqs[i].mol[j].count /= lcm(eqs[i].mol[j].count, lcm_val);\n        }\n        for (int j = 0; j < eqs[i ^ 1].num; j++) {\n            eqs[i ^ 1].mol[j].count /= lcm(eqs[i ^ 1].mol[j].count, lcm_val);\n        }\n        print_eq(eqs + i);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}