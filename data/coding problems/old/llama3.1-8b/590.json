{
    "solution_id": "llama3.1-8b-590",
    "problem_id": "p00684",
    "language": "Java",
    "solution": "```java\nimport java.util.Scanner;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNextLine()) {\n            String expression = scanner.nextLine();\n            try {\n                double result = calculate(expression);\n                System.out.println(formatResult(result));\n            } catch (OverflowException e) {\n                System.out.println(\"overflow\");\n            }\n        }\n        scanner.close();\n    }\n\n    private static double calculate(String expression) throws OverflowException {\n        Pattern pattern = Pattern.compile(\"\\\\d+|\\\\d+\\\\.\\\\d+|i|\\\\(|\\\\)\");\n        Matcher matcher = pattern.matcher(expression);\n        double real = 0;\n        double imag = 0;\n        while (matcher.find()) {\n            String token = matcher.group();\n            if (token.equals(\"+\")) {\n                real += imag;\n                imag = 0;\n            } else if (token.equals(\"-\")) {\n                real -= imag;\n                imag = 0;\n            } else if (token.equals(\"*\")) {\n                double newReal = real * matcher.find() ? matcher.group().equals(\"i\") ? 0 : Double.parseDouble(matcher.group()) : real;\n                double newImag = imag * matcher.find() ? matcher.group().equals(\"i\") ? 0 : Double.parseDouble(matcher.group()) : imag;\n                real = newReal;\n                imag = newImag;\n            } else if (token.equals(\"i\")) {\n                imag += 1;\n            } else {\n                double value = Double.parseDouble(token);\n                if (value > 10000 || value < -10000) {\n                    throw new OverflowException();\n                }\n                if (matcher.find() && matcher.group().equals(\"i\")) {\n                    imag += value;\n                } else {\n                    real += value;\n                }\n            }\n        }\n        return real + imag * 1e-12;\n    }\n\n    private static String formatResult(double result) {\n        if (result == 0) {\n            return \"0\";\n        }\n        if (result < 0) {\n            return String.valueOf(-Math.abs(result));\n        }\n        if (result % 1 == 0) {\n            return String.valueOf((int) result);\n        }\n        if (result % 1 == 0.5) {\n            return String.valueOf((int) result + \"i\");\n        }\n        if (result % 1 == 0.0) {\n            return String.valueOf((int) result);\n        }\n        if (result % 1 == -0.5) {\n            return String.valueOf((int) result - \"i\");\n        }\n        if (result % 1 == -0.0) {\n            return String.valueOf((int) result);\n        }\n        return String.valueOf(result);\n    }\n\n    private static class OverflowException extends Exception {\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}