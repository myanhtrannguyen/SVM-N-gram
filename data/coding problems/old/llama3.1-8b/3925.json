{
    "solution_id": "llama3.1-8b-3925",
    "problem_id": "p02302",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct Point {\n    double x, y;\n};\n\ndouble crossProduct(Point p1, Point p2, Point p3) {\n    return (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x);\n}\n\ndouble area(vector<Point> points) {\n    int n = points.size();\n    double area = 0;\n    for (int i = 0; i < n; i++) {\n        int j = (i + 1) % n;\n        area += crossProduct(points[i], points[j], points[0]);\n    }\n    return abs(area) / 2;\n}\n\ndouble query(vector<Point> points, Point p1, Point p2) {\n    int n = points.size();\n    double area = 0;\n    for (int i = 0; i < n; i++) {\n        int j = (i + 1) % n;\n        if (crossProduct(p1, p2, points[i]) * crossProduct(p1, p2, points[j]) <= 0) {\n            area += crossProduct(p1, p2, points[i]);\n        }\n    }\n    return abs(area) / 2;\n}\n\nint main() {\n    int n;\n    cin >> n;\n    vector<Point> points(n);\n    for (int i = 0; i < n; i++) {\n        cin >> points[i].x >> points[i].y;\n    }\n    int q;\n    cin >> q;\n    while (q--) {\n        int p1x, p1y, p2x, p2y;\n        cin >> p1x >> p1y >> p2x >> p2y;\n        Point p1 = {p1x, p1y};\n        Point p2 = {p2x, p2y};\n        cout << fixed << setprecision(10) << query(points, p1, p2) << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}