{
    "solution_id": "llama3.1-8b-1639",
    "problem_id": "p02949",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int N = 2505;\n    static final int M = 5005;\n    static final int INF = 0x3f3f3f3f;\n\n    static int n, m, p;\n    static int[] head = new int[N];\n    static int[] to = new int[M];\n    static int[] nxt = new int[M];\n    static int[] w = new int[M];\n    static int[] f = new int[N];\n    static int[] g = new int[N];\n    static int[] d = new int[N];\n    static int[] vis = new int[N];\n    static int[] dep = new int[N];\n    static int[] mx = new int[N];\n\n    static void add(int u, int v, int c) {\n        to[++m] = v;\n        w[m] = c;\n        nxt[m] = head[u];\n        head[u] = m;\n    }\n\n    static void dfs(int u, int t) {\n        if (u == n) {\n            mx[t] = Math.max(mx[t], g[u]);\n            return;\n        }\n        for (int i = head[u]; i != 0; i = nxt[i]) {\n            int v = to[i];\n            if (dep[v] == dep[u] + 1) {\n                dfs(v, t);\n            }\n        }\n        for (int i = head[u]; i != 0; i = nxt[i]) {\n            int v = to[i];\n            if (dep[v] == dep[u] + 1) {\n                continue;\n            }\n            dep[v] = dep[u] + 1;\n            dfs(v, t + 1);\n        }\n    }\n\n    static void solve() throws IOException {\n        n = readInt();\n        m = readInt();\n        p = readInt();\n        for (int i = 1; i <= n; i++) {\n            head[i] = 0;\n        }\n        for (int i = 1; i <= m; i++) {\n            int u = readInt();\n            int v = readInt();\n            int c = readInt();\n            add(u, v, c);\n        }\n        for (int i = 1; i <= n; i++) {\n            f[i] = -INF;\n            g[i] = 0;\n            d[i] = 0;\n            vis[i] = 0;\n            mx[i] = 0;\n        }\n        f[1] = 0;\n        d[1] = 0;\n        vis[1] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                vis[j] = 0;\n            }\n            for (int j = 1; j <= n; j++) {\n                if (vis[j] == 0) {\n                    int u = j;\n                    while (u != 0) {\n                        for (int k = head[u]; k != 0; k = nxt[k]) {\n                            int v = to[k];\n                            if (f[v] < f[u] + w[k]) {\n                                f[v] = f[u] + w[k];\n                                d[v] = d[u] + 1;\n                            }\n                        }\n                        u = d[u] == d[v] ? v : 0;\n                    }\n                }\n            }\n            for (int j = 1; j <= n; j++) {\n                if (f[j] != -INF) {\n                    g[j] = Math.max(g[j], f[j] / p * p);\n                }\n            }\n            for (int j = 1; j <= n; j++) {\n                if (f[j] != -INF) {\n                    vis[j] = 1;\n                }\n            }\n            for (int j = 1; j <= n; j++) {\n                if (vis[j] == 0) {\n                    dfs(j, 1);\n                }\n            }\n            for (int j = 1; j <= n; j++) {\n                if (f[j] != -INF) {\n                    g[j] = Math.max(g[j], mx[j]);\n                }\n            }\n        }\n        if (g[n] == 0) {\n            out.println(-1);\n        } else {\n            out.println(g[n]);\n        }\n    }\n\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter out = new PrintWriter(System.out);\n\n    public static void main(String[] args) throws IOException {\n        solve();\n        out.close();\n    }\n\n    static int readInt() throws IOException {\n        int x = 0;\n        int f = 1;\n        char ch = (char) br.read();\n        while (ch < '0' || ch > '9') {\n            if (ch == '-') {\n                f = -1;\n            }\n            ch = (char) br.read();\n        }\n        while (ch >= '0' && ch <= '9') {\n            x = x * 10 + ch - '0';\n            ch = (char) br.read();\n        }\n        return x * f;\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}