{
    "solution_id": "llama3.1-8b-2431",
    "problem_id": "p03603",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static int N;\n    static int[] P, X;\n    static long[] sum;\n    static long[] min;\n    static long[] max;\n    static boolean[] vis;\n    static boolean[] dp;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        N = Integer.parseInt(st.nextToken());\n        P = new int[N + 1];\n        X = new int[N + 1];\n        sum = new long[N + 1];\n        min = new long[N + 1];\n        max = new long[N + 1];\n        vis = new boolean[N + 1];\n        dp = new boolean[N + 1];\n        dp[0] = true;\n        st = new StringTokenizer(br.readLine());\n        for (int i = 1; i <= N; i++) {\n            P[i] = Integer.parseInt(st.nextToken());\n            X[i] = Integer.parseInt(st.nextToken());\n        }\n        for (int i = 1; i <= N; i++) {\n            sum[i] = X[i];\n            min[i] = X[i];\n            max[i] = X[i];\n        }\n        for (int i = 1; i <= N; i++) {\n            dfs(i);\n        }\n        for (int i = 1; i <= N; i++) {\n            if (dp[i]) {\n                pw.println(\"POSSIBLE\");\n                pw.close();\n                return;\n            }\n        }\n        pw.println(\"IMPOSSIBLE\");\n        pw.close();\n    }\n\n    static void dfs(int u) {\n        vis[u] = true;\n        sum[u] = X[u];\n        min[u] = X[u];\n        max[u] = X[u];\n        for (int v = P[u]; v != 0; v = P[v]) {\n            if (vis[v]) {\n                sum[u] += sum[v];\n                min[u] = Math.min(min[u], min[v]);\n                max[u] = Math.max(max[u], max[v]);\n            }\n        }\n        if (sum[u] < min[u] || sum[u] > max[u]) {\n            dp[u] = true;\n        }\n        for (int v = P[u]; v != 0; v = P[v]) {\n            if (!vis[v]) {\n                dfs(v);\n                sum[u] += sum[v];\n                min[u] = Math.min(min[u], min[v]);\n                max[u] = Math.max(max[u], max[v]);\n                if (sum[u] < min[u] || sum[u] > max[u]) {\n                    dp[u] = true;\n                }\n            }\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}