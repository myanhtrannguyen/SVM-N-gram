{
    "solution_id": "llama3.1-8b-3948",
    "problem_id": "p02308",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <math.h>\n\ntypedef struct {\n    double x, y;\n} Point;\n\ntypedef struct {\n    Point p1, p2;\n} Line;\n\ntypedef struct {\n    double x, y, r;\n} Circle;\n\ndouble calculateDistance(Point p1, Point p2) {\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2));\n}\n\ndouble calculateIntersection(Line line, Circle circle) {\n    double a = line.p2.x - line.p1.x;\n    double b = line.p2.y - line.p1.y;\n    double c = line.p1.x - circle.x;\n    double d = line.p1.y - circle.y;\n    double e = a * a + b * b;\n    double f = 2 * (a * c + b * d);\n    double g = c * c + d * d - circle.r * circle.r;\n    double D = f * f - 4 * e * g;\n    if (D < 0) return -1;\n    double t1 = (-f - sqrt(D)) / (2 * e);\n    double t2 = (-f + sqrt(D)) / (2 * e);\n    if (t1 >= 0 && t1 <= 1) return line.p1.x + t1 * (line.p2.x - line.p1.x);\n    if (t2 >= 0 && t2 <= 1) return line.p1.x + t2 * (line.p2.x - line.p1.x);\n    return -1;\n}\n\nint main() {\n    int q;\n    Circle circle;\n    scanf(\"%lf %lf %lf\", &circle.x, &circle.y, &circle.r);\n    scanf(\"%d\", &q);\n    Line lines[q];\n    for (int i = 0; i < q; i++) {\n        scanf(\"%lf %lf %lf %lf\", &lines[i].p1.x, &lines[i].p1.y, &lines[i].p2.x, &lines[i].p2.y);\n    }\n    for (int i = 0; i < q; i++) {\n        double x = calculateIntersection(lines[i], circle);\n        if (x == -1) printf(\"No intersection\\n\");\n        else {\n            double y = (x - circle.x) * (lines[i].p2.y - lines[i].p1.y) / (lines[i].p2.x - lines[i].p1.x) + lines[i].p1.y;\n            printf(\"%.6lf %.6lf %.6lf %.6lf\\n\", x, y, x, y);\n        }\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}