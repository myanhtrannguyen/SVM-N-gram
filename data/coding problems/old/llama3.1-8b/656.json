{
    "solution_id": "llama3.1-8b-656",
    "problem_id": "p00701",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAX_CUBES 100\n\ntypedef struct {\n    int top;\n    int size;\n    int data[MAX_CUBES];\n} Stack;\n\nvoid initStack(Stack *s) {\n    s->top = -1;\n    s->size = 0;\n}\n\nint isEmpty(Stack *s) {\n    return s->top == -1;\n}\n\nint isFull(Stack *s) {\n    return s->top == MAX_CUBES - 1;\n}\n\nvoid push(Stack *s, int value) {\n    if (isFull(s)) {\n        printf(\"Stack overflow\\n\");\n        exit(1);\n    }\n    s->data[++s->top] = value;\n    s->size++;\n}\n\nint pop(Stack *s) {\n    if (isEmpty(s)) {\n        printf(\"Stack underflow\\n\");\n        exit(1);\n    }\n    return s->data[s->top--];\n}\n\nint peek(Stack *s) {\n    if (isEmpty(s)) {\n        printf(\"Stack underflow\\n\");\n        exit(1);\n    }\n    return s->data[s->top];\n}\n\nvoid clearStack(Stack *s) {\n    s->top = -1;\n    s->size = 0;\n}\n\nint main() {\n    int m, i, j, n;\n    Stack stacks[MAX_CUBES];\n    for (i = 0; i < MAX_CUBES; i++) {\n        initStack(&stacks[i]);\n    }\n\n    while (scanf(\"%d\", &m) == 1) {\n        if (m == 0) {\n            break;\n        }\n\n        for (i = 0; i < m; i++) {\n            initStack(&stacks[i]);\n        }\n\n        for (i = 0; i < m; i++) {\n            scanf(\"%d %d\", &i, &j);\n            if (j == 0) {\n                clearStack(&stacks[i]);\n            } else {\n                push(&stacks[j - 1], i);\n                while (!isEmpty(&stacks[i]) && peek(&stacks[i]) != i) {\n                    push(&stacks[j - 1], pop(&stacks[i]));\n                }\n                clearStack(&stacks[i]);\n            }\n        }\n\n        for (i = 0; i < m; i++) {\n            printf(\"%d\\n\", stacks[i].size);\n        }\n        printf(\"end\\n\");\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}