{
    "solution_id": "llama3.1-8b-2907",
    "problem_id": "p03722",
    "language": "Java",
    "solution": "```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    static class Edge implements Comparable<Edge> {\n        int to;\n        long cost;\n\n        public Edge(int to, long cost) {\n            this.to = to;\n            this.cost = cost;\n        }\n\n        @Override\n        public int compareTo(Edge o) {\n            return Long.compare(o.cost, this.cost);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        List<Edge>[] graph = new List[n + 1];\n        for (int i = 1; i <= n; i++) {\n            graph[i] = new ArrayList<>();\n        }\n        for (int i = 1; i <= m; i++) {\n            st = new StringTokenizer(br.readLine());\n            int a = Integer.parseInt(st.nextToken());\n            int b = Integer.parseInt(st.nextToken());\n            long c = Long.parseLong(st.nextToken());\n            graph[a].add(new Edge(b, c));\n        }\n        long[] dp = new long[n + 1];\n        Arrays.fill(dp, Long.MIN_VALUE);\n        dp[1] = 0;\n        PriorityQueue<Edge> pq = new PriorityQueue<>();\n        pq.add(new Edge(1, 0));\n        while (!pq.isEmpty()) {\n            Edge edge = pq.poll();\n            int u = edge.to;\n            long cost = edge.cost;\n            if (u == n) {\n                System.out.println(cost);\n                return;\n            }\n            for (Edge e : graph[u]) {\n                int v = e.to;\n                long c = e.cost;\n                if (dp[v] < dp[u] + c) {\n                    dp[v] = dp[u] + c;\n                    pq.add(new Edge(v, dp[v]));\n                }\n            }\n        }\n        System.out.println(\"inf\");\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}