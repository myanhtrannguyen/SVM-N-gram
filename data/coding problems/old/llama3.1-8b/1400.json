{
    "solution_id": "llama3.1-8b-1400",
    "problem_id": "p02757",
    "language": "Python",
    "solution": "```python\nimport sys\ninput = sys.stdin.readline\n\ndef read():\n    return int(input())\n\ndef read_str():\n    return input().strip()\n\ndef read_ints():\n    return map(int, input().split())\n\ndef read_list():\n    return list(map(int, input().split()))\n\ndef read_strs():\n    return input().split()\n\ndef read_ints_minus_one():\n    return map(lambda x:int(x)-1, input().split())\n\ndef read_list_minus_one():\n    return list(map(lambda x:int(x)-1, input().split()))\n\ndef read_strs_minus_one():\n    return list(map(lambda x:int(x)-1, input().split()))\n\ndef print_list(l):\n    print(' '.join(map(str, l)))\n\ndef print_list_minus_one(l):\n    print(' '.join(map(lambda x:str(x+1), l)))\n\ndef print_list_str(l):\n    print(' '.join(map(str, l)))\n\ndef print_list_int(l):\n    print(' '.join(map(str, l)))\n\ndef print_list_int_minus_one(l):\n    print(' '.join(map(lambda x:str(x+1), l)))\n\ndef print_list_str_minus_one(l):\n    print(' '.join(map(lambda x:str(x+1), l)))\n\ndef print_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_int_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_int_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_str_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list_str_list_int_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_str_list_int_list_str_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:str(y+1), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(str, y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_int_list_str_list_str_list_str_list_int_list_str_list_minus_one(l):\n    print(' '.join(map(lambda x:' '.join(map(lambda y:' '.join(map(lambda z:str(z+1), y)), x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_str_list_str_list(l):\n    print(' '.join(map(lambda x:' '.join(map(str, x)), l)))\n\ndef print_list_str_list_str_list_int_list_str_list_str",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}