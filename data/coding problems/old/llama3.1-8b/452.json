{
    "solution_id": "llama3.1-8b-452",
    "problem_id": "p00606",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define MAX_ROOMS 9\n#define MAX_BATTERY 15\n#define EPS 1e-6\n\ntypedef struct {\n    int battery;\n    char start, battery_room, junk_room;\n    int visited[MAX_ROOMS];\n    double prob[MAX_ROOMS];\n} State;\n\nint get_direction(char direction) {\n    switch (direction) {\n        case 'N': return 0;\n        case 'S': return 1;\n        case 'E': return 2;\n        case 'W': return 3;\n        default: return -1;\n    }\n}\n\nvoid print_prob(double prob) {\n    if (prob < EPS) printf(\"0.00000000\\n\");\n    else printf(\"%.6f\\n\", prob);\n}\n\nint main() {\n    int n;\n    char s, t, b;\n    State state;\n\n    while (scanf(\"%d %c %c %c\", &state.battery, &s, &t, &b) == 4) {\n        if (state.battery == 0) {\n            print_prob(0.0);\n            continue;\n        }\n\n        memset(state.visited, 0, sizeof(state.visited));\n        memset(state.prob, 0, sizeof(state.prob));\n\n        state.start = s;\n        state.battery_room = t;\n        state.junk_room = b;\n\n        state.prob[get_direction(s)] = 1.0;\n\n        for (int i = 0; i < state.battery; i++) {\n            int new_prob = 0;\n            for (int j = 0; j < 4; j++) {\n                int direction = (j + 1) % 4;\n                int new_state = (get_direction(s) + direction) % 4;\n                if (state.visited[new_state]) continue;\n                state.visited[new_state] = 1;\n\n                if (s == t && new_state == get_direction(t)) {\n                    state.prob[new_state] = 0.25;\n                } else if (s == b || t == b || b == s) {\n                    continue;\n                } else {\n                    state.prob[new_state] = 0.25;\n                }\n\n                new_prob += state.prob[new_state];\n            }\n\n            for (int j = 0; j < 4; j++) {\n                state.prob[j] /= new_prob;\n            }\n        }\n\n        print_prob(state.prob[get_direction(s)]);\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}