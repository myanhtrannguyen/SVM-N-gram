{
    "solution_id": "llama3.1-8b-3418",
    "problem_id": "p01953",
    "language": "Java",
    "solution": "```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static class Pair implements Comparable<Pair> {\n        int first;\n        int second;\n\n        public Pair(int first, int second) {\n            this.first = first;\n            this.second = second;\n        }\n\n        public int compareTo(Pair other) {\n            return Integer.compare(this.first, other.first);\n        }\n    }\n\n    public static void main(String[] args) {\n        FastReader sc = new FastReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int c = sc.nextInt();\n        int[] pos = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            int x = sc.nextInt();\n            pos[x] = i;\n        }\n        long[] w = new long[n + 1];\n        for (int i = 1; i <= n; i++) {\n            w[i] = sc.nextInt();\n        }\n        long[] dp = new long[n + 1];\n        for (int i = n; i >= 1; i--) {\n            int j = pos[i];\n            dp[i] = dp[j + 1] + w[i] * (n - j) * c;\n            if (j > 1) {\n                dp[i] = Math.min(dp[i], dp[j - 1] + w[i] * (j - 1) * c + sum(w, j, n));\n            }\n        }\n        out.println(dp[1]);\n        out.close();\n    }\n\n    static long sum(long[] w, int l, int r) {\n        long sum = 0;\n        for (int i = l; i <= r; i++) {\n            sum += w[i];\n        }\n        return sum;\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}