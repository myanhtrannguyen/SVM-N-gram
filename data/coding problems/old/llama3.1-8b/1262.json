{
    "solution_id": "llama3.1-8b-1262",
    "problem_id": "p00852",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Rule {\n        char from;\n        String to;\n\n        public Rule(char from, String to) {\n            this.from = from;\n            this.to = to;\n        }\n    }\n\n    static class State {\n        int length;\n        String name;\n        boolean[] visited;\n\n        public State(int length, String name) {\n            this.length = length;\n            this.name = name;\n            this.visited = new boolean[26];\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        while (!input[0].equals(\"0\") && !input[1].equals(\"0\")) {\n            int n = Integer.parseInt(input[0]);\n            int l = Integer.parseInt(input[1]);\n            Map<Character, Rule> rules = new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                input = br.readLine().split(\"=\");\n                char from = input[0].charAt(0);\n                String to = input[1];\n                rules.put(from, new Rule(from, to));\n            }\n            Queue<State> queue = new LinkedList<>();\n            queue.add(new State(1, \"S\"));\n            Set<String> visited = new HashSet<>();\n            while (!queue.isEmpty()) {\n                State state = queue.poll();\n                if (state.length == l) {\n                    String name = state.name;\n                    if (!visited.contains(name)) {\n                        visited.add(name);\n                        System.out.println(name);\n                        break;\n                    }\n                }\n                for (Map.Entry<Character, Rule> entry : rules.entrySet()) {\n                    char from = entry.getKey();\n                    Rule rule = entry.getValue();\n                    if (state.name.indexOf(from) != -1) {\n                        String newName = state.name.replaceFirst(String.valueOf(from), rule.to);\n                        if (newName.length() <= l) {\n                            queue.add(new State(state.length + rule.to.length() - 1, newName));\n                        }\n                    }\n                }\n            }\n            if (queue.isEmpty()) {\n                System.out.println(\"-\");\n            }\n            input = br.readLine().split(\" \");\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}