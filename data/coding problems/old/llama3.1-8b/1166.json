{
    "solution_id": "llama3.1-8b-1166",
    "problem_id": "p00828",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNextLine()) {\n            String[] line = scanner.nextLine().split(\" \");\n            if (line.length == 0) {\n                break;\n            }\n            int n = Integer.parseInt(line[0]);\n            int m = Integer.parseInt(line[1]);\n            int p = Integer.parseInt(line[2]);\n            int[][] board = new int[n][n][n];\n            int blackCount = 0;\n            int whiteCount = 0;\n            int moves = 0;\n            int turn = 0;\n            while (p-- > 0) {\n                line = scanner.nextLine().split(\" \");\n                int x = Integer.parseInt(line[0]) - 1;\n                int y = Integer.parseInt(line[1]) - 1;\n                for (int i = 0; i < n; i++) {\n                    if (board[x][y][i] == 0) {\n                        board[x][y][i] = turn;\n                        break;\n                    }\n                }\n                moves++;\n                if (checkSequence(board, n, m, turn)) {\n                    if (turn == 0) {\n                        blackCount++;\n                    } else {\n                        whiteCount++;\n                    }\n                    turn = 1 - turn;\n                }\n                if (moves == p) {\n                    break;\n                }\n            }\n            if (blackCount > whiteCount) {\n                System.out.println(\"Black \" + moves);\n            } else if (whiteCount > blackCount) {\n                System.out.println(\"White \" + moves);\n            } else {\n                System.out.println(\"Draw\");\n            }\n        }\n    }\n\n    public static boolean checkSequence(int[][][] board, int n, int m, int turn) {\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for (int k = 0; k < n; k++) {\n                    if (board[i][j][k] == turn) {\n                        int count = 1;\n                        for (int x = -1; x <= 1; x++) {\n                            for (int y = -1; y <= 1; y++) {\n                                for (int z = -1; z <= 1; z++) {\n                                    if (x == 0 && y == 0 && z == 0) {\n                                        continue;\n                                    }\n                                    int newX = i + x;\n                                    int newY = j + y;\n                                    int newZ = k + z;\n                                    if (newX >= 0 && newX < n && newY >= 0 && newY < n && newZ >= 0 && newZ < n) {\n                                        if (board[newX][newY][newZ] == turn) {\n                                            count++;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (count >= m) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}