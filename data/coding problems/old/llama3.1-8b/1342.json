{
    "solution_id": "llama3.1-8b-1342",
    "problem_id": "p00872",
    "language": "Java",
    "solution": "```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class Polynomial {\n        List<Pair> terms;\n\n        public Polynomial() {\n            terms = new ArrayList<>();\n        }\n\n        public void addTerm(int coeff, int exp) {\n            terms.add(new Pair(coeff, exp));\n        }\n\n        public void subtractTerm(int coeff, int exp) {\n            addTerm(-coeff, exp);\n        }\n\n        public void multiply(Polynomial other) {\n            for (Pair term : other.terms) {\n                addTerm(term.coeff * this.terms.get(0).coeff, term.exp + this.terms.get(0).exp);\n                for (int i = 1; i < this.terms.size(); i++) {\n                    addTerm(term.coeff * this.terms.get(i).coeff, term.exp + this.terms.get(i).exp);\n                }\n            }\n        }\n\n        public void gcd(Polynomial other) {\n            if (this.terms.size() < other.terms.size()) {\n                Polynomial temp = this;\n                this = other;\n                other = temp;\n            }\n            for (int i = 0; i < other.terms.size(); i++) {\n                int exp = this.terms.get(i).exp;\n                int coeff = this.terms.get(i).coeff;\n                while (exp >= other.terms.get(i).exp) {\n                    subtractTerm(coeff, exp);\n                    exp--;\n                }\n            }\n        }\n\n        public void print() {\n            for (int i = terms.size() - 1; i >= 0; i--) {\n                if (terms.get(i).coeff != 0) {\n                    if (terms.get(i).coeff > 0) {\n                        System.out.print(\"+\");\n                    }\n                    if (terms.get(i).coeff != 1 || terms.get(i).exp == 0) {\n                        System.out.print(terms.get(i).coeff);\n                    }\n                    if (terms.get(i).exp > 0) {\n                        System.out.print(\"x\");\n                        if (terms.get(i).exp > 1) {\n                            System.out.print(\"^\" + terms.get(i).exp);\n                        }\n                    }\n                }\n            }\n            System.out.println();\n        }\n    }\n\n    static class Pair {\n        int coeff;\n        int exp;\n\n        public Pair(int coeff, int exp) {\n            this.coeff = coeff;\n            this.exp = exp;\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line;\n        while ((line = br.readLine()) != null && !line.equals(\".\")) {\n            Polynomial p1 = new Polynomial();\n            Polynomial p2 = new Polynomial();\n            String[] terms1 = line.substring(1).split(\"\\\\+\");\n            for (String term : terms1) {\n                if (term.startsWith(\"-\")) {\n                    term = term.substring(1);\n                    p1.subtractTerm(1, 0);\n                }\n                String[] parts = term.split(\"x\");\n                if (parts.length == 1) {\n                    p1.addTerm(Integer.parseInt(parts[0]), 0);\n                } else if (parts.length == 2) {\n                    String[] expParts = parts[1].split(\"\\\\^\");\n                    if (expParts.length == 1) {\n                        p1.addTerm(Integer.parseInt(parts[0]), Integer.parseInt(expParts[0]));\n                    } else {\n                        p1.addTerm(Integer.parseInt(parts[0]), Integer.parseInt(expParts[1]));\n                    }\n                } else {\n                    p1.addTerm(Integer.parseInt(parts[0]), 1);\n                }\n            }\n            line = br.readLine();\n            String[] terms2 = line.substring(1).split(\"\\\\+\");\n            for (String term : terms2) {\n                if (term.startsWith(\"-\")) {\n                    term = term.substring(1);\n                    p2.subtractTerm(1, 0);\n                }\n                String[] parts = term.split(\"x\");\n                if (parts.length == 1) {\n                    p2.addTerm(Integer.parseInt(parts[0]), 0);\n                } else if (parts.length == 2) {\n                    String[] expParts = parts[1].split(\"\\\\^\");\n                    if (expParts.length == 1) {\n                        p2.addTerm(Integer.parseInt(parts[0]), Integer.parseInt(expParts[0]));\n                    } else {\n                        p2.addTerm(Integer.parseInt(parts[0]), Integer.parseInt(expParts[1]));\n                    }\n                } else {\n                    p2.addTerm(Integer.parseInt(parts[0]), 1);\n                }\n            }\n            p1.gcd(p2);\n            p1.print();\n        }\n    }\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}