{
    "solution_id": "llama3.1-8b-3121",
    "problem_id": "p01708",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <string>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nstruct Point {\n    double x, y;\n};\n\nstruct Line {\n    double a, b, c;\n};\n\nPoint parsePoint(const string& s) {\n    size_t pos = s.find(',');\n    double x = stod(s.substr(0, pos));\n    double y = stod(s.substr(pos + 1));\n    return {x, y};\n}\n\nLine parseLine(const string& s) {\n    size_t pos = s.find('@');\n    string line = s.substr(0, pos);\n    string factor = s.substr(pos + 1);\n    pos = factor.find(',');\n    double a1 = stod(factor.substr(0, pos));\n    double b1 = stod(factor.substr(pos + 1));\n    pos = line.find(',');\n    double a2 = stod(line.substr(0, pos));\n    double b2 = stod(line.substr(pos + 1));\n    double c1 = -a1 * parsePoint(line).x - b1 * parsePoint(line).y;\n    double c2 = -a2 * parsePoint(factor).x - b2 * parsePoint(factor).y;\n    return {a1 - a2, b1 - b2, c1 - c2};\n}\n\nPoint parseExpression(const string& s) {\n    size_t pos = s.find('@');\n    if (pos == string::npos) {\n        return parsePoint(s);\n    }\n    string left = s.substr(0, pos);\n    string right = s.substr(pos + 1);\n    if (left[0] == '(' && left.back() == ')') {\n        return parsePoint(left.substr(1, left.size() - 2));\n    }\n    if (right[0] == '(' && right.back() == ')') {\n        return parsePoint(right.substr(1, right.size() - 2));\n    }\n    Line line = parseLine(left);\n    Point point = parsePoint(right);\n    if (line.a == 0 && line.b == 0) {\n        return {line.c / -line.b, 0};\n    }\n    double x = (line.c - line.b * point.y) / -line.a;\n    double y = line.a * x + line.b * point.y;\n    return {x, y};\n}\n\nint main() {\n    string line;\n    while (getline(cin, line)) {\n        if (line == \"#\") {\n            break;\n        }\n        Point point = parseExpression(line);\n        printf(\"%.10f %.10f\\n\", point.x, point.y);\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}