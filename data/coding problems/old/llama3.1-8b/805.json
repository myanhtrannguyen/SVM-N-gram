{
    "solution_id": "llama3.1-8b-805",
    "problem_id": "p00738",
    "language": "C++",
    "solution": "```cpp\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nstruct Block {\n    int minX, minY, maxX, maxY, h;\n};\n\nstruct Point {\n    double x, y;\n};\n\ndouble distance(Point p1, Point p2) {\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2));\n}\n\nbool isInsideBlock(Point p, Block b) {\n    return (b.minX <= p.x && p.x <= b.maxX && b.minY <= p.y && p.y <= b.maxY);\n}\n\nbool isOnCourse(Point p, Point start, Point end) {\n    return (start.x <= p.x && p.x <= end.x && start.y <= p.y && p.y <= end.y);\n}\n\nbool isCollisionFree(Point p, vector<Block> blocks) {\n    for (Block b : blocks) {\n        if (isInsideBlock(p, b)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndouble checkRadius(Point start, Point end, vector<Block> blocks, double radius) {\n    Point p = {start.x + radius * (end.x - start.x) / distance(start, end), start.y + radius * (end.y - start.y) / distance(start, end)};\n    return isCollisionFree(p, blocks) ? radius : -1;\n}\n\ndouble findMaxRadius(Point start, Point end, vector<Block> blocks) {\n    double maxRadius = 0;\n    for (int i = 0; i < 1000; i++) {\n        double radius = i / 10.0;\n        double result = checkRadius(start, end, blocks, radius);\n        if (result != -1 && result > maxRadius) {\n            maxRadius = result;\n        }\n    }\n    return maxRadius;\n}\n\nint main() {\n    int n;\n    while (cin >> n && n != 0) {\n        Point start, end;\n        cin >> start.x >> start.y >> end.x >> end.y;\n        vector<Block> blocks;\n        for (int i = 0; i < n; i++) {\n            Block b;\n            cin >> b.minX >> b.minY >> b.maxX >> b.maxY >> b.h;\n            blocks.push_back(b);\n        }\n        double maxRadius = findMaxRadius(start, end, blocks);\n        if (isOnCourse(start, end, blocks[0])) {\n            maxRadius = 0;\n        }\n        cout << fixed << setprecision(10) << maxRadius << endl;\n    }\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}