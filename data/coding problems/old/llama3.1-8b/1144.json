{
    "solution_id": "llama3.1-8b-1144",
    "problem_id": "p00823",
    "language": "C",
    "solution": "```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n\n#define MAX_ATOMS 1000000\n#define MAX_FORMULA 80\n#define MAX_TABLE 100\n\ntypedef struct {\n    char symbol[10];\n    int weight;\n} Atom;\n\ntypedef struct {\n    char symbol[10];\n    int count;\n} Formula;\n\nint get_int() {\n    int num;\n    scanf(\"%d\", &num);\n    return num;\n}\n\nvoid get_formula(Formula *formula) {\n    char c;\n    int i = 0;\n    while ((c = getchar()) != '\\n') {\n        if (c == '(') {\n            formula->count = get_int();\n            getchar(); // Consume the ')'\n        } else if (c == ')') {\n            break;\n        } else {\n            formula->symbol[i++] = c;\n            formula->symbol[i] = '\\0';\n        }\n    }\n}\n\nint get_weight(Atom *atoms, int num_atoms, char *symbol) {\n    for (int i = 0; i < num_atoms; i++) {\n        if (strcmp(atoms[i].symbol, symbol) == 0) {\n            return atoms[i].weight;\n        }\n    }\n    return -1; // Unknown symbol\n}\n\nint calculate_weight(Atom *atoms, int num_atoms, Formula *formula) {\n    int weight = 0;\n    for (int i = 0; i < strlen(formula->symbol); i++) {\n        if (isupper(formula->symbol[i])) {\n            weight += get_weight(atoms, num_atoms, formula->symbol + i);\n        } else {\n            int count = get_weight(atoms, num_atoms, formula->symbol + i);\n            if (count == -1) {\n                return -1; // Unknown symbol\n            }\n            weight += count * (formula->symbol[i + 1] - '0');\n            i++;\n        }\n    }\n    return weight;\n}\n\nint main() {\n    Atom atoms[MAX_TABLE];\n    int num_atoms = 0;\n    char c;\n    while ((c = getchar()) != '\\n') {\n        if (c == ' ') {\n            continue;\n        }\n        if (c == 'E' && num_atoms > 0) {\n            break;\n        }\n        scanf(\"%9s %d\", atoms[num_atoms].symbol, &atoms[num_atoms].weight);\n        num_atoms++;\n    }\n\n    int num_formulas = 0;\n    while (1) {\n        Formula formula;\n        get_formula(&formula);\n        if (formula.symbol[0] == '0') {\n            break;\n        }\n        int weight = calculate_weight(atoms, num_atoms, &formula);\n        if (weight == -1) {\n            printf(\"UNKNOWN\\n\");\n        } else {\n            printf(\"%d\\n\", weight);\n        }\n    }\n\n    return 0;\n}\n```",
    "model": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "prompt": "You are a university student working on a programming assignment for a course. Your task is to provide the coding solution to a problem using the most appropriate programming language and practices for the given scenario. Your output should be only the code, without any explanations. Ensure the code is functional, correct for the specified language. Do not include any introductory text or output besides the code itself."
}